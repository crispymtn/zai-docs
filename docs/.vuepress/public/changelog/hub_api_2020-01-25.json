{
  "openapi": "3.0.0",
  "info": {
    "title": "Zaikio Hub API",
    "description": "This is the documentation of the Zaikio Hub API Endpoints.\n## Provided OAuth Scopes\n- `directory.person.r`, `directory.person.w`, `directory.person.rw` [`Person`]: Read basic information of the person (`GET /person/*`) and/or update profile (`PATCH /person`)\n- `directory.organization.r` [`Organization`]: Read basic information about the organization (`GET /organization`)\n- `directory.organization_members.r` [`Organization`]: Read basic information of the members of an organization (`GET /organization/memberships`)\n- `directory.sites.r`, `directory.sites.w`, `directory.sites.rw` [`Organization`, `Person`]: Read and/or manage sites\n- `directory.machines.r` [`Organization`, `Person`]: Basic organization information, sites and machines (`GET /*`)\n- `directory.machines.rw` [`Organization`, `Person`]: Basic organization information and managing sites and machines (`GET/POST/PUT/DELETE /*`)\n- `directory.software.rw`, `directory.software.r`, `directory.software.w` [`Organization`, `Person`]: Manage software assets (`GET/POST/PUT/DELETE /*`)\n- `directory.manufactured_machines.w`, `directory.manufactured_machines.w`, `directory.manufactured_machines.rw` [`Organization`, `Person`]: Managing machines as a manufacturer\n- `directory.organizations.r`, `directory.organizations.w`, `directory.organizations.rw` [`Person`]: Create an organization and make the current person bearer the owner (`POST /person/organizations`) or read organization details\n- `directory.business_relationships.r`, `directory.business_relationships.w`, `directory.business_relationships.rw` [`Organization`]: Manage business relationships to other organaizations\n",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://hub.zaikio.com/api/v1/",
      "description": "Production server (uses live data)"
    },
    {
      "url": "https://hub.sandbox.zaikio.com/api/v1/",
      "description": "Sandbox server (uses test data)"
    }
  ],
  "tags": [
    {
      "name": "Person"
    },
    {
      "name": "Person's Organization"
    },
    {
      "name": "Organisation"
    },
    {
      "name": "Machines"
    },
    {
      "name": "Specialists"
    },
    {
      "name": "Software"
    },
    {
      "name": "Sites"
    },
    {
      "name": "JWT Public Keys"
    },
    {
      "name": "Roles"
    },
    {
      "name": "Revoked Access Tokens"
    },
    {
      "name": "Subscriptions & Connections"
    },
    {
      "name": "App"
    },
    {
      "name": "Manufacturer"
    }
  ],
  "paths": {
    "/person": {
      "get": {
        "tags": [
          "Person"
        ],
        "summary": "Get authenticated person",
        "operationId": "getPerson",
        "description": "Returns the currently authenticated person.\n- needed bearer: `Person`\n- needed scopes: `directory.person.r`\n",
        "parameters": [],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "first_name",
                    "name",
                    "full_name",
                    "email",
                    "email_confirmed",
                    "locale",
                    "time_zone",
                    "avatar_url",
                    "connected",
                    "created_at",
                    "updated_at",
                    "country_code",
                    "currency",
                    "organization_memberships",
                    "accessible_apps",
                    "unit_system",
                    "two_factor_authentication_enabled",
                    "subscription",
                    "test_account_owner_id"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "29b276b7-c0fa-4514-a5b1-c0fb4ee40fa7"
                    },
                    "first_name": {
                      "type": "string",
                      "example": "Jane",
                      "nullable": true
                    },
                    "name": {
                      "type": "string",
                      "example": "Doe"
                    },
                    "full_name": {
                      "type": "string",
                      "example": "Jane Doe"
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "jane.doe@gmail.com"
                    },
                    "email_confirmed": {
                      "type": "boolean",
                      "example": true,
                      "description": "If the e-mail is not confirmed, please do not send any e-mails"
                    },
                    "pronoun": {
                      "type": "string",
                      "example": "She/Her",
                      "nullable": true,
                      "enum": [
                        "She/Her",
                        "He/Him"
                      ]
                    },
                    "locale": {
                      "type": "string",
                      "example": "de",
                      "enum": [
                        "en",
                        "en-US",
                        "de"
                      ]
                    },
                    "unit_system": {
                      "type": "string",
                      "example": "metric",
                      "enum": [
                        "metric",
                        "imperial"
                      ]
                    },
                    "country_code": {
                      "type": "string",
                      "example": "DE",
                      "nullable": true
                    },
                    "currency": {
                      "type": "string",
                      "example": "EUR",
                      "nullable": true,
                      "description": "Currency in [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format"
                    },
                    "time_zone": {
                      "type": "string",
                      "example": "UTC",
                      "description": "IANA Timezone: [List of time zones](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)"
                    },
                    "avatar_url": {
                      "type": "string",
                      "nullable": true,
                      "example": "https://directory.zaikio.com/rails/active_storage/blobs/avatar.jpg"
                    },
                    "connected": {
                      "type": "boolean",
                      "description": "True if person is connected to current app (display in aud)"
                    },
                    "subscription": {
                      "anyOf": [
                        {
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "status",
                            "plan"
                          ],
                          "properties": {
                            "status": {
                              "type": "string",
                              "enum": [
                                "provisioning",
                                "active",
                                "unpaid"
                              ],
                              "description": "If a subscription was unpaid, you might disable the features available for this subscription. You may want to give the subscriber a little more time. Therefore you can also use `last_paid_at`. A subscription might also change from unpaid to active again.\n"
                            },
                            "plan": {
                              "type": "string",
                              "description": "The name of a plan or `enterprise` if this subscription is linked to an enterprise plan"
                            }
                          }
                        },
                        {
                          "nullable": true
                        }
                      ]
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "organization_memberships": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "required": [
                              "id",
                              "created_at",
                              "updated_at",
                              "roles"
                            ],
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "roles": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "member"
                                ]
                              }
                            }
                          },
                          {
                            "type": "object",
                            "required": [
                              "organization"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "organization": {
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "name",
                                  "created_at",
                                  "updated_at",
                                  "slug",
                                  "logo_url",
                                  "connected",
                                  "kinds",
                                  "sections",
                                  "country_code",
                                  "currency",
                                  "subscription",
                                  "brand_color",
                                  "test_account_owner_id"
                                ],
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                                  },
                                  "slug": {
                                    "type": "string",
                                    "example": "bounty-soap-inc"
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "Bounty Soap Inc."
                                  },
                                  "logo_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "nullable": true
                                  },
                                  "connected": {
                                    "type": "boolean",
                                    "description": "True if organization is connected to current app (display in aud)"
                                  },
                                  "subscription": {
                                    "anyOf": [
                                      {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                          "status",
                                          "plan"
                                        ],
                                        "properties": {
                                          "status": {
                                            "type": "string",
                                            "enum": [
                                              "provisioning",
                                              "active",
                                              "unpaid"
                                            ],
                                            "description": "If a subscription was unpaid, you might disable the features available for this subscription. You may want to give the subscriber a little more time. Therefore you can also use `last_paid_at`. A subscription might also change from unpaid to active again.\n"
                                          },
                                          "plan": {
                                            "type": "string",
                                            "description": "The name of a plan or `enterprise` if this subscription is linked to an enterprise plan"
                                          }
                                        }
                                      },
                                      {
                                        "nullable": true
                                      }
                                    ]
                                  },
                                  "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "updated_at": {
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "country_code": {
                                    "type": "string",
                                    "example": "DE",
                                    "nullable": true
                                  },
                                  "kinds": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                      "type": "string",
                                      "example": "printer",
                                      "enum": [
                                        "printer",
                                        "supplier",
                                        "machine_vendor",
                                        "brand_owner",
                                        "designer",
                                        "publisher",
                                        "software_developer",
                                        "other"
                                      ]
                                    }
                                  },
                                  "sections": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "description": "Only the sections that are also part of kinds are taken into account.",
                                    "properties": {
                                      "printer": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "enum": [
                                            "softcover_books",
                                            "hardcover_books",
                                            "labels",
                                            "packagings",
                                            "business_cards",
                                            "flyers",
                                            "leaflets",
                                            "brochures",
                                            "large_formats"
                                          ]
                                        }
                                      },
                                      "supplier": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "enum": [
                                            "sheet_substrates",
                                            "web_substrates",
                                            "ink",
                                            "plates",
                                            "foils",
                                            "other"
                                          ]
                                        }
                                      },
                                      "machine_vendor": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "enum": [
                                            "sheet_fed_offset_presses",
                                            "web_fed_offset_presses",
                                            "sheet_fed_digital_presses",
                                            "web_fed_digital_presses",
                                            "cutters",
                                            "binders",
                                            "saddle_stitchers"
                                          ]
                                        }
                                      },
                                      "designer": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "enum": [
                                            "self_employed",
                                            "studio",
                                            "inhouse",
                                            "other"
                                          ]
                                        }
                                      },
                                      "publisher": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "enum": [
                                            "softcover_books",
                                            "hardcover_books",
                                            "brochures"
                                          ]
                                        }
                                      },
                                      "software_developer": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "enum": [
                                            "imposing",
                                            "ganging",
                                            "mis",
                                            "reporting",
                                            "web_to_print",
                                            "logistics",
                                            "warehousing",
                                            "machine_integration",
                                            "preflight",
                                            "workflow",
                                            "billing",
                                            "accounting",
                                            "production_planning",
                                            "production_scheduling",
                                            "production_capacity_planning"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "kind": {
                                    "type": "string",
                                    "example": "printer",
                                    "description": "DEPRECATED please use kinds since organizations can have multiple kinds",
                                    "enum": [
                                      "printer",
                                      "supplier",
                                      "machine_vendor",
                                      "brand_owner",
                                      "designer",
                                      "publisher",
                                      "software_developer",
                                      "other"
                                    ]
                                  },
                                  "currency": {
                                    "type": "string",
                                    "example": "EUR",
                                    "nullable": true,
                                    "description": "Currency in [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format"
                                  },
                                  "brand_color": {
                                    "type": "string",
                                    "pattern": "^\\A#?(?:[0-9a-fA-F]{3}){1,2}\\z$",
                                    "example": "#000000",
                                    "nullable": true,
                                    "description": "Brand color in hex color format"
                                  },
                                  "test_account_owner_id": {
                                    "type": "string",
                                    "nullable": true,
                                    "example": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                                    "description": "If this is a test account, the organization id of the owner of this test organization is returned. If this is not a test account this will be null. Test accounts are only available in the sandbox environment.\n"
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    },
                    "accessible_apps": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "name",
                          "slug",
                          "translated_title",
                          "category",
                          "entry_point_url",
                          "logo_url"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "my_app"
                          },
                          "slug": {
                            "type": "string",
                            "example": "my_app"
                          },
                          "translated_title": {
                            "type": "string",
                            "example": "My App"
                          },
                          "category": {
                            "type": "string",
                            "example": "iot"
                          },
                          "entry_point_url": {
                            "type": "string",
                            "nullable": true,
                            "example": "http://example.com",
                            "format": "uri"
                          },
                          "logo_url": {
                            "type": "string",
                            "nullable": true,
                            "format": "uri",
                            "example": "http://www.example.com/rails/active_storage/blobs/example.png"
                          }
                        }
                      }
                    },
                    "two_factor_authentication_enabled": {
                      "type": "boolean"
                    },
                    "test_account_owner_id": {
                      "type": "string",
                      "nullable": true,
                      "example": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                      "description": "If this is a test account, the organization id of the owner of this test organization is returned. If this is not a test account this will be null. Test accounts are only available in the sandbox environment.\n"
                    }
                  }
                },
                "example": {
                  "id": "b552c680-c1b5-5ebe-b249-58b1d119ff7d",
                  "first_name": "Jean-Luc",
                  "name": "Picard",
                  "full_name": "Jean-Luc Picard",
                  "email": "jlp@example.com",
                  "pronoun": null,
                  "locale": "en",
                  "country_code": "US",
                  "currency": "USD",
                  "unit_system": "metric",
                  "connected": false,
                  "test_account_owner_id": null,
                  "created_at": "2021-01-15T11:12:38.586+01:00",
                  "updated_at": "2021-01-15T11:12:38.586+01:00",
                  "time_zone": "Europe/Berlin",
                  "email_confirmed": true,
                  "two_factor_authentication_enabled": false,
                  "avatar_url": null,
                  "subscription": null,
                  "organization_memberships": [],
                  "accessible_apps": []
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, if authorization fails",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, if authorization fails",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": {
                  "errors": [
                    "unpermitted_subject"
                  ]
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Person"
        ],
        "description": "Updated the profile of the currently authenticated person. Fields that are not sent, are not updated.\n- needed bearer: `Person`\n- needed scopes: `directory.person.w` or `directory.person.rw`\n",
        "parameters": [],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "person"
                ],
                "properties": {
                  "person": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "first_name": {
                        "type": "string",
                        "example": "Lisa"
                      },
                      "name": {
                        "type": "string",
                        "example": "Simpson"
                      },
                      "pronoun": {
                        "type": "string",
                        "example": "She/Her",
                        "nullable": true,
                        "enum": [
                          "She/Her",
                          "He/Him"
                        ]
                      },
                      "locale": {
                        "type": "string",
                        "example": "de",
                        "enum": [
                          "en",
                          "en-US",
                          "de"
                        ]
                      },
                      "unit_system": {
                        "type": "string",
                        "example": "metric",
                        "enum": [
                          "metric",
                          "imperial"
                        ]
                      },
                      "country_code": {
                        "type": "string",
                        "example": "DE",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "first_name",
                    "name",
                    "full_name",
                    "email",
                    "email_confirmed",
                    "locale",
                    "time_zone",
                    "avatar_url",
                    "connected",
                    "created_at",
                    "updated_at",
                    "country_code",
                    "currency",
                    "organization_memberships",
                    "accessible_apps",
                    "unit_system",
                    "two_factor_authentication_enabled",
                    "subscription",
                    "test_account_owner_id"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "29b276b7-c0fa-4514-a5b1-c0fb4ee40fa7"
                    },
                    "first_name": {
                      "type": "string",
                      "example": "Jane",
                      "nullable": true
                    },
                    "name": {
                      "type": "string",
                      "example": "Doe"
                    },
                    "full_name": {
                      "type": "string",
                      "example": "Jane Doe"
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "jane.doe@gmail.com"
                    },
                    "email_confirmed": {
                      "type": "boolean",
                      "example": true,
                      "description": "If the e-mail is not confirmed, please do not send any e-mails"
                    },
                    "pronoun": {
                      "type": "string",
                      "example": "She/Her",
                      "nullable": true,
                      "enum": [
                        "She/Her",
                        "He/Him"
                      ]
                    },
                    "locale": {
                      "type": "string",
                      "example": "de",
                      "enum": [
                        "en",
                        "en-US",
                        "de"
                      ]
                    },
                    "unit_system": {
                      "type": "string",
                      "example": "metric",
                      "enum": [
                        "metric",
                        "imperial"
                      ]
                    },
                    "country_code": {
                      "type": "string",
                      "example": "DE",
                      "nullable": true
                    },
                    "currency": {
                      "type": "string",
                      "example": "EUR",
                      "nullable": true,
                      "description": "Currency in [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format"
                    },
                    "time_zone": {
                      "type": "string",
                      "example": "UTC",
                      "description": "IANA Timezone: [List of time zones](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)"
                    },
                    "avatar_url": {
                      "type": "string",
                      "nullable": true,
                      "example": "https://directory.zaikio.com/rails/active_storage/blobs/avatar.jpg"
                    },
                    "connected": {
                      "type": "boolean",
                      "description": "True if person is connected to current app (display in aud)"
                    },
                    "subscription": {
                      "anyOf": [
                        {
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "status",
                            "plan"
                          ],
                          "properties": {
                            "status": {
                              "type": "string",
                              "enum": [
                                "provisioning",
                                "active",
                                "unpaid"
                              ],
                              "description": "If a subscription was unpaid, you might disable the features available for this subscription. You may want to give the subscriber a little more time. Therefore you can also use `last_paid_at`. A subscription might also change from unpaid to active again.\n"
                            },
                            "plan": {
                              "type": "string",
                              "description": "The name of a plan or `enterprise` if this subscription is linked to an enterprise plan"
                            }
                          }
                        },
                        {
                          "nullable": true
                        }
                      ]
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "organization_memberships": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "required": [
                              "id",
                              "created_at",
                              "updated_at",
                              "roles"
                            ],
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "roles": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "member"
                                ]
                              }
                            }
                          },
                          {
                            "type": "object",
                            "required": [
                              "organization"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "organization": {
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "name",
                                  "created_at",
                                  "updated_at",
                                  "slug",
                                  "logo_url",
                                  "connected",
                                  "kinds",
                                  "sections",
                                  "country_code",
                                  "currency",
                                  "subscription",
                                  "brand_color",
                                  "test_account_owner_id"
                                ],
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                                  },
                                  "slug": {
                                    "type": "string",
                                    "example": "bounty-soap-inc"
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "Bounty Soap Inc."
                                  },
                                  "logo_url": {
                                    "type": "string",
                                    "format": "uri",
                                    "nullable": true
                                  },
                                  "connected": {
                                    "type": "boolean",
                                    "description": "True if organization is connected to current app (display in aud)"
                                  },
                                  "subscription": {
                                    "anyOf": [
                                      {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                          "status",
                                          "plan"
                                        ],
                                        "properties": {
                                          "status": {
                                            "type": "string",
                                            "enum": [
                                              "provisioning",
                                              "active",
                                              "unpaid"
                                            ],
                                            "description": "If a subscription was unpaid, you might disable the features available for this subscription. You may want to give the subscriber a little more time. Therefore you can also use `last_paid_at`. A subscription might also change from unpaid to active again.\n"
                                          },
                                          "plan": {
                                            "type": "string",
                                            "description": "The name of a plan or `enterprise` if this subscription is linked to an enterprise plan"
                                          }
                                        }
                                      },
                                      {
                                        "nullable": true
                                      }
                                    ]
                                  },
                                  "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "updated_at": {
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "country_code": {
                                    "type": "string",
                                    "example": "DE",
                                    "nullable": true
                                  },
                                  "kinds": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                      "type": "string",
                                      "example": "printer",
                                      "enum": [
                                        "printer",
                                        "supplier",
                                        "machine_vendor",
                                        "brand_owner",
                                        "designer",
                                        "publisher",
                                        "software_developer",
                                        "other"
                                      ]
                                    }
                                  },
                                  "sections": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "description": "Only the sections that are also part of kinds are taken into account.",
                                    "properties": {
                                      "printer": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "enum": [
                                            "softcover_books",
                                            "hardcover_books",
                                            "labels",
                                            "packagings",
                                            "business_cards",
                                            "flyers",
                                            "leaflets",
                                            "brochures",
                                            "large_formats"
                                          ]
                                        }
                                      },
                                      "supplier": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "enum": [
                                            "sheet_substrates",
                                            "web_substrates",
                                            "ink",
                                            "plates",
                                            "foils",
                                            "other"
                                          ]
                                        }
                                      },
                                      "machine_vendor": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "enum": [
                                            "sheet_fed_offset_presses",
                                            "web_fed_offset_presses",
                                            "sheet_fed_digital_presses",
                                            "web_fed_digital_presses",
                                            "cutters",
                                            "binders",
                                            "saddle_stitchers"
                                          ]
                                        }
                                      },
                                      "designer": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "enum": [
                                            "self_employed",
                                            "studio",
                                            "inhouse",
                                            "other"
                                          ]
                                        }
                                      },
                                      "publisher": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "enum": [
                                            "softcover_books",
                                            "hardcover_books",
                                            "brochures"
                                          ]
                                        }
                                      },
                                      "software_developer": {
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "enum": [
                                            "imposing",
                                            "ganging",
                                            "mis",
                                            "reporting",
                                            "web_to_print",
                                            "logistics",
                                            "warehousing",
                                            "machine_integration",
                                            "preflight",
                                            "workflow",
                                            "billing",
                                            "accounting",
                                            "production_planning",
                                            "production_scheduling",
                                            "production_capacity_planning"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "kind": {
                                    "type": "string",
                                    "example": "printer",
                                    "description": "DEPRECATED please use kinds since organizations can have multiple kinds",
                                    "enum": [
                                      "printer",
                                      "supplier",
                                      "machine_vendor",
                                      "brand_owner",
                                      "designer",
                                      "publisher",
                                      "software_developer",
                                      "other"
                                    ]
                                  },
                                  "currency": {
                                    "type": "string",
                                    "example": "EUR",
                                    "nullable": true,
                                    "description": "Currency in [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format"
                                  },
                                  "brand_color": {
                                    "type": "string",
                                    "pattern": "^\\A#?(?:[0-9a-fA-F]{3}){1,2}\\z$",
                                    "example": "#000000",
                                    "nullable": true,
                                    "description": "Brand color in hex color format"
                                  },
                                  "test_account_owner_id": {
                                    "type": "string",
                                    "nullable": true,
                                    "example": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                                    "description": "If this is a test account, the organization id of the owner of this test organization is returned. If this is not a test account this will be null. Test accounts are only available in the sandbox environment.\n"
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    },
                    "accessible_apps": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "name",
                          "slug",
                          "translated_title",
                          "category",
                          "entry_point_url",
                          "logo_url"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "my_app"
                          },
                          "slug": {
                            "type": "string",
                            "example": "my_app"
                          },
                          "translated_title": {
                            "type": "string",
                            "example": "My App"
                          },
                          "category": {
                            "type": "string",
                            "example": "iot"
                          },
                          "entry_point_url": {
                            "type": "string",
                            "nullable": true,
                            "example": "http://example.com",
                            "format": "uri"
                          },
                          "logo_url": {
                            "type": "string",
                            "nullable": true,
                            "format": "uri",
                            "example": "http://www.example.com/rails/active_storage/blobs/example.png"
                          }
                        }
                      }
                    },
                    "two_factor_authentication_enabled": {
                      "type": "boolean"
                    },
                    "test_account_owner_id": {
                      "type": "string",
                      "nullable": true,
                      "example": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                      "description": "If this is a test account, the organization id of the owner of this test organization is returned. If this is not a test account this will be null. Test accounts are only available in the sandbox environment.\n"
                    }
                  }
                },
                "example": {
                  "id": "383663bc-149a-5b76-b50d-ee039046c12e",
                  "first_name": "New First name",
                  "name": "Gallikanokus",
                  "full_name": "New First name Gallikanokus",
                  "email": "fgalli@example.com",
                  "pronoun": null,
                  "locale": "en",
                  "country_code": "US",
                  "currency": "USD",
                  "unit_system": "metric",
                  "connected": false,
                  "test_account_owner_id": null,
                  "created_at": "2021-01-15T11:12:38.580+01:00",
                  "updated_at": "2021-01-15T11:14:52.819+01:00",
                  "time_zone": "Europe/Berlin",
                  "email_confirmed": true,
                  "two_factor_authentication_enabled": false,
                  "avatar_url": null,
                  "subscription": null,
                  "organization_memberships": [
                    {
                      "id": "b8a1cd10-a110-551c-b6f1-d8aa549a6817",
                      "roles": [
                        "owner"
                      ],
                      "created_at": "2021-01-15T11:12:38.789+01:00",
                      "updated_at": "2021-01-15T11:12:38.789+01:00",
                      "organization": {
                        "id": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                        "name": "Bounty Soap Inc.",
                        "slug": "bounty_soap_inc",
                        "connected": false,
                        "kinds": [
                          "printer"
                        ],
                        "sections": {
                          "printer": [
                            "softcover_books",
                            "hardcover_books",
                            "business_cards",
                            "flyers"
                          ]
                        },
                        "country_code": "DE",
                        "brand_color": "#000000",
                        "currency": "EUR",
                        "test_account_owner_id": null,
                        "created_at": "2021-01-15T11:12:38.636+01:00",
                        "updated_at": "2021-01-15T11:12:38.636+01:00",
                        "logo_url": null,
                        "kind": "printer",
                        "subscription": null
                      }
                    },
                    {
                      "id": "37f7eeff-831b-5c41-984a-254965f58c0f",
                      "roles": [
                        "owner"
                      ],
                      "created_at": "2021-01-15T11:12:38.789+01:00",
                      "updated_at": "2021-01-15T11:12:38.789+01:00",
                      "organization": {
                        "id": "c453ca95-5850-5d9a-b93e-050334c951af",
                        "name": "Crispy Mountain GmbH",
                        "slug": "crispy_mountain_gmbh",
                        "connected": false,
                        "kinds": [
                          "software_developer"
                        ],
                        "sections": {
                          "software_developer": [
                            "mis"
                          ]
                        },
                        "country_code": "DE",
                        "brand_color": null,
                        "currency": "EUR",
                        "test_account_owner_id": null,
                        "created_at": "2021-01-15T11:12:38.636+01:00",
                        "updated_at": "2021-01-15T11:12:38.636+01:00",
                        "logo_url": null,
                        "kind": "software_developer",
                        "subscription": null
                      }
                    },
                    {
                      "id": "0a4503fe-9a46-534c-ad4e-07527b35e5e3",
                      "roles": [
                        "member"
                      ],
                      "created_at": "2021-01-15T11:12:38.789+01:00",
                      "updated_at": "2021-01-15T11:12:38.789+01:00",
                      "organization": {
                        "id": "f5345a2a-8786-5b46-a1e2-516658fde390",
                        "name": "Galactic Print Inc.",
                        "slug": "galactic_print_inc",
                        "connected": false,
                        "kinds": [
                          "printer"
                        ],
                        "sections": {
                          "printer": [
                            "labels",
                            "packagings",
                            "leaflets",
                            "brochures",
                            "large_formats",
                            "flyers"
                          ]
                        },
                        "country_code": "DE",
                        "brand_color": null,
                        "currency": "EUR",
                        "test_account_owner_id": null,
                        "created_at": "2021-01-15T11:12:38.636+01:00",
                        "updated_at": "2021-01-15T11:12:38.636+01:00",
                        "logo_url": null,
                        "kind": "printer",
                        "subscription": null
                      }
                    },
                    {
                      "id": "d94fc4d5-384f-5830-b382-b743aeb4c98e",
                      "roles": [
                        "owner"
                      ],
                      "created_at": "2021-01-15T11:12:38.789+01:00",
                      "updated_at": "2021-01-15T11:12:38.789+01:00",
                      "organization": {
                        "id": "1f9b28c0-310d-5e28-ba60-315949045f94",
                        "name": "Zaikio GmbH",
                        "slug": "zaikio",
                        "connected": false,
                        "kinds": [
                          "software_developer"
                        ],
                        "sections": {
                          "software_developer": []
                        },
                        "country_code": "DE",
                        "brand_color": null,
                        "currency": "EUR",
                        "test_account_owner_id": null,
                        "created_at": "2021-01-15T11:12:38.636+01:00",
                        "updated_at": "2021-01-15T11:12:38.636+01:00",
                        "logo_url": null,
                        "kind": "software_developer",
                        "subscription": null
                      }
                    }
                  ],
                  "accessible_apps": [
                    {
                      "name": "directory",
                      "translated_title": "Directory",
                      "category": "infrastructure",
                      "entry_point_url": "https://directory.staging.zaikio.com",
                      "logo_url": null,
                      "slug": "directory"
                    },
                    {
                      "name": "keyline",
                      "translated_title": "Keyline",
                      "category": "logistics",
                      "entry_point_url": "http://keyline.test",
                      "logo_url": null,
                      "slug": "keyline"
                    },
                    {
                      "name": "catalog_importer",
                      "translated_title": "Catalog Importer",
                      "category": "sales",
                      "entry_point_url": "https://catalog-importer.staging.zaikio.com/",
                      "logo_url": null,
                      "slug": "catalog_importer"
                    },
                    {
                      "name": "procurement_supplier",
                      "translated_title": "Procurement (Supplier)",
                      "category": "sales",
                      "entry_point_url": "https://procurement.staging.zaikio.com/suppliers",
                      "logo_url": null,
                      "slug": "procurement_supplier"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, if authorization fails",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, if authorization fails",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/person/avatar": {
      "patch": {
        "tags": [
          "Person"
        ],
        "description": "Updated the avatar of the currently authenticated person.\n- needed bearer: `Person`\n- needed scopes: `directory.person.w` or `directory.person.rw`\n",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "avatar": {
                    "description": "Avatar to upload",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "parameters": [],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "avatar_url"
                  ],
                  "properties": {
                    "avatar_url": {
                      "type": "string",
                      "example": "https://directory.zaikio.com/rails/active_storage/blobs/avatar.jpg"
                    }
                  }
                },
                "example": {
                  "avatar_url": "http://www.example.com/rails/active_storage/blobs/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaWszWldJellqZzRaUzB3WXpJMUxUUTJZV1F0WVdNNU9DMWpOVFV6T1dJd01USmlaRGtHT2daRlZBPT0iLCJleHAiOm51bGwsInB1ciI6ImJsb2JfaWQifX0=--c9d8f1da41258d31dab983ec08084e363032c3e2/avatar.png"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, if authorization fails",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, if authorization fails",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/person/organization_memberships": {
      "get": {
        "tags": [
          "Person"
        ],
        "summary": "Get organization memberships of authenticated person",
        "operationId": "getPersonOrganizationMemberships",
        "description": "Returns the organization memberships of the current person.\n- needed bearer: `Person`\n- needed scopes: `directory.person.r`\n",
        "parameters": [],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "required": [
                          "id",
                          "created_at",
                          "updated_at",
                          "roles"
                        ],
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "roles": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "member"
                            ]
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "organization"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "organization": {
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "name",
                              "created_at",
                              "updated_at",
                              "slug",
                              "logo_url",
                              "connected",
                              "kinds",
                              "sections",
                              "country_code",
                              "currency",
                              "subscription",
                              "brand_color",
                              "test_account_owner_id"
                            ],
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                              },
                              "slug": {
                                "type": "string",
                                "example": "bounty-soap-inc"
                              },
                              "name": {
                                "type": "string",
                                "example": "Bounty Soap Inc."
                              },
                              "logo_url": {
                                "type": "string",
                                "format": "uri",
                                "nullable": true
                              },
                              "connected": {
                                "type": "boolean",
                                "description": "True if organization is connected to current app (display in aud)"
                              },
                              "subscription": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                      "status",
                                      "plan"
                                    ],
                                    "properties": {
                                      "status": {
                                        "type": "string",
                                        "enum": [
                                          "provisioning",
                                          "active",
                                          "unpaid"
                                        ],
                                        "description": "If a subscription was unpaid, you might disable the features available for this subscription. You may want to give the subscriber a little more time. Therefore you can also use `last_paid_at`. A subscription might also change from unpaid to active again.\n"
                                      },
                                      "plan": {
                                        "type": "string",
                                        "description": "The name of a plan or `enterprise` if this subscription is linked to an enterprise plan"
                                      }
                                    }
                                  },
                                  {
                                    "nullable": true
                                  }
                                ]
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "country_code": {
                                "type": "string",
                                "example": "DE",
                                "nullable": true
                              },
                              "kinds": {
                                "type": "array",
                                "minItems": 1,
                                "items": {
                                  "type": "string",
                                  "example": "printer",
                                  "enum": [
                                    "printer",
                                    "supplier",
                                    "machine_vendor",
                                    "brand_owner",
                                    "designer",
                                    "publisher",
                                    "software_developer",
                                    "other"
                                  ]
                                }
                              },
                              "sections": {
                                "type": "object",
                                "additionalProperties": false,
                                "description": "Only the sections that are also part of kinds are taken into account.",
                                "properties": {
                                  "printer": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "enum": [
                                        "softcover_books",
                                        "hardcover_books",
                                        "labels",
                                        "packagings",
                                        "business_cards",
                                        "flyers",
                                        "leaflets",
                                        "brochures",
                                        "large_formats"
                                      ]
                                    }
                                  },
                                  "supplier": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "enum": [
                                        "sheet_substrates",
                                        "web_substrates",
                                        "ink",
                                        "plates",
                                        "foils",
                                        "other"
                                      ]
                                    }
                                  },
                                  "machine_vendor": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "enum": [
                                        "sheet_fed_offset_presses",
                                        "web_fed_offset_presses",
                                        "sheet_fed_digital_presses",
                                        "web_fed_digital_presses",
                                        "cutters",
                                        "binders",
                                        "saddle_stitchers"
                                      ]
                                    }
                                  },
                                  "designer": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "enum": [
                                        "self_employed",
                                        "studio",
                                        "inhouse",
                                        "other"
                                      ]
                                    }
                                  },
                                  "publisher": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "enum": [
                                        "softcover_books",
                                        "hardcover_books",
                                        "brochures"
                                      ]
                                    }
                                  },
                                  "software_developer": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "enum": [
                                        "imposing",
                                        "ganging",
                                        "mis",
                                        "reporting",
                                        "web_to_print",
                                        "logistics",
                                        "warehousing",
                                        "machine_integration",
                                        "preflight",
                                        "workflow",
                                        "billing",
                                        "accounting",
                                        "production_planning",
                                        "production_scheduling",
                                        "production_capacity_planning"
                                      ]
                                    }
                                  }
                                }
                              },
                              "kind": {
                                "type": "string",
                                "example": "printer",
                                "description": "DEPRECATED please use kinds since organizations can have multiple kinds",
                                "enum": [
                                  "printer",
                                  "supplier",
                                  "machine_vendor",
                                  "brand_owner",
                                  "designer",
                                  "publisher",
                                  "software_developer",
                                  "other"
                                ]
                              },
                              "currency": {
                                "type": "string",
                                "example": "EUR",
                                "nullable": true,
                                "description": "Currency in [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format"
                              },
                              "brand_color": {
                                "type": "string",
                                "pattern": "^\\A#?(?:[0-9a-fA-F]{3}){1,2}\\z$",
                                "example": "#000000",
                                "nullable": true,
                                "description": "Brand color in hex color format"
                              },
                              "test_account_owner_id": {
                                "type": "string",
                                "nullable": true,
                                "example": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                                "description": "If this is a test account, the organization id of the owner of this test organization is returned. If this is not a test account this will be null. Test accounts are only available in the sandbox environment.\n"
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "example": [
                  {
                    "id": "b8a1cd10-a110-551c-b6f1-d8aa549a6817",
                    "roles": [
                      "owner"
                    ],
                    "created_at": "2021-01-15T11:12:38.789+01:00",
                    "updated_at": "2021-01-15T11:12:38.789+01:00",
                    "organization": {
                      "id": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                      "name": "Bounty Soap Inc.",
                      "slug": "bounty_soap_inc",
                      "connected": true,
                      "kinds": [
                        "printer"
                      ],
                      "sections": {
                        "printer": [
                          "softcover_books",
                          "hardcover_books",
                          "business_cards",
                          "flyers"
                        ]
                      },
                      "country_code": "DE",
                      "brand_color": "#000000",
                      "currency": "EUR",
                      "test_account_owner_id": null,
                      "created_at": "2021-01-15T11:12:38.636+01:00",
                      "updated_at": "2021-01-15T11:12:38.636+01:00",
                      "logo_url": null,
                      "kind": "printer",
                      "subscription": null
                    }
                  },
                  {
                    "id": "37f7eeff-831b-5c41-984a-254965f58c0f",
                    "roles": [
                      "owner"
                    ],
                    "created_at": "2021-01-15T11:12:38.789+01:00",
                    "updated_at": "2021-01-15T11:12:38.789+01:00",
                    "organization": {
                      "id": "c453ca95-5850-5d9a-b93e-050334c951af",
                      "name": "Crispy Mountain GmbH",
                      "slug": "crispy_mountain_gmbh",
                      "connected": false,
                      "kinds": [
                        "software_developer"
                      ],
                      "sections": {
                        "software_developer": [
                          "mis"
                        ]
                      },
                      "country_code": "DE",
                      "brand_color": null,
                      "currency": "EUR",
                      "test_account_owner_id": null,
                      "created_at": "2021-01-15T11:12:38.636+01:00",
                      "updated_at": "2021-01-15T11:12:38.636+01:00",
                      "logo_url": null,
                      "kind": "software_developer",
                      "subscription": null
                    }
                  },
                  {
                    "id": "0a4503fe-9a46-534c-ad4e-07527b35e5e3",
                    "roles": [
                      "member"
                    ],
                    "created_at": "2021-01-15T11:12:38.789+01:00",
                    "updated_at": "2021-01-15T11:12:38.789+01:00",
                    "organization": {
                      "id": "f5345a2a-8786-5b46-a1e2-516658fde390",
                      "name": "Galactic Print Inc.",
                      "slug": "galactic_print_inc",
                      "connected": false,
                      "kinds": [
                        "printer"
                      ],
                      "sections": {
                        "printer": [
                          "labels",
                          "packagings",
                          "leaflets",
                          "brochures",
                          "large_formats",
                          "flyers"
                        ]
                      },
                      "country_code": "DE",
                      "brand_color": null,
                      "currency": "EUR",
                      "test_account_owner_id": null,
                      "created_at": "2021-01-15T11:12:38.636+01:00",
                      "updated_at": "2021-01-15T11:12:38.636+01:00",
                      "logo_url": null,
                      "kind": "printer",
                      "subscription": null
                    }
                  },
                  {
                    "id": "d94fc4d5-384f-5830-b382-b743aeb4c98e",
                    "roles": [
                      "owner"
                    ],
                    "created_at": "2021-01-15T11:12:38.789+01:00",
                    "updated_at": "2021-01-15T11:12:38.789+01:00",
                    "organization": {
                      "id": "1f9b28c0-310d-5e28-ba60-315949045f94",
                      "name": "Zaikio GmbH",
                      "slug": "zaikio",
                      "connected": false,
                      "kinds": [
                        "software_developer"
                      ],
                      "sections": {
                        "software_developer": []
                      },
                      "country_code": "DE",
                      "brand_color": null,
                      "currency": "EUR",
                      "test_account_owner_id": null,
                      "created_at": "2021-01-15T11:12:38.636+01:00",
                      "updated_at": "2021-01-15T11:12:38.636+01:00",
                      "logo_url": null,
                      "kind": "software_developer",
                      "subscription": null
                    }
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized, if authorization fails",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, if authorization fails",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/person/organizations": {
      "post": {
        "tags": [
          "Person"
        ],
        "description": "Creates a new Organization and makes the current Person the owner.\nIn addition, a direct connection is established with the app that issued the token.\nThe organization then automatically receives all desired OAuth Scopes and Event Subscriptions,\nso that these can then be used by the Client Credentials Flow, for example.\n- needed bearer: `Person`\n- needed scopes: `directory.organizsations.w`\n",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "organization"
                ],
                "properties": {
                  "organization": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "name",
                      "country_code"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "Crispy Mountain GmbH"
                      },
                      "country_code": {
                        "type": "string",
                        "example": "DE",
                        "nullable": true
                      },
                      "kind": {
                        "type": "string",
                        "example": "printer",
                        "description": "DEPRECATED please use kinds since organizations can have multiple kinds",
                        "enum": [
                          "printer",
                          "supplier",
                          "machine_vendor",
                          "brand_owner",
                          "designer",
                          "publisher",
                          "software_developer",
                          "other"
                        ]
                      },
                      "kinds": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                          "type": "string",
                          "example": "printer",
                          "enum": [
                            "printer",
                            "supplier",
                            "machine_vendor",
                            "brand_owner",
                            "designer",
                            "publisher",
                            "software_developer",
                            "other"
                          ]
                        }
                      },
                      "sections": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "Only the sections that are also part of kinds are taken into account.",
                        "properties": {
                          "printer": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "softcover_books",
                                "hardcover_books",
                                "labels",
                                "packagings",
                                "business_cards",
                                "flyers",
                                "leaflets",
                                "brochures",
                                "large_formats"
                              ]
                            }
                          },
                          "supplier": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "sheet_substrates",
                                "web_substrates",
                                "ink",
                                "plates",
                                "foils",
                                "other"
                              ]
                            }
                          },
                          "machine_vendor": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "sheet_fed_offset_presses",
                                "web_fed_offset_presses",
                                "sheet_fed_digital_presses",
                                "web_fed_digital_presses",
                                "cutters",
                                "binders",
                                "saddle_stitchers"
                              ]
                            }
                          },
                          "designer": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "self_employed",
                                "studio",
                                "inhouse",
                                "other"
                              ]
                            }
                          },
                          "publisher": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "softcover_books",
                                "hardcover_books",
                                "brochures"
                              ]
                            }
                          },
                          "software_developer": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "imposing",
                                "ganging",
                                "mis",
                                "reporting",
                                "web_to_print",
                                "logistics",
                                "warehousing",
                                "machine_integration",
                                "preflight",
                                "workflow",
                                "billing",
                                "accounting",
                                "production_planning",
                                "production_scheduling",
                                "production_capacity_planning"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "required": [
                    "id",
                    "name",
                    "created_at",
                    "updated_at",
                    "slug",
                    "logo_url",
                    "connected",
                    "kinds",
                    "sections",
                    "country_code",
                    "currency",
                    "subscription",
                    "brand_color",
                    "test_account_owner_id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                    },
                    "slug": {
                      "type": "string",
                      "example": "bounty-soap-inc"
                    },
                    "name": {
                      "type": "string",
                      "example": "Bounty Soap Inc."
                    },
                    "logo_url": {
                      "type": "string",
                      "format": "uri",
                      "nullable": true
                    },
                    "connected": {
                      "type": "boolean",
                      "description": "True if organization is connected to current app (display in aud)"
                    },
                    "subscription": {
                      "anyOf": [
                        {
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "status",
                            "plan"
                          ],
                          "properties": {
                            "status": {
                              "type": "string",
                              "enum": [
                                "provisioning",
                                "active",
                                "unpaid"
                              ],
                              "description": "If a subscription was unpaid, you might disable the features available for this subscription. You may want to give the subscriber a little more time. Therefore you can also use `last_paid_at`. A subscription might also change from unpaid to active again.\n"
                            },
                            "plan": {
                              "type": "string",
                              "description": "The name of a plan or `enterprise` if this subscription is linked to an enterprise plan"
                            }
                          }
                        },
                        {
                          "nullable": true
                        }
                      ]
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "country_code": {
                      "type": "string",
                      "example": "DE",
                      "nullable": true
                    },
                    "kinds": {
                      "type": "array",
                      "minItems": 1,
                      "items": {
                        "type": "string",
                        "example": "printer",
                        "enum": [
                          "printer",
                          "supplier",
                          "machine_vendor",
                          "brand_owner",
                          "designer",
                          "publisher",
                          "software_developer",
                          "other"
                        ]
                      }
                    },
                    "sections": {
                      "type": "object",
                      "additionalProperties": false,
                      "description": "Only the sections that are also part of kinds are taken into account.",
                      "properties": {
                        "printer": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "softcover_books",
                              "hardcover_books",
                              "labels",
                              "packagings",
                              "business_cards",
                              "flyers",
                              "leaflets",
                              "brochures",
                              "large_formats"
                            ]
                          }
                        },
                        "supplier": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "sheet_substrates",
                              "web_substrates",
                              "ink",
                              "plates",
                              "foils",
                              "other"
                            ]
                          }
                        },
                        "machine_vendor": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "sheet_fed_offset_presses",
                              "web_fed_offset_presses",
                              "sheet_fed_digital_presses",
                              "web_fed_digital_presses",
                              "cutters",
                              "binders",
                              "saddle_stitchers"
                            ]
                          }
                        },
                        "designer": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "self_employed",
                              "studio",
                              "inhouse",
                              "other"
                            ]
                          }
                        },
                        "publisher": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "softcover_books",
                              "hardcover_books",
                              "brochures"
                            ]
                          }
                        },
                        "software_developer": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "imposing",
                              "ganging",
                              "mis",
                              "reporting",
                              "web_to_print",
                              "logistics",
                              "warehousing",
                              "machine_integration",
                              "preflight",
                              "workflow",
                              "billing",
                              "accounting",
                              "production_planning",
                              "production_scheduling",
                              "production_capacity_planning"
                            ]
                          }
                        }
                      }
                    },
                    "kind": {
                      "type": "string",
                      "example": "printer",
                      "description": "DEPRECATED please use kinds since organizations can have multiple kinds",
                      "enum": [
                        "printer",
                        "supplier",
                        "machine_vendor",
                        "brand_owner",
                        "designer",
                        "publisher",
                        "software_developer",
                        "other"
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "example": "EUR",
                      "nullable": true,
                      "description": "Currency in [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format"
                    },
                    "brand_color": {
                      "type": "string",
                      "pattern": "^\\A#?(?:[0-9a-fA-F]{3}){1,2}\\z$",
                      "example": "#000000",
                      "nullable": true,
                      "description": "Brand color in hex color format"
                    },
                    "test_account_owner_id": {
                      "type": "string",
                      "nullable": true,
                      "example": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                      "description": "If this is a test account, the organization id of the owner of this test organization is returned. If this is not a test account this will be null. Test accounts are only available in the sandbox environment.\n"
                    }
                  }
                },
                "example": {
                  "id": "12558be2-f82e-4ab8-8de7-a1c91773e49a",
                  "name": "Automatically Generated Organization",
                  "slug": "automatically-generated-organization",
                  "connected": true,
                  "kinds": [
                    "printer",
                    "supplier"
                  ],
                  "sections": {
                    "printer": [
                      "softcover_books"
                    ],
                    "supplier": []
                  },
                  "country_code": "US",
                  "brand_color": null,
                  "currency": "USD",
                  "test_account_owner_id": null,
                  "created_at": "2021-01-15T11:13:20.020+01:00",
                  "updated_at": "2021-01-15T11:13:20.043+01:00",
                  "logo_url": null,
                  "kind": "printer",
                  "subscription": null
                }
              }
            }
          }
        }
      }
    },
    "/person/organizations/{organization_id}/memberships": {
      "get": {
        "tags": [
          "Person's Organization"
        ],
        "description": "Lists memberships and members of the current organization.\n- needed bearer: `Person`\n- needed scopes: `directory.organizations.r` or `directory.organizations.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "required": [
                          "id",
                          "created_at",
                          "updated_at",
                          "roles"
                        ],
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "roles": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "member"
                            ]
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "person"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "person": {
                            "type": "object",
                            "required": [
                              "id",
                              "full_name",
                              "avatar_url",
                              "connected"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "29b276b7-c0fa-4514-a5b1-c0fb4ee40fa7"
                              },
                              "full_name": {
                                "type": "string",
                                "example": "Jane Doe"
                              },
                              "avatar_url": {
                                "type": "string",
                                "nullable": true,
                                "example": "https://directory.zaikio.com/rails/active_storage/blobs/avatar.jpg"
                              },
                              "connected": {
                                "type": "boolean",
                                "description": "True if person is connected to current app (display in aud)"
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "example": [
                  {
                    "id": "b8a1cd10-a110-551c-b6f1-d8aa549a6817",
                    "roles": [
                      "owner"
                    ],
                    "created_at": "2020-02-21T15:51:58.958Z",
                    "updated_at": "2020-02-21T15:51:58.958Z",
                    "person": {
                      "id": "383663bc-149a-5b76-b50d-ee039046c12e",
                      "full_name": "Frank Gallikanokus",
                      "connected": false,
                      "avatar_url": null
                    }
                  },
                  {
                    "id": "b6a70f99-d077-5de1-8522-725ced0fdfbb",
                    "roles": [
                      "member"
                    ],
                    "created_at": "2020-02-21T15:51:58.958Z",
                    "updated_at": "2020-02-21T15:51:58.958Z",
                    "person": {
                      "id": "6afd2277-9e1f-5a88-8984-bacb5f798716",
                      "full_name": "Tony Stark",
                      "connected": false,
                      "avatar_url": null
                    }
                  },
                  {
                    "id": "00256c88-1689-522c-81c4-b8b5b03cc09b",
                    "roles": [
                      "member"
                    ],
                    "created_at": "2020-02-21T15:51:58.958Z",
                    "updated_at": "2020-02-21T15:51:58.958Z",
                    "person": {
                      "id": "1fbe1870-f99b-5fbb-acad-0220e4c05113",
                      "full_name": "Cathrin Janeway",
                      "connected": false,
                      "avatar_url": null
                    }
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/person/organizations/{organization_id}/memberships/{membership_id}": {
      "get": {
        "tags": [
          "Person's Organization"
        ],
        "description": "Retrive a specific membership.\n- needed bearer: `Person`\n- needed scopes: `directory.organizations.r` or `directory.organizations.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "membership_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "required": [
                        "id",
                        "created_at",
                        "updated_at",
                        "roles"
                      ],
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "roles": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "member"
                          ]
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "person"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "person": {
                          "type": "object",
                          "required": [
                            "id",
                            "full_name",
                            "avatar_url",
                            "connected"
                          ],
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "example": "29b276b7-c0fa-4514-a5b1-c0fb4ee40fa7"
                            },
                            "full_name": {
                              "type": "string",
                              "example": "Jane Doe"
                            },
                            "avatar_url": {
                              "type": "string",
                              "nullable": true,
                              "example": "https://directory.zaikio.com/rails/active_storage/blobs/avatar.jpg"
                            },
                            "connected": {
                              "type": "boolean",
                              "description": "True if person is connected to current app (display in aud)"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "id": "b6a70f99-d077-5de1-8522-725ced0fdfbb",
                  "roles": [
                    "member"
                  ],
                  "created_at": "2020-08-03T11:00:43.077+02:00",
                  "updated_at": "2020-08-03T11:00:43.077+02:00",
                  "person": {
                    "id": "6afd2277-9e1f-5a88-8984-bacb5f798716",
                    "full_name": "Tony Stark",
                    "connected": true,
                    "avatar_url": null
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      },
      "delete": {
        "tags": [
          "Person's Organization"
        ],
        "description": "Removes specific membership. Not allowed with owner memberships.\n- needed bearer: `Person`\n- needed scopes: `directory.organizations.w` or `directory.organizations.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "membership_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      },
      "patch": {
        "tags": [
          "Person's Organization"
        ],
        "description": "Updates roles of a membership for an organization.\n- needed bearer: `Person`\n- needed scopes: `directory.organizations.w` or `directory.organizations.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "membership_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "required": [
                        "id",
                        "created_at",
                        "updated_at",
                        "roles"
                      ],
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "roles": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "member"
                          ]
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "person"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "person": {
                          "type": "object",
                          "required": [
                            "id",
                            "full_name",
                            "avatar_url",
                            "connected"
                          ],
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "example": "29b276b7-c0fa-4514-a5b1-c0fb4ee40fa7"
                            },
                            "full_name": {
                              "type": "string",
                              "example": "Jane Doe"
                            },
                            "avatar_url": {
                              "type": "string",
                              "nullable": true,
                              "example": "https://directory.zaikio.com/rails/active_storage/blobs/avatar.jpg"
                            },
                            "connected": {
                              "type": "boolean",
                              "description": "True if person is connected to current app (display in aud)"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "id": "b6a70f99-d077-5de1-8522-725ced0fdfbb",
                  "roles": [
                    "production_planner",
                    "member"
                  ],
                  "created_at": "2020-03-11T10:49:06.428+01:00",
                  "updated_at": "2020-03-11T10:49:07.010+01:00",
                  "person": {
                    "id": "6afd2277-9e1f-5a88-8984-bacb5f798716",
                    "full_name": "Tony Stark",
                    "connected": false,
                    "avatar_url": null
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (Validation error)",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/person/organizations/{organization_id}/membership_invitations": {
      "get": {
        "description": "Retrieves list of membership invitations for a specific organization in that the person is an admin or owner.\n- needed bearer: `Person`\n- needed scopes: `directory.organizations.r` or `directory.organizations.rw`\n\n`Person`: `admin` or `owner` role in given organization\n",
        "tags": [
          "Person's Organization"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization_id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns list of membership invitations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "required": [
                      "id",
                      "email",
                      "roles",
                      "full_name",
                      "avatar_url",
                      "expires_at",
                      "created_at",
                      "updated_at"
                    ],
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                      },
                      "email": {
                        "type": "string",
                        "format": "email"
                      },
                      "roles": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "See roles endpoint for available roles"
                        }
                      },
                      "full_name": {
                        "type": "string",
                        "description": "given name or email"
                      },
                      "avatar_url": {
                        "nullable": true,
                        "type": "string",
                        "description": "Avatar URL if user exists"
                      },
                      "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "When the invitation expires"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "id": "cb40af61-e9e1-5165-a4f2-7553298b151a",
                    "email": "jlp@example.com",
                    "roles": [],
                    "full_name": "Jean-Luc Picard",
                    "expires_at": "2020-08-19T11:50:25.972+02:00",
                    "created_at": "2020-08-12T11:50:25.972+02:00",
                    "updated_at": "2020-08-12T11:50:25.972+02:00",
                    "avatar_url": null
                  }
                ]
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "description": "Sends a membership invitation for a specific organization in that the person is an admin or owner.\n- needed bearer: `Person`\n- needed scopes: `directory.organizations.w` or `directory.organizations.rw`\n\n`Person`: `admin` or `owner` role in given organization\n",
        "tags": [
          "Person"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "membership_invitation"
                ],
                "properties": {
                  "membership_invitation": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "email"
                    ],
                    "properties": {
                      "email": {
                        "type": "string",
                        "format": "email",
                        "example": "somebody@example.com",
                        "description": "E-Mail of the invitee"
                      },
                      "roles": {
                        "type": "array",
                        "example": [
                          "designer",
                          "admin"
                        ],
                        "description": "Optional list of roles for the invitee",
                        "items": {
                          "type": "string",
                          "description": "See roles endpoint"
                        }
                      },
                      "first_name": {
                        "type": "string",
                        "example": "Frank",
                        "description": "Optional first name of the invitee"
                      },
                      "name": {
                        "type": "string",
                        "example": "Gallikanokus",
                        "description": "Optional name of the invitee"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "organization_id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns membership invitation",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "id",
                    "email",
                    "roles",
                    "full_name",
                    "avatar_url",
                    "expires_at",
                    "created_at",
                    "updated_at"
                  ],
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                    },
                    "email": {
                      "type": "string",
                      "format": "email"
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "See roles endpoint for available roles"
                      }
                    },
                    "full_name": {
                      "type": "string",
                      "description": "given name or email"
                    },
                    "avatar_url": {
                      "nullable": true,
                      "type": "string",
                      "description": "Avatar URL if user exists"
                    },
                    "expires_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "When the invitation expires"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "example": {
                  "id": "21ff297e-fcd8-4056-b4cc-deea7516b8cf",
                  "email": "somebody@example.com",
                  "roles": [
                    "admin",
                    "designer"
                  ],
                  "full_name": "Some Body",
                  "expires_at": "2020-08-19T11:50:26.539+02:00",
                  "created_at": "2020-08-12T11:50:26.539+02:00",
                  "updated_at": "2020-08-12T11:50:26.539+02:00",
                  "avatar_url": null
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/person/organizations/{organization_id}/membership_invitations/{membership_invitation_id}": {
      "delete": {
        "description": "Deletes membership invitation for a specific organization in that the person is an admin or owner.\n- needed bearer: `Person`\n- needed scopes: `directory.organizations.r` or `directory.organizations.rw`\n\n`Person`: `admin` or `owner` role in given organization\n",
        "tags": [
          "Person's Organization"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization_id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
            }
          },
          {
            "in": "path",
            "name": "membership_invitation_id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/person/organizations/{organization_id}/machines": {
      "get": {
        "tags": [
          "Person's Organization"
        ],
        "description": "Lists machines of the current organization.\n- needed bearer: `Person`\n- needed scopes: `directory.machines.r` or `directory.machines.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filters[site_id]",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "id",
                      "name",
                      "kind",
                      "serial_number",
                      "manufacturer",
                      "site_id",
                      "owner_id",
                      "created_at",
                      "updated_at"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                      },
                      "name": {
                        "type": "string",
                        "example": "Speedmaster 2020"
                      },
                      "manufacturer": {
                        "type": "string",
                        "description": "Long name of manufacturer or custom name",
                        "example": "Heidelberger Druckmaschinen AG"
                      },
                      "manufacturer_id": {
                        "nullable": true,
                        "type": "string",
                        "example": "heidelberg",
                        "enum": [
                          "JMD",
                          "MK",
                          "baumann",
                          "burg",
                          "canon",
                          "duplo",
                          "fuji",
                          "heidelberg",
                          "hohner",
                          "horizon",
                          "hp",
                          "hugobeck",
                          "hunkeler",
                          "hörauf",
                          "kalfass",
                          "kba",
                          "kodak",
                          "komori",
                          "kugeler-womako",
                          "magnum",
                          "man",
                          "mbo",
                          "meccanotechnica",
                          "miyakoshi",
                          "msi",
                          "müller-martini",
                          "perfecta",
                          "petrato",
                          "polar",
                          "ricoh",
                          "ryobi",
                          "screen",
                          "solema",
                          "stahl",
                          "technow",
                          "wohlenberg",
                          "xeikon",
                          "xerox"
                        ]
                      },
                      "serial_number": {
                        "type": "string",
                        "description": "Needs to be unique by manufacturer",
                        "example": "HDB1337",
                        "nullable": true
                      },
                      "kind": {
                        "type": "string",
                        "enum": [
                          "sheetfed_digital_press",
                          "web_digital_press",
                          "digital_press",
                          "sheetfed_offset_press",
                          "web_offset_press",
                          "offset_press",
                          "cutter",
                          "shape_cutter",
                          "folder",
                          "box_maker",
                          "gatherer",
                          "stitcher",
                          "adhesive_binder",
                          "trimmer",
                          "thread_sewer",
                          "case_maker",
                          "box_packer",
                          "ctp",
                          "platesetter"
                        ]
                      },
                      "site_id": {
                        "type": "string",
                        "nullable": true,
                        "format": "uuid",
                        "description": "Optional Site ID"
                      },
                      "owner_id": {
                        "type": "string",
                        "nullable": true,
                        "format": "uuid"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "id": "760c3948-18a0-5380-905b-9dc5ee8f75ea",
                    "name": "Speedmaster CX 102",
                    "serial_number": "HDB4911391234949123",
                    "manufacturer_id": "heidelberg",
                    "kind": "offset_press",
                    "site_id": "d6308910-f5ae-58c0-aba7-d099947845c6",
                    "created_at": "2020-05-07T16:06:38.292+02:00",
                    "updated_at": "2020-05-07T16:06:38.292+02:00",
                    "manufacturer": "Heidelberger Druckmaschinen AG",
                    "owner_id": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      },
      "post": {
        "tags": [
          "Person's Organization"
        ],
        "description": "Creates a machine, needs ownership assigned.\n- needed bearer: `Person`\n- needed scopes: `directory.machines.w` or `directory.machines.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "machine"
                ],
                "properties": {
                  "machine": {
                    "allOf": [
                      {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "Prinect"
                          },
                          "kind": {
                            "type": "string",
                            "enum": [
                              "sheetfed_digital_press",
                              "web_digital_press",
                              "digital_press",
                              "sheetfed_offset_press",
                              "web_offset_press",
                              "offset_press",
                              "cutter",
                              "shape_cutter",
                              "folder",
                              "box_maker",
                              "gatherer",
                              "stitcher",
                              "adhesive_binder",
                              "trimmer",
                              "thread_sewer",
                              "case_maker",
                              "box_packer",
                              "ctp",
                              "platesetter"
                            ]
                          },
                          "manufacturer": {
                            "type": "string",
                            "example": "heidelberg",
                            "description": "Please use one from our normalized list:\nJMD, MK, baumann, burg, canon, duplo, fuji, heidelberg, hohner, horizon, hp, hugobeck, hunkeler, hörauf, kalfass, kba, kodak, komori, kugeler-womako, magnum, man, mbo, meccanotechnica, miyakoshi, msi, müller-martini, perfecta, petrato, polar, ricoh, ryobi, screen, solema, stahl, technow, wohlenberg, xeikon, xerox\nWe also allow custom manufacturers but we kindly recommend you to avoid this. If your manufacturer is missing here, please contact us directly, so that we can offer this manufacturer to others.\n"
                          },
                          "serial_number": {
                            "description": "Unique by manufacturer",
                            "type": "string",
                            "example": "HDB1337"
                          },
                          "site_id": {
                            "description": "DEPRECATED: Please use site_id in machine_ownerships instead",
                            "type": "string",
                            "format": "uuid",
                            "example": "d6308910-f5ae-58c0-aba7-d099947845c6",
                            "deprecated": true
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "name",
                          "kind"
                        ],
                        "properties": {}
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "id",
                    "name",
                    "kind",
                    "serial_number",
                    "manufacturer",
                    "site_id",
                    "owner_id",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                    },
                    "name": {
                      "type": "string",
                      "example": "Speedmaster 2020"
                    },
                    "manufacturer": {
                      "type": "string",
                      "description": "Long name of manufacturer or custom name",
                      "example": "Heidelberger Druckmaschinen AG"
                    },
                    "manufacturer_id": {
                      "nullable": true,
                      "type": "string",
                      "example": "heidelberg",
                      "enum": [
                        "JMD",
                        "MK",
                        "baumann",
                        "burg",
                        "canon",
                        "duplo",
                        "fuji",
                        "heidelberg",
                        "hohner",
                        "horizon",
                        "hp",
                        "hugobeck",
                        "hunkeler",
                        "hörauf",
                        "kalfass",
                        "kba",
                        "kodak",
                        "komori",
                        "kugeler-womako",
                        "magnum",
                        "man",
                        "mbo",
                        "meccanotechnica",
                        "miyakoshi",
                        "msi",
                        "müller-martini",
                        "perfecta",
                        "petrato",
                        "polar",
                        "ricoh",
                        "ryobi",
                        "screen",
                        "solema",
                        "stahl",
                        "technow",
                        "wohlenberg",
                        "xeikon",
                        "xerox"
                      ]
                    },
                    "serial_number": {
                      "type": "string",
                      "description": "Needs to be unique by manufacturer",
                      "example": "HDB1337",
                      "nullable": true
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "sheetfed_digital_press",
                        "web_digital_press",
                        "digital_press",
                        "sheetfed_offset_press",
                        "web_offset_press",
                        "offset_press",
                        "cutter",
                        "shape_cutter",
                        "folder",
                        "box_maker",
                        "gatherer",
                        "stitcher",
                        "adhesive_binder",
                        "trimmer",
                        "thread_sewer",
                        "case_maker",
                        "box_packer",
                        "ctp",
                        "platesetter"
                      ]
                    },
                    "site_id": {
                      "type": "string",
                      "nullable": true,
                      "format": "uuid",
                      "description": "Optional Site ID"
                    },
                    "owner_id": {
                      "type": "string",
                      "nullable": true,
                      "format": "uuid"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "example": {
                  "id": "6ea649d2-e6f2-43a5-a429-6df6ca8b19b7",
                  "name": "Speedmaster 2020",
                  "serial_number": "HDB1337",
                  "manufacturer_id": null,
                  "kind": "offset_press",
                  "site_id": null,
                  "created_at": "2020-05-07T16:11:55.118+02:00",
                  "updated_at": "2020-05-07T16:11:55.118+02:00",
                  "manufacturer": "Heidelberger Druckmaschinen AG",
                  "owner_id": null
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (Validation error)",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/person/organizations/{organization_id}/machines/{machine_id}": {
      "get": {
        "tags": [
          "Person's Organization"
        ],
        "description": "Retrive a specific machine.\n- needed bearer: `Person`\n- needed scopes: `directory.machines.r` or `directory.machines.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "machine_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "id",
                    "name",
                    "kind",
                    "serial_number",
                    "manufacturer",
                    "site_id",
                    "owner_id",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                    },
                    "name": {
                      "type": "string",
                      "example": "Speedmaster 2020"
                    },
                    "manufacturer": {
                      "type": "string",
                      "description": "Long name of manufacturer or custom name",
                      "example": "Heidelberger Druckmaschinen AG"
                    },
                    "manufacturer_id": {
                      "nullable": true,
                      "type": "string",
                      "example": "heidelberg",
                      "enum": [
                        "JMD",
                        "MK",
                        "baumann",
                        "burg",
                        "canon",
                        "duplo",
                        "fuji",
                        "heidelberg",
                        "hohner",
                        "horizon",
                        "hp",
                        "hugobeck",
                        "hunkeler",
                        "hörauf",
                        "kalfass",
                        "kba",
                        "kodak",
                        "komori",
                        "kugeler-womako",
                        "magnum",
                        "man",
                        "mbo",
                        "meccanotechnica",
                        "miyakoshi",
                        "msi",
                        "müller-martini",
                        "perfecta",
                        "petrato",
                        "polar",
                        "ricoh",
                        "ryobi",
                        "screen",
                        "solema",
                        "stahl",
                        "technow",
                        "wohlenberg",
                        "xeikon",
                        "xerox"
                      ]
                    },
                    "serial_number": {
                      "type": "string",
                      "description": "Needs to be unique by manufacturer",
                      "example": "HDB1337",
                      "nullable": true
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "sheetfed_digital_press",
                        "web_digital_press",
                        "digital_press",
                        "sheetfed_offset_press",
                        "web_offset_press",
                        "offset_press",
                        "cutter",
                        "shape_cutter",
                        "folder",
                        "box_maker",
                        "gatherer",
                        "stitcher",
                        "adhesive_binder",
                        "trimmer",
                        "thread_sewer",
                        "case_maker",
                        "box_packer",
                        "ctp",
                        "platesetter"
                      ]
                    },
                    "site_id": {
                      "type": "string",
                      "nullable": true,
                      "format": "uuid",
                      "description": "Optional Site ID"
                    },
                    "owner_id": {
                      "type": "string",
                      "nullable": true,
                      "format": "uuid"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "example": {
                  "id": "760c3948-18a0-5380-905b-9dc5ee8f75ea",
                  "name": "Speedmaster CX 102",
                  "serial_number": "HDB4911391234949123",
                  "manufacturer_id": "heidelberg",
                  "kind": "offset_press",
                  "site_id": "d6308910-f5ae-58c0-aba7-d099947845c6",
                  "created_at": "2020-05-07T16:14:07.086+02:00",
                  "updated_at": "2020-05-07T16:14:07.086+02:00",
                  "manufacturer": "Heidelberger Druckmaschinen AG",
                  "owner_id": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/person/organizations/{organization_id}/machines/{machine_id}/machine_ownership": {
      "post": {
        "tags": [
          "Person's Organization"
        ],
        "description": "Creates ownership for asset.\n- needed bearer: `Person`\n- needed scopes: `directory.machines.w` or `directory.machines.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "machine_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "site_id",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "id",
                        "organization_id",
                        "terminated_at",
                        "asset_id",
                        "asset_type",
                        "created_at",
                        "updated_at"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "62abcc92-e17e-4db0-b78e-13369251474b"
                        },
                        "organization_id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                        },
                        "terminated_at": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "site_id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "3cbc2a23-de0e-4b0d-84b2-0c01d884957a",
                          "nullable": true
                        },
                        "asset_id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                        },
                        "asset_type": {
                          "type": "string",
                          "enum": [
                            "Machine",
                            "Software",
                            "Specialist"
                          ]
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "machine_id"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "machine_id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "id": "ca6ef864-8f2b-4b72-8bf3-bdbc28010224",
                  "organization_id": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                  "terminated_at": null,
                  "asset_id": "627d925b-1d98-53f2-a68a-7db16004551f",
                  "asset_type": "Machine",
                  "site_id": null,
                  "created_at": "2020-05-07T16:45:10.315+02:00",
                  "updated_at": "2020-05-07T16:45:10.315+02:00",
                  "machine_id": "627d925b-1d98-53f2-a68a-7db16004551f"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (Validation error)",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      },
      "patch": {
        "tags": [
          "Person's Organization"
        ],
        "description": "Updates ownership for asset.\n- needed bearer: `Person`\n- needed scopes: `directory.machines.w` or `directory.machines.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "machine_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "machine_ownership"
                ],
                "properties": {
                  "machine_ownership": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "site_id"
                    ],
                    "properties": {
                      "site_id": {
                        "nullable": true,
                        "type": "string",
                        "format": "uuid",
                        "example": "3cbc2a23-de0e-4b0d-84b2-0c01d884957a"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "id",
                        "organization_id",
                        "terminated_at",
                        "asset_id",
                        "asset_type",
                        "created_at",
                        "updated_at"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "62abcc92-e17e-4db0-b78e-13369251474b"
                        },
                        "organization_id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                        },
                        "terminated_at": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "site_id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "3cbc2a23-de0e-4b0d-84b2-0c01d884957a",
                          "nullable": true
                        },
                        "asset_id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                        },
                        "asset_type": {
                          "type": "string",
                          "enum": [
                            "Machine",
                            "Software",
                            "Specialist"
                          ]
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "machine_id"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "machine_id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "id": "486bd5ca-3958-5ab9-8f12-8f245db4d7a8",
                  "organization_id": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                  "terminated_at": null,
                  "asset_id": "760c3948-18a0-5380-905b-9dc5ee8f75ea",
                  "asset_type": "Machine",
                  "site_id": "8fff4ac9-9daa-59e8-903e-1dd99beb6879",
                  "created_at": "2020-05-07T16:46:44.256+02:00",
                  "updated_at": "2020-05-07T16:46:45.491+02:00",
                  "machine_id": "760c3948-18a0-5380-905b-9dc5ee8f75ea"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (Validation error)",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      },
      "get": {
        "tags": [
          "Person's Organization"
        ],
        "description": "Show ownership.\n- needed bearer: `Person`\n- needed scopes: `directory.machines.r` or `directory.machines.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "machine_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "id",
                        "organization_id",
                        "terminated_at",
                        "asset_id",
                        "asset_type",
                        "created_at",
                        "updated_at"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "62abcc92-e17e-4db0-b78e-13369251474b"
                        },
                        "organization_id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                        },
                        "terminated_at": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "site_id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "3cbc2a23-de0e-4b0d-84b2-0c01d884957a",
                          "nullable": true
                        },
                        "asset_id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                        },
                        "asset_type": {
                          "type": "string",
                          "enum": [
                            "Machine",
                            "Software",
                            "Specialist"
                          ]
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "machine_id"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "machine_id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "id": "486bd5ca-3958-5ab9-8f12-8f245db4d7a8",
                  "organization_id": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                  "terminated_at": null,
                  "asset_id": "760c3948-18a0-5380-905b-9dc5ee8f75ea",
                  "asset_type": "Machine",
                  "site_id": "d6308910-f5ae-58c0-aba7-d099947845c6",
                  "created_at": "2020-05-07T16:47:32.719+02:00",
                  "updated_at": "2020-05-07T16:47:32.719+02:00",
                  "machine_id": "760c3948-18a0-5380-905b-9dc5ee8f75ea"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      },
      "delete": {
        "tags": [
          "Person's Organization"
        ],
        "description": "Removes ownership for asset. Needs special scope: `directory.remove_machines`.\n- needed bearer: `Person`\n- needed scopes: `directory.machines.w` or `directory.machines.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "machine_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/person/organizations/{organization_id}/software": {
      "get": {
        "tags": [
          "Person's Organization"
        ],
        "description": "Lists software assets of the current organization.\n- needed bearer: `Person`\n- needed scopes: `directory.software.r` or `directory.software.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filters[site_id]",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "id",
                      "name",
                      "kind",
                      "vendor",
                      "site_id",
                      "owner_id",
                      "created_at",
                      "updated_at"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                      },
                      "name": {
                        "type": "string",
                        "example": "Prinect"
                      },
                      "vendor": {
                        "type": "string",
                        "description": "Long name of vendor or custom name",
                        "example": "Heidelberger Druckmaschinen AG"
                      },
                      "vendor_id": {
                        "nullable": true,
                        "type": "string",
                        "example": "heidelberg",
                        "enum": [
                          "heidelberg",
                          "zaikio"
                        ]
                      },
                      "kind": {
                        "type": "string",
                        "enum": [
                          "erp",
                          "mis"
                        ]
                      },
                      "site_id": {
                        "type": "string",
                        "nullable": true,
                        "format": "uuid",
                        "description": "Optional Site ID"
                      },
                      "owner_id": {
                        "type": "string",
                        "nullable": true,
                        "format": "uuid"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "id": "4fee0257-d7c7-5d11-b9a4-16f95c72cdd3",
                    "name": "Prinect",
                    "vendor_id": "heidelberg",
                    "kind": "erp",
                    "site_id": "d6308910-f5ae-58c0-aba7-d099947845c6",
                    "created_at": "2020-05-07T16:15:48.143+02:00",
                    "updated_at": "2020-05-07T16:15:48.143+02:00",
                    "vendor": "Heidelberger Druckmaschinen AG",
                    "owner_id": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      },
      "post": {
        "tags": [
          "Person's Organization"
        ],
        "description": "Creates a software asset, needs ownership assigned.\n- needed bearer: `Person`\n- needed scopes: `directory.software.w` or `directory.software.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "software"
                ],
                "properties": {
                  "software": {
                    "allOf": [
                      {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "Prinect"
                          },
                          "kind": {
                            "type": "string",
                            "enum": [
                              "erp",
                              "mis"
                            ]
                          },
                          "vendor": {
                            "type": "string",
                            "example": "heidelberg",
                            "description": "Please use one from our normalized list:\nheidelberg, zaikio\nWe also allow custom vendors but we kindly recommend you to avoid this. If your vendor is missing here, please contact us directly, so that we can offer this vendor to others.\n"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "name",
                          "kind"
                        ],
                        "properties": {}
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "id",
                    "name",
                    "kind",
                    "vendor",
                    "site_id",
                    "owner_id",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                    },
                    "name": {
                      "type": "string",
                      "example": "Prinect"
                    },
                    "vendor": {
                      "type": "string",
                      "description": "Long name of vendor or custom name",
                      "example": "Heidelberger Druckmaschinen AG"
                    },
                    "vendor_id": {
                      "nullable": true,
                      "type": "string",
                      "example": "heidelberg",
                      "enum": [
                        "heidelberg",
                        "zaikio"
                      ]
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "erp",
                        "mis"
                      ]
                    },
                    "site_id": {
                      "type": "string",
                      "nullable": true,
                      "format": "uuid",
                      "description": "Optional Site ID"
                    },
                    "owner_id": {
                      "type": "string",
                      "nullable": true,
                      "format": "uuid"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "example": {
                  "id": "bdd2773f-4055-4b99-bfd5-d81541cb0087",
                  "name": "My Software",
                  "vendor_id": "zaikio",
                  "kind": "mis",
                  "site_id": null,
                  "created_at": "2020-05-07T16:18:52.971+02:00",
                  "updated_at": "2020-05-07T16:18:52.971+02:00",
                  "vendor": "Zaikio GmbH",
                  "owner_id": null
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (Validation error)",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/person/organizations/{organization_id}/software/{software_id}": {
      "get": {
        "tags": [
          "Person's Organization"
        ],
        "description": "Retrive a specific software asset.\n- needed bearer: `Person`\n- needed scopes: `directory.software.r` or `directory.software.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "software_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "id",
                    "name",
                    "kind",
                    "vendor",
                    "site_id",
                    "owner_id",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                    },
                    "name": {
                      "type": "string",
                      "example": "Prinect"
                    },
                    "vendor": {
                      "type": "string",
                      "description": "Long name of vendor or custom name",
                      "example": "Heidelberger Druckmaschinen AG"
                    },
                    "vendor_id": {
                      "nullable": true,
                      "type": "string",
                      "example": "heidelberg",
                      "enum": [
                        "heidelberg",
                        "zaikio"
                      ]
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "erp",
                        "mis"
                      ]
                    },
                    "site_id": {
                      "type": "string",
                      "nullable": true,
                      "format": "uuid",
                      "description": "Optional Site ID"
                    },
                    "owner_id": {
                      "type": "string",
                      "nullable": true,
                      "format": "uuid"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "example": {
                  "id": "4fee0257-d7c7-5d11-b9a4-16f95c72cdd3",
                  "name": "Prinect",
                  "vendor_id": "heidelberg",
                  "kind": "erp",
                  "site_id": "d6308910-f5ae-58c0-aba7-d099947845c6",
                  "created_at": "2020-05-07T16:14:38.085+02:00",
                  "updated_at": "2020-05-07T16:14:38.085+02:00",
                  "vendor": "Heidelberger Druckmaschinen AG",
                  "owner_id": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/person/organizations/{organization_id}/software/{software_id}/software_ownership": {
      "post": {
        "tags": [
          "Person's Organization"
        ],
        "description": "Creates ownership for asset.\n- needed bearer: `Person`\n- needed scopes: `directory.software.w` or `directory.software.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "software_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "site_id",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "organization_id",
                    "terminated_at",
                    "asset_id",
                    "asset_type",
                    "created_at",
                    "updated_at"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "62abcc92-e17e-4db0-b78e-13369251474b"
                    },
                    "organization_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                    },
                    "terminated_at": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "site_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "3cbc2a23-de0e-4b0d-84b2-0c01d884957a",
                      "nullable": true
                    },
                    "asset_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                    },
                    "asset_type": {
                      "type": "string",
                      "enum": [
                        "Machine",
                        "Software",
                        "Specialist"
                      ]
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "example": {
                  "id": "b3550e10-33f7-4ef8-8a55-ff1f27f6746d",
                  "organization_id": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                  "terminated_at": null,
                  "asset_id": "1a365141-e027-5755-b6d5-ee3da0f625e7",
                  "asset_type": "Software",
                  "site_id": null,
                  "created_at": "2020-05-07T16:50:24.865+02:00",
                  "updated_at": "2020-05-07T16:50:24.865+02:00"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (Validation error)",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      },
      "patch": {
        "tags": [
          "Person's Organization"
        ],
        "description": "Updates ownership for asset.\n- needed bearer: `Person`\n- needed scopes: `directory.software.w` or `directory.software.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "software_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "software_ownership"
                ],
                "properties": {
                  "software_ownership": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "site_id"
                    ],
                    "properties": {
                      "site_id": {
                        "nullable": true,
                        "type": "string",
                        "format": "uuid",
                        "example": "3cbc2a23-de0e-4b0d-84b2-0c01d884957a"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "organization_id",
                    "terminated_at",
                    "asset_id",
                    "asset_type",
                    "created_at",
                    "updated_at"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "62abcc92-e17e-4db0-b78e-13369251474b"
                    },
                    "organization_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                    },
                    "terminated_at": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "site_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "3cbc2a23-de0e-4b0d-84b2-0c01d884957a",
                      "nullable": true
                    },
                    "asset_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                    },
                    "asset_type": {
                      "type": "string",
                      "enum": [
                        "Machine",
                        "Software",
                        "Specialist"
                      ]
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "example": {
                  "id": "79f9798f-6284-5534-b870-4a915e53150e",
                  "organization_id": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                  "terminated_at": null,
                  "asset_id": "4fee0257-d7c7-5d11-b9a4-16f95c72cdd3",
                  "asset_type": "Software",
                  "site_id": "8fff4ac9-9daa-59e8-903e-1dd99beb6879",
                  "created_at": "2020-05-07T16:51:01.777+02:00",
                  "updated_at": "2020-05-07T16:51:04.397+02:00"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (Validation error)",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      },
      "get": {
        "tags": [
          "Person's Organization"
        ],
        "description": "Show ownership.\n- needed bearer: `Person`\n- needed scopes: `directory.software.r` or `directory.software.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "software_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "organization_id",
                    "terminated_at",
                    "asset_id",
                    "asset_type",
                    "created_at",
                    "updated_at"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "62abcc92-e17e-4db0-b78e-13369251474b"
                    },
                    "organization_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                    },
                    "terminated_at": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "site_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "3cbc2a23-de0e-4b0d-84b2-0c01d884957a",
                      "nullable": true
                    },
                    "asset_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                    },
                    "asset_type": {
                      "type": "string",
                      "enum": [
                        "Machine",
                        "Software",
                        "Specialist"
                      ]
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "example": {
                  "id": "79f9798f-6284-5534-b870-4a915e53150e",
                  "organization_id": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                  "terminated_at": null,
                  "asset_id": "4fee0257-d7c7-5d11-b9a4-16f95c72cdd3",
                  "asset_type": "Software",
                  "site_id": "d6308910-f5ae-58c0-aba7-d099947845c6",
                  "created_at": "2020-05-07T16:51:37.252+02:00",
                  "updated_at": "2020-05-07T16:51:37.252+02:00"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      },
      "delete": {
        "tags": [
          "Person's Organization"
        ],
        "description": "Removes ownership for asset. Needs special scope: `directory.remove_software`.\n- needed bearer: `Person`\n- needed scopes: `directory.software.w` or `directory.software.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "software_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/person/organizations/{organization_id}/sites": {
      "get": {
        "tags": [
          "Person's Organization"
        ],
        "description": "Some organizations might have multiple sites because they have several locations.\n                       This returns a list of the current organization's sites.\n- needed bearer: `Person`\n- needed scopes: `directory.sites.r` or `directory.sites.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "required": [
                          "name",
                          "headquarter",
                          "address",
                          "created_at",
                          "updated_at"
                        ],
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "d6308910-f5ae-58c0-aba7-d099947845c6"
                          },
                          "name": {
                            "type": "string"
                          },
                          "headquarter": {
                            "type": "boolean",
                            "description": "If this is the headquarter site (every organization has exactly one)"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "address": {
                            "type": "object",
                            "nullable": true,
                            "required": [
                              "id",
                              "addressee",
                              "street",
                              "number",
                              "zip_code",
                              "town",
                              "country_code",
                              "state",
                              "addition",
                              "location",
                              "created_at",
                              "updated_at"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "95fd969d-684f-49f6-b17d-5f4e786c11a9"
                              },
                              "addressee": {
                                "type": "string",
                                "example": "Zaikio GmbH"
                              },
                              "street": {
                                "type": "string",
                                "example": "Emmerich-Josef-Straße"
                              },
                              "number": {
                                "type": "string",
                                "example": "1A",
                                "nullable": true
                              },
                              "zip_code": {
                                "type": "string",
                                "example": "551166"
                              },
                              "town": {
                                "type": "string",
                                "example": "Mainz"
                              },
                              "country_code": {
                                "type": "string",
                                "example": "DE",
                                "nullable": true
                              },
                              "state": {
                                "type": "string",
                                "example": "Rheinland-Pfalz"
                              },
                              "addition": {
                                "type": "string",
                                "nullable": true
                              },
                              "location": {
                                "type": "array",
                                "minItems": 2,
                                "maxItems": 2,
                                "description": "Latitude and Longitude",
                                "items": {
                                  "type": "number"
                                }
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "organization"
                        ],
                        "properties": {
                          "organization": {
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "name",
                              "created_at",
                              "updated_at",
                              "slug",
                              "logo_url",
                              "connected",
                              "kinds",
                              "sections",
                              "country_code",
                              "currency",
                              "subscription",
                              "brand_color",
                              "test_account_owner_id"
                            ],
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                              },
                              "slug": {
                                "type": "string",
                                "example": "bounty-soap-inc"
                              },
                              "name": {
                                "type": "string",
                                "example": "Bounty Soap Inc."
                              },
                              "logo_url": {
                                "type": "string",
                                "format": "uri",
                                "nullable": true
                              },
                              "connected": {
                                "type": "boolean",
                                "description": "True if organization is connected to current app (display in aud)"
                              },
                              "subscription": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                      "status",
                                      "plan"
                                    ],
                                    "properties": {
                                      "status": {
                                        "type": "string",
                                        "enum": [
                                          "provisioning",
                                          "active",
                                          "unpaid"
                                        ],
                                        "description": "If a subscription was unpaid, you might disable the features available for this subscription. You may want to give the subscriber a little more time. Therefore you can also use `last_paid_at`. A subscription might also change from unpaid to active again.\n"
                                      },
                                      "plan": {
                                        "type": "string",
                                        "description": "The name of a plan or `enterprise` if this subscription is linked to an enterprise plan"
                                      }
                                    }
                                  },
                                  {
                                    "nullable": true
                                  }
                                ]
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "country_code": {
                                "type": "string",
                                "example": "DE",
                                "nullable": true
                              },
                              "kinds": {
                                "type": "array",
                                "minItems": 1,
                                "items": {
                                  "type": "string",
                                  "example": "printer",
                                  "enum": [
                                    "printer",
                                    "supplier",
                                    "machine_vendor",
                                    "brand_owner",
                                    "designer",
                                    "publisher",
                                    "software_developer",
                                    "other"
                                  ]
                                }
                              },
                              "sections": {
                                "type": "object",
                                "additionalProperties": false,
                                "description": "Only the sections that are also part of kinds are taken into account.",
                                "properties": {
                                  "printer": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "enum": [
                                        "softcover_books",
                                        "hardcover_books",
                                        "labels",
                                        "packagings",
                                        "business_cards",
                                        "flyers",
                                        "leaflets",
                                        "brochures",
                                        "large_formats"
                                      ]
                                    }
                                  },
                                  "supplier": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "enum": [
                                        "sheet_substrates",
                                        "web_substrates",
                                        "ink",
                                        "plates",
                                        "foils",
                                        "other"
                                      ]
                                    }
                                  },
                                  "machine_vendor": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "enum": [
                                        "sheet_fed_offset_presses",
                                        "web_fed_offset_presses",
                                        "sheet_fed_digital_presses",
                                        "web_fed_digital_presses",
                                        "cutters",
                                        "binders",
                                        "saddle_stitchers"
                                      ]
                                    }
                                  },
                                  "designer": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "enum": [
                                        "self_employed",
                                        "studio",
                                        "inhouse",
                                        "other"
                                      ]
                                    }
                                  },
                                  "publisher": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "enum": [
                                        "softcover_books",
                                        "hardcover_books",
                                        "brochures"
                                      ]
                                    }
                                  },
                                  "software_developer": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "enum": [
                                        "imposing",
                                        "ganging",
                                        "mis",
                                        "reporting",
                                        "web_to_print",
                                        "logistics",
                                        "warehousing",
                                        "machine_integration",
                                        "preflight",
                                        "workflow",
                                        "billing",
                                        "accounting",
                                        "production_planning",
                                        "production_scheduling",
                                        "production_capacity_planning"
                                      ]
                                    }
                                  }
                                }
                              },
                              "kind": {
                                "type": "string",
                                "example": "printer",
                                "description": "DEPRECATED please use kinds since organizations can have multiple kinds",
                                "enum": [
                                  "printer",
                                  "supplier",
                                  "machine_vendor",
                                  "brand_owner",
                                  "designer",
                                  "publisher",
                                  "software_developer",
                                  "other"
                                ]
                              },
                              "currency": {
                                "type": "string",
                                "example": "EUR",
                                "nullable": true,
                                "description": "Currency in [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format"
                              },
                              "brand_color": {
                                "type": "string",
                                "pattern": "^\\A#?(?:[0-9a-fA-F]{3}){1,2}\\z$",
                                "example": "#000000",
                                "nullable": true,
                                "description": "Brand color in hex color format"
                              },
                              "test_account_owner_id": {
                                "type": "string",
                                "nullable": true,
                                "example": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                                "description": "If this is a test account, the organization id of the owner of this test organization is returned. If this is not a test account this will be null. Test accounts are only available in the sandbox environment.\n"
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "example": [
                  {
                    "id": "d6308910-f5ae-58c0-aba7-d099947845c6",
                    "name": "Black Mesa Research Facility",
                    "headquarter": true,
                    "created_at": "2021-01-15T10:12:38.751Z",
                    "updated_at": "2021-01-15T10:12:38.751Z",
                    "organization": {
                      "id": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                      "name": "Bounty Soap Inc.",
                      "slug": "bounty_soap_inc",
                      "connected": true,
                      "kinds": [
                        "printer"
                      ],
                      "sections": {
                        "printer": [
                          "softcover_books",
                          "hardcover_books",
                          "business_cards",
                          "flyers"
                        ]
                      },
                      "country_code": "DE",
                      "brand_color": "#000000",
                      "currency": "EUR",
                      "test_account_owner_id": null,
                      "created_at": "2021-01-15T10:12:38.642Z",
                      "updated_at": "2021-01-15T10:12:38.642Z",
                      "logo_url": null,
                      "kind": "printer",
                      "subscription": {
                        "status": "active",
                        "plan": "advanced"
                      }
                    },
                    "address": {
                      "id": "7f06fbb7-ac7a-5557-8415-f70de75bbf5c",
                      "addressee": "Bounty Soap Inc.",
                      "street": "California Street Northeast",
                      "number": "115",
                      "zip_code": "87108",
                      "town": "Albuquerque",
                      "country_code": "US",
                      "state": "New Mexico",
                      "addition": null,
                      "location": [
                        35.077502,
                        0
                      ],
                      "created_at": "2021-01-15T10:12:38.566Z",
                      "updated_at": "2021-01-15T10:12:38.566Z"
                    }
                  },
                  {
                    "id": "8fff4ac9-9daa-59e8-903e-1dd99beb6879",
                    "name": "Black Mesa Headquaters",
                    "headquarter": false,
                    "created_at": "2021-01-15T10:12:38.751Z",
                    "updated_at": "2021-01-15T10:12:38.751Z",
                    "organization": {
                      "id": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                      "name": "Bounty Soap Inc.",
                      "slug": "bounty_soap_inc",
                      "connected": true,
                      "kinds": [
                        "printer"
                      ],
                      "sections": {
                        "printer": [
                          "softcover_books",
                          "hardcover_books",
                          "business_cards",
                          "flyers"
                        ]
                      },
                      "country_code": "DE",
                      "brand_color": "#000000",
                      "currency": "EUR",
                      "test_account_owner_id": null,
                      "created_at": "2021-01-15T10:12:38.642Z",
                      "updated_at": "2021-01-15T10:12:38.642Z",
                      "logo_url": null,
                      "kind": "printer",
                      "subscription": {
                        "status": "active",
                        "plan": "advanced"
                      }
                    },
                    "address": {
                      "id": "34e73d39-c338-5055-8956-9458a2e926d9",
                      "addressee": "Bounty Soap Inc.",
                      "street": "Gutenbergring",
                      "number": "17",
                      "zip_code": "69168",
                      "town": "Wiesloch",
                      "country_code": "DE",
                      "state": "Baden-Württemberg",
                      "addition": null,
                      "location": [
                        49.2900757,
                        0
                      ],
                      "created_at": "2021-01-15T10:12:38.566Z",
                      "updated_at": "2021-01-15T10:12:38.566Z"
                    }
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      },
      "post": {
        "tags": [
          "Person's Organization"
        ],
        "description": "Creates a site for the current organization.\n- needed bearer: `Person`\n- needed scopes: `directory.sites.w` or `directory.sites.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "site"
                ],
                "properties": {
                  "site": {
                    "allOf": [
                      {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "Berlin North"
                          },
                          "address_attributes": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                              "addressee",
                              "text"
                            ],
                            "properties": {
                              "addressee": {
                                "type": "string",
                                "example": "Crispy Mountain GmbH"
                              },
                              "text": {
                                "type": "string",
                                "description": "Address that will be parsed by Google",
                                "example": "Emmerich-Josef-Straße 1A, 55116 Mainz"
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {}
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "required": [
                        "name",
                        "headquarter",
                        "address",
                        "created_at",
                        "updated_at"
                      ],
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "d6308910-f5ae-58c0-aba7-d099947845c6"
                        },
                        "name": {
                          "type": "string"
                        },
                        "headquarter": {
                          "type": "boolean",
                          "description": "If this is the headquarter site (every organization has exactly one)"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "address": {
                          "type": "object",
                          "nullable": true,
                          "required": [
                            "id",
                            "addressee",
                            "street",
                            "number",
                            "zip_code",
                            "town",
                            "country_code",
                            "state",
                            "addition",
                            "location",
                            "created_at",
                            "updated_at"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "example": "95fd969d-684f-49f6-b17d-5f4e786c11a9"
                            },
                            "addressee": {
                              "type": "string",
                              "example": "Zaikio GmbH"
                            },
                            "street": {
                              "type": "string",
                              "example": "Emmerich-Josef-Straße"
                            },
                            "number": {
                              "type": "string",
                              "example": "1A",
                              "nullable": true
                            },
                            "zip_code": {
                              "type": "string",
                              "example": "551166"
                            },
                            "town": {
                              "type": "string",
                              "example": "Mainz"
                            },
                            "country_code": {
                              "type": "string",
                              "example": "DE",
                              "nullable": true
                            },
                            "state": {
                              "type": "string",
                              "example": "Rheinland-Pfalz"
                            },
                            "addition": {
                              "type": "string",
                              "nullable": true
                            },
                            "location": {
                              "type": "array",
                              "minItems": 2,
                              "maxItems": 2,
                              "description": "Latitude and Longitude",
                              "items": {
                                "type": "number"
                              }
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "updated_at": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "organization"
                      ],
                      "properties": {
                        "organization": {
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "name",
                            "created_at",
                            "updated_at",
                            "slug",
                            "logo_url",
                            "connected",
                            "kinds",
                            "sections",
                            "country_code",
                            "currency",
                            "subscription",
                            "brand_color",
                            "test_account_owner_id"
                          ],
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "example": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                            },
                            "slug": {
                              "type": "string",
                              "example": "bounty-soap-inc"
                            },
                            "name": {
                              "type": "string",
                              "example": "Bounty Soap Inc."
                            },
                            "logo_url": {
                              "type": "string",
                              "format": "uri",
                              "nullable": true
                            },
                            "connected": {
                              "type": "boolean",
                              "description": "True if organization is connected to current app (display in aud)"
                            },
                            "subscription": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "required": [
                                    "status",
                                    "plan"
                                  ],
                                  "properties": {
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "provisioning",
                                        "active",
                                        "unpaid"
                                      ],
                                      "description": "If a subscription was unpaid, you might disable the features available for this subscription. You may want to give the subscriber a little more time. Therefore you can also use `last_paid_at`. A subscription might also change from unpaid to active again.\n"
                                    },
                                    "plan": {
                                      "type": "string",
                                      "description": "The name of a plan or `enterprise` if this subscription is linked to an enterprise plan"
                                    }
                                  }
                                },
                                {
                                  "nullable": true
                                }
                              ]
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "updated_at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "country_code": {
                              "type": "string",
                              "example": "DE",
                              "nullable": true
                            },
                            "kinds": {
                              "type": "array",
                              "minItems": 1,
                              "items": {
                                "type": "string",
                                "example": "printer",
                                "enum": [
                                  "printer",
                                  "supplier",
                                  "machine_vendor",
                                  "brand_owner",
                                  "designer",
                                  "publisher",
                                  "software_developer",
                                  "other"
                                ]
                              }
                            },
                            "sections": {
                              "type": "object",
                              "additionalProperties": false,
                              "description": "Only the sections that are also part of kinds are taken into account.",
                              "properties": {
                                "printer": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "softcover_books",
                                      "hardcover_books",
                                      "labels",
                                      "packagings",
                                      "business_cards",
                                      "flyers",
                                      "leaflets",
                                      "brochures",
                                      "large_formats"
                                    ]
                                  }
                                },
                                "supplier": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "sheet_substrates",
                                      "web_substrates",
                                      "ink",
                                      "plates",
                                      "foils",
                                      "other"
                                    ]
                                  }
                                },
                                "machine_vendor": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "sheet_fed_offset_presses",
                                      "web_fed_offset_presses",
                                      "sheet_fed_digital_presses",
                                      "web_fed_digital_presses",
                                      "cutters",
                                      "binders",
                                      "saddle_stitchers"
                                    ]
                                  }
                                },
                                "designer": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "self_employed",
                                      "studio",
                                      "inhouse",
                                      "other"
                                    ]
                                  }
                                },
                                "publisher": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "softcover_books",
                                      "hardcover_books",
                                      "brochures"
                                    ]
                                  }
                                },
                                "software_developer": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "imposing",
                                      "ganging",
                                      "mis",
                                      "reporting",
                                      "web_to_print",
                                      "logistics",
                                      "warehousing",
                                      "machine_integration",
                                      "preflight",
                                      "workflow",
                                      "billing",
                                      "accounting",
                                      "production_planning",
                                      "production_scheduling",
                                      "production_capacity_planning"
                                    ]
                                  }
                                }
                              }
                            },
                            "kind": {
                              "type": "string",
                              "example": "printer",
                              "description": "DEPRECATED please use kinds since organizations can have multiple kinds",
                              "enum": [
                                "printer",
                                "supplier",
                                "machine_vendor",
                                "brand_owner",
                                "designer",
                                "publisher",
                                "software_developer",
                                "other"
                              ]
                            },
                            "currency": {
                              "type": "string",
                              "example": "EUR",
                              "nullable": true,
                              "description": "Currency in [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format"
                            },
                            "brand_color": {
                              "type": "string",
                              "pattern": "^\\A#?(?:[0-9a-fA-F]{3}){1,2}\\z$",
                              "example": "#000000",
                              "nullable": true,
                              "description": "Brand color in hex color format"
                            },
                            "test_account_owner_id": {
                              "type": "string",
                              "nullable": true,
                              "example": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                              "description": "If this is a test account, the organization id of the owner of this test organization is returned. If this is not a test account this will be null. Test accounts are only available in the sandbox environment.\n"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "id": "45d5859a-d542-4bb0-a2fc-3d3fd366a3be",
                  "name": "Berlin North",
                  "headquarter": false,
                  "created_at": "2021-01-15T11:14:49.034+01:00",
                  "updated_at": "2021-01-15T11:14:49.034+01:00",
                  "organization": {
                    "id": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                    "name": "Bounty Soap Inc.",
                    "slug": "bounty_soap_inc",
                    "connected": true,
                    "kinds": [
                      "printer"
                    ],
                    "sections": {
                      "printer": [
                        "softcover_books",
                        "hardcover_books",
                        "business_cards",
                        "flyers"
                      ]
                    },
                    "country_code": "DE",
                    "brand_color": "#000000",
                    "currency": "EUR",
                    "test_account_owner_id": null,
                    "created_at": "2021-01-15T11:12:38.642+01:00",
                    "updated_at": "2021-01-15T11:12:38.642+01:00",
                    "logo_url": null,
                    "kind": "printer",
                    "subscription": {
                      "status": "active",
                      "plan": "advanced"
                    }
                  },
                  "address": {
                    "id": "f9d74909-1d15-46ed-b30b-8415b3b7b7e6",
                    "addressee": "Crispy Mountain GmbH",
                    "street": "Pasewalker Straße",
                    "number": "25",
                    "zip_code": "13127",
                    "town": "Berlin",
                    "country_code": "DE",
                    "state": "Berlin",
                    "addition": null,
                    "location": [
                      52.5882204,
                      13.4294955
                    ],
                    "created_at": "2021-01-15T11:14:49.037+01:00",
                    "updated_at": "2021-01-15T11:14:49.037+01:00"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (Validation error)",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/person/organizations/{organization_id}/sites/{site_id}": {
      "get": {
        "tags": [
          "Person's Organization"
        ],
        "description": "Retrive a specific site.\n- needed bearer: `Person`\n- needed scopes: `directory.sites.r` or `directory.sites.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "site_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "required": [
                        "name",
                        "headquarter",
                        "address",
                        "created_at",
                        "updated_at"
                      ],
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "d6308910-f5ae-58c0-aba7-d099947845c6"
                        },
                        "name": {
                          "type": "string"
                        },
                        "headquarter": {
                          "type": "boolean",
                          "description": "If this is the headquarter site (every organization has exactly one)"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "address": {
                          "type": "object",
                          "nullable": true,
                          "required": [
                            "id",
                            "addressee",
                            "street",
                            "number",
                            "zip_code",
                            "town",
                            "country_code",
                            "state",
                            "addition",
                            "location",
                            "created_at",
                            "updated_at"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "example": "95fd969d-684f-49f6-b17d-5f4e786c11a9"
                            },
                            "addressee": {
                              "type": "string",
                              "example": "Zaikio GmbH"
                            },
                            "street": {
                              "type": "string",
                              "example": "Emmerich-Josef-Straße"
                            },
                            "number": {
                              "type": "string",
                              "example": "1A",
                              "nullable": true
                            },
                            "zip_code": {
                              "type": "string",
                              "example": "551166"
                            },
                            "town": {
                              "type": "string",
                              "example": "Mainz"
                            },
                            "country_code": {
                              "type": "string",
                              "example": "DE",
                              "nullable": true
                            },
                            "state": {
                              "type": "string",
                              "example": "Rheinland-Pfalz"
                            },
                            "addition": {
                              "type": "string",
                              "nullable": true
                            },
                            "location": {
                              "type": "array",
                              "minItems": 2,
                              "maxItems": 2,
                              "description": "Latitude and Longitude",
                              "items": {
                                "type": "number"
                              }
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "updated_at": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "organization"
                      ],
                      "properties": {
                        "organization": {
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "name",
                            "created_at",
                            "updated_at",
                            "slug",
                            "logo_url",
                            "connected",
                            "kinds",
                            "sections",
                            "country_code",
                            "currency",
                            "subscription",
                            "brand_color",
                            "test_account_owner_id"
                          ],
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "example": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                            },
                            "slug": {
                              "type": "string",
                              "example": "bounty-soap-inc"
                            },
                            "name": {
                              "type": "string",
                              "example": "Bounty Soap Inc."
                            },
                            "logo_url": {
                              "type": "string",
                              "format": "uri",
                              "nullable": true
                            },
                            "connected": {
                              "type": "boolean",
                              "description": "True if organization is connected to current app (display in aud)"
                            },
                            "subscription": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "required": [
                                    "status",
                                    "plan"
                                  ],
                                  "properties": {
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "provisioning",
                                        "active",
                                        "unpaid"
                                      ],
                                      "description": "If a subscription was unpaid, you might disable the features available for this subscription. You may want to give the subscriber a little more time. Therefore you can also use `last_paid_at`. A subscription might also change from unpaid to active again.\n"
                                    },
                                    "plan": {
                                      "type": "string",
                                      "description": "The name of a plan or `enterprise` if this subscription is linked to an enterprise plan"
                                    }
                                  }
                                },
                                {
                                  "nullable": true
                                }
                              ]
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "updated_at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "country_code": {
                              "type": "string",
                              "example": "DE",
                              "nullable": true
                            },
                            "kinds": {
                              "type": "array",
                              "minItems": 1,
                              "items": {
                                "type": "string",
                                "example": "printer",
                                "enum": [
                                  "printer",
                                  "supplier",
                                  "machine_vendor",
                                  "brand_owner",
                                  "designer",
                                  "publisher",
                                  "software_developer",
                                  "other"
                                ]
                              }
                            },
                            "sections": {
                              "type": "object",
                              "additionalProperties": false,
                              "description": "Only the sections that are also part of kinds are taken into account.",
                              "properties": {
                                "printer": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "softcover_books",
                                      "hardcover_books",
                                      "labels",
                                      "packagings",
                                      "business_cards",
                                      "flyers",
                                      "leaflets",
                                      "brochures",
                                      "large_formats"
                                    ]
                                  }
                                },
                                "supplier": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "sheet_substrates",
                                      "web_substrates",
                                      "ink",
                                      "plates",
                                      "foils",
                                      "other"
                                    ]
                                  }
                                },
                                "machine_vendor": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "sheet_fed_offset_presses",
                                      "web_fed_offset_presses",
                                      "sheet_fed_digital_presses",
                                      "web_fed_digital_presses",
                                      "cutters",
                                      "binders",
                                      "saddle_stitchers"
                                    ]
                                  }
                                },
                                "designer": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "self_employed",
                                      "studio",
                                      "inhouse",
                                      "other"
                                    ]
                                  }
                                },
                                "publisher": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "softcover_books",
                                      "hardcover_books",
                                      "brochures"
                                    ]
                                  }
                                },
                                "software_developer": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "imposing",
                                      "ganging",
                                      "mis",
                                      "reporting",
                                      "web_to_print",
                                      "logistics",
                                      "warehousing",
                                      "machine_integration",
                                      "preflight",
                                      "workflow",
                                      "billing",
                                      "accounting",
                                      "production_planning",
                                      "production_scheduling",
                                      "production_capacity_planning"
                                    ]
                                  }
                                }
                              }
                            },
                            "kind": {
                              "type": "string",
                              "example": "printer",
                              "description": "DEPRECATED please use kinds since organizations can have multiple kinds",
                              "enum": [
                                "printer",
                                "supplier",
                                "machine_vendor",
                                "brand_owner",
                                "designer",
                                "publisher",
                                "software_developer",
                                "other"
                              ]
                            },
                            "currency": {
                              "type": "string",
                              "example": "EUR",
                              "nullable": true,
                              "description": "Currency in [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format"
                            },
                            "brand_color": {
                              "type": "string",
                              "pattern": "^\\A#?(?:[0-9a-fA-F]{3}){1,2}\\z$",
                              "example": "#000000",
                              "nullable": true,
                              "description": "Brand color in hex color format"
                            },
                            "test_account_owner_id": {
                              "type": "string",
                              "nullable": true,
                              "example": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                              "description": "If this is a test account, the organization id of the owner of this test organization is returned. If this is not a test account this will be null. Test accounts are only available in the sandbox environment.\n"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "id": "d6308910-f5ae-58c0-aba7-d099947845c6",
                  "name": "Black Mesa Research Facility",
                  "headquarter": true,
                  "created_at": "2021-01-15T10:12:38.757Z",
                  "updated_at": "2021-01-15T10:12:38.757Z",
                  "organization": {
                    "id": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                    "name": "Bounty Soap Inc.",
                    "slug": "bounty_soap_inc",
                    "connected": true,
                    "kinds": [
                      "printer"
                    ],
                    "sections": {
                      "printer": [
                        "softcover_books",
                        "hardcover_books",
                        "business_cards",
                        "flyers"
                      ]
                    },
                    "country_code": "DE",
                    "brand_color": "#000000",
                    "currency": "EUR",
                    "test_account_owner_id": null,
                    "created_at": "2021-01-15T10:12:38.648Z",
                    "updated_at": "2021-01-15T10:12:38.648Z",
                    "logo_url": null,
                    "kind": "printer",
                    "subscription": {
                      "status": "active",
                      "plan": "advanced"
                    }
                  },
                  "address": {
                    "id": "7f06fbb7-ac7a-5557-8415-f70de75bbf5c",
                    "addressee": "Bounty Soap Inc.",
                    "street": "California Street Northeast",
                    "number": "115",
                    "zip_code": "87108",
                    "town": "Albuquerque",
                    "country_code": "US",
                    "state": "New Mexico",
                    "addition": null,
                    "location": [
                      35.077502,
                      0
                    ],
                    "created_at": "2021-01-15T10:12:38.571Z",
                    "updated_at": "2021-01-15T10:12:38.571Z"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      },
      "patch": {
        "tags": [
          "Person's Organization"
        ],
        "description": "Update a specific site.\n- needed bearer: `Person`\n- needed scopes: `directory.sites.w` or `directory.sites.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "site_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "site"
                ],
                "properties": {
                  "site": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "Berlin North"
                      },
                      "address_attributes": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "addressee",
                          "text"
                        ],
                        "properties": {
                          "addressee": {
                            "type": "string",
                            "example": "Crispy Mountain GmbH"
                          },
                          "text": {
                            "type": "string",
                            "description": "Address that will be parsed by Google",
                            "example": "Emmerich-Josef-Straße 1A, 55116 Mainz"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "required": [
                        "name",
                        "headquarter",
                        "address",
                        "created_at",
                        "updated_at"
                      ],
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "d6308910-f5ae-58c0-aba7-d099947845c6"
                        },
                        "name": {
                          "type": "string"
                        },
                        "headquarter": {
                          "type": "boolean",
                          "description": "If this is the headquarter site (every organization has exactly one)"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "address": {
                          "type": "object",
                          "nullable": true,
                          "required": [
                            "id",
                            "addressee",
                            "street",
                            "number",
                            "zip_code",
                            "town",
                            "country_code",
                            "state",
                            "addition",
                            "location",
                            "created_at",
                            "updated_at"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "example": "95fd969d-684f-49f6-b17d-5f4e786c11a9"
                            },
                            "addressee": {
                              "type": "string",
                              "example": "Zaikio GmbH"
                            },
                            "street": {
                              "type": "string",
                              "example": "Emmerich-Josef-Straße"
                            },
                            "number": {
                              "type": "string",
                              "example": "1A",
                              "nullable": true
                            },
                            "zip_code": {
                              "type": "string",
                              "example": "551166"
                            },
                            "town": {
                              "type": "string",
                              "example": "Mainz"
                            },
                            "country_code": {
                              "type": "string",
                              "example": "DE",
                              "nullable": true
                            },
                            "state": {
                              "type": "string",
                              "example": "Rheinland-Pfalz"
                            },
                            "addition": {
                              "type": "string",
                              "nullable": true
                            },
                            "location": {
                              "type": "array",
                              "minItems": 2,
                              "maxItems": 2,
                              "description": "Latitude and Longitude",
                              "items": {
                                "type": "number"
                              }
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "updated_at": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "organization"
                      ],
                      "properties": {
                        "organization": {
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "name",
                            "created_at",
                            "updated_at",
                            "slug",
                            "logo_url",
                            "connected",
                            "kinds",
                            "sections",
                            "country_code",
                            "currency",
                            "subscription",
                            "brand_color",
                            "test_account_owner_id"
                          ],
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "example": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                            },
                            "slug": {
                              "type": "string",
                              "example": "bounty-soap-inc"
                            },
                            "name": {
                              "type": "string",
                              "example": "Bounty Soap Inc."
                            },
                            "logo_url": {
                              "type": "string",
                              "format": "uri",
                              "nullable": true
                            },
                            "connected": {
                              "type": "boolean",
                              "description": "True if organization is connected to current app (display in aud)"
                            },
                            "subscription": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "required": [
                                    "status",
                                    "plan"
                                  ],
                                  "properties": {
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "provisioning",
                                        "active",
                                        "unpaid"
                                      ],
                                      "description": "If a subscription was unpaid, you might disable the features available for this subscription. You may want to give the subscriber a little more time. Therefore you can also use `last_paid_at`. A subscription might also change from unpaid to active again.\n"
                                    },
                                    "plan": {
                                      "type": "string",
                                      "description": "The name of a plan or `enterprise` if this subscription is linked to an enterprise plan"
                                    }
                                  }
                                },
                                {
                                  "nullable": true
                                }
                              ]
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "updated_at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "country_code": {
                              "type": "string",
                              "example": "DE",
                              "nullable": true
                            },
                            "kinds": {
                              "type": "array",
                              "minItems": 1,
                              "items": {
                                "type": "string",
                                "example": "printer",
                                "enum": [
                                  "printer",
                                  "supplier",
                                  "machine_vendor",
                                  "brand_owner",
                                  "designer",
                                  "publisher",
                                  "software_developer",
                                  "other"
                                ]
                              }
                            },
                            "sections": {
                              "type": "object",
                              "additionalProperties": false,
                              "description": "Only the sections that are also part of kinds are taken into account.",
                              "properties": {
                                "printer": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "softcover_books",
                                      "hardcover_books",
                                      "labels",
                                      "packagings",
                                      "business_cards",
                                      "flyers",
                                      "leaflets",
                                      "brochures",
                                      "large_formats"
                                    ]
                                  }
                                },
                                "supplier": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "sheet_substrates",
                                      "web_substrates",
                                      "ink",
                                      "plates",
                                      "foils",
                                      "other"
                                    ]
                                  }
                                },
                                "machine_vendor": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "sheet_fed_offset_presses",
                                      "web_fed_offset_presses",
                                      "sheet_fed_digital_presses",
                                      "web_fed_digital_presses",
                                      "cutters",
                                      "binders",
                                      "saddle_stitchers"
                                    ]
                                  }
                                },
                                "designer": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "self_employed",
                                      "studio",
                                      "inhouse",
                                      "other"
                                    ]
                                  }
                                },
                                "publisher": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "softcover_books",
                                      "hardcover_books",
                                      "brochures"
                                    ]
                                  }
                                },
                                "software_developer": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "imposing",
                                      "ganging",
                                      "mis",
                                      "reporting",
                                      "web_to_print",
                                      "logistics",
                                      "warehousing",
                                      "machine_integration",
                                      "preflight",
                                      "workflow",
                                      "billing",
                                      "accounting",
                                      "production_planning",
                                      "production_scheduling",
                                      "production_capacity_planning"
                                    ]
                                  }
                                }
                              }
                            },
                            "kind": {
                              "type": "string",
                              "example": "printer",
                              "description": "DEPRECATED please use kinds since organizations can have multiple kinds",
                              "enum": [
                                "printer",
                                "supplier",
                                "machine_vendor",
                                "brand_owner",
                                "designer",
                                "publisher",
                                "software_developer",
                                "other"
                              ]
                            },
                            "currency": {
                              "type": "string",
                              "example": "EUR",
                              "nullable": true,
                              "description": "Currency in [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format"
                            },
                            "brand_color": {
                              "type": "string",
                              "pattern": "^\\A#?(?:[0-9a-fA-F]{3}){1,2}\\z$",
                              "example": "#000000",
                              "nullable": true,
                              "description": "Brand color in hex color format"
                            },
                            "test_account_owner_id": {
                              "type": "string",
                              "nullable": true,
                              "example": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                              "description": "If this is a test account, the organization id of the owner of this test organization is returned. If this is not a test account this will be null. Test accounts are only available in the sandbox environment.\n"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "id": "d6308910-f5ae-58c0-aba7-d099947845c6",
                  "name": "Berlin North",
                  "headquarter": true,
                  "created_at": "2021-01-15T10:12:38.745Z",
                  "updated_at": "2021-01-15T10:14:48.194Z",
                  "organization": {
                    "id": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                    "name": "Bounty Soap Inc.",
                    "slug": "bounty_soap_inc",
                    "connected": true,
                    "kinds": [
                      "printer"
                    ],
                    "sections": {
                      "printer": [
                        "softcover_books",
                        "hardcover_books",
                        "business_cards",
                        "flyers"
                      ]
                    },
                    "country_code": "DE",
                    "brand_color": "#000000",
                    "currency": "EUR",
                    "test_account_owner_id": null,
                    "created_at": "2021-01-15T10:12:38.636Z",
                    "updated_at": "2021-01-15T10:12:38.636Z",
                    "logo_url": null,
                    "kind": "printer",
                    "subscription": {
                      "status": "active",
                      "plan": "advanced"
                    }
                  },
                  "address": {
                    "id": "e2020cf0-827c-41d1-a955-3181d8481c29",
                    "addressee": "Crispy Mountain GmbH",
                    "street": "Pasewalker Straße",
                    "number": "25",
                    "zip_code": "13127",
                    "town": "Berlin",
                    "country_code": "DE",
                    "state": "Berlin",
                    "addition": null,
                    "location": [
                      52.5882204,
                      13.4294955
                    ],
                    "created_at": "2021-01-15T10:14:48.196Z",
                    "updated_at": "2021-01-15T10:14:48.196Z"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (Validation error)",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/organization": {
      "get": {
        "tags": [
          "Organisation"
        ],
        "description": "Returns the current organization.\n- needed bearer: `Organization`\n- needed scopes: `directory.organization.r` or `directory.organization.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "required": [
                    "id",
                    "name",
                    "created_at",
                    "updated_at",
                    "slug",
                    "logo_url",
                    "connected",
                    "kinds",
                    "sections",
                    "country_code",
                    "currency",
                    "subscription",
                    "brand_color",
                    "test_account_owner_id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                    },
                    "slug": {
                      "type": "string",
                      "example": "bounty-soap-inc"
                    },
                    "name": {
                      "type": "string",
                      "example": "Bounty Soap Inc."
                    },
                    "logo_url": {
                      "type": "string",
                      "format": "uri",
                      "nullable": true
                    },
                    "connected": {
                      "type": "boolean",
                      "description": "True if organization is connected to current app (display in aud)"
                    },
                    "subscription": {
                      "anyOf": [
                        {
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "status",
                            "plan"
                          ],
                          "properties": {
                            "status": {
                              "type": "string",
                              "enum": [
                                "provisioning",
                                "active",
                                "unpaid"
                              ],
                              "description": "If a subscription was unpaid, you might disable the features available for this subscription. You may want to give the subscriber a little more time. Therefore you can also use `last_paid_at`. A subscription might also change from unpaid to active again.\n"
                            },
                            "plan": {
                              "type": "string",
                              "description": "The name of a plan or `enterprise` if this subscription is linked to an enterprise plan"
                            }
                          }
                        },
                        {
                          "nullable": true
                        }
                      ]
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "country_code": {
                      "type": "string",
                      "example": "DE",
                      "nullable": true
                    },
                    "kinds": {
                      "type": "array",
                      "minItems": 1,
                      "items": {
                        "type": "string",
                        "example": "printer",
                        "enum": [
                          "printer",
                          "supplier",
                          "machine_vendor",
                          "brand_owner",
                          "designer",
                          "publisher",
                          "software_developer",
                          "other"
                        ]
                      }
                    },
                    "sections": {
                      "type": "object",
                      "additionalProperties": false,
                      "description": "Only the sections that are also part of kinds are taken into account.",
                      "properties": {
                        "printer": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "softcover_books",
                              "hardcover_books",
                              "labels",
                              "packagings",
                              "business_cards",
                              "flyers",
                              "leaflets",
                              "brochures",
                              "large_formats"
                            ]
                          }
                        },
                        "supplier": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "sheet_substrates",
                              "web_substrates",
                              "ink",
                              "plates",
                              "foils",
                              "other"
                            ]
                          }
                        },
                        "machine_vendor": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "sheet_fed_offset_presses",
                              "web_fed_offset_presses",
                              "sheet_fed_digital_presses",
                              "web_fed_digital_presses",
                              "cutters",
                              "binders",
                              "saddle_stitchers"
                            ]
                          }
                        },
                        "designer": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "self_employed",
                              "studio",
                              "inhouse",
                              "other"
                            ]
                          }
                        },
                        "publisher": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "softcover_books",
                              "hardcover_books",
                              "brochures"
                            ]
                          }
                        },
                        "software_developer": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "imposing",
                              "ganging",
                              "mis",
                              "reporting",
                              "web_to_print",
                              "logistics",
                              "warehousing",
                              "machine_integration",
                              "preflight",
                              "workflow",
                              "billing",
                              "accounting",
                              "production_planning",
                              "production_scheduling",
                              "production_capacity_planning"
                            ]
                          }
                        }
                      }
                    },
                    "kind": {
                      "type": "string",
                      "example": "printer",
                      "description": "DEPRECATED please use kinds since organizations can have multiple kinds",
                      "enum": [
                        "printer",
                        "supplier",
                        "machine_vendor",
                        "brand_owner",
                        "designer",
                        "publisher",
                        "software_developer",
                        "other"
                      ]
                    },
                    "currency": {
                      "type": "string",
                      "example": "EUR",
                      "nullable": true,
                      "description": "Currency in [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format"
                    },
                    "brand_color": {
                      "type": "string",
                      "pattern": "^\\A#?(?:[0-9a-fA-F]{3}){1,2}\\z$",
                      "example": "#000000",
                      "nullable": true,
                      "description": "Brand color in hex color format"
                    },
                    "test_account_owner_id": {
                      "type": "string",
                      "nullable": true,
                      "example": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                      "description": "If this is a test account, the organization id of the owner of this test organization is returned. If this is not a test account this will be null. Test accounts are only available in the sandbox environment.\n"
                    }
                  }
                },
                "example": {
                  "id": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                  "name": "Bounty Soap Inc.",
                  "slug": "bounty_soap_inc",
                  "connected": true,
                  "kinds": [
                    "printer"
                  ],
                  "sections": {
                    "printer": [
                      "softcover_books",
                      "hardcover_books",
                      "business_cards",
                      "flyers"
                    ]
                  },
                  "country_code": "DE",
                  "brand_color": "#000000",
                  "currency": "EUR",
                  "test_account_owner_id": null,
                  "created_at": "2021-01-15T10:12:38.642Z",
                  "updated_at": "2021-01-15T10:12:47.672Z",
                  "logo_url": "http://www.example.com/rails/active_storage/blobs/redirect/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaWt5T0dVd05qVTBPUzFoTVRaa0xUUmpZbVl0T0dNeFlTMDNaRFJtWWpFNE5XSmxPV1FHT2daRlZBPT0iLCJleHAiOm51bGwsInB1ciI6ImJsb2JfaWQifX0=--309cb9ba4c6b10c76c3a82ec51ba083f0a67adf0/avatar.png",
                  "kind": "printer",
                  "subscription": {
                    "status": "active",
                    "plan": "advanced"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/organization/memberships": {
      "get": {
        "tags": [
          "Organisation"
        ],
        "description": "Lists memberships and members of the current organization.\n- needed bearer: `Organization`\n- needed scopes: `directory.organization_members.r` or `directory.organization_members.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "required": [
                          "id",
                          "created_at",
                          "updated_at",
                          "roles"
                        ],
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "roles": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "member"
                            ]
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "person"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "person": {
                            "allOf": [
                              {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "first_name": {
                                    "type": "string",
                                    "example": "Lisa"
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "Simpson"
                                  },
                                  "pronoun": {
                                    "type": "string",
                                    "example": "She/Her",
                                    "nullable": true,
                                    "enum": [
                                      "She/Her",
                                      "He/Him"
                                    ]
                                  },
                                  "locale": {
                                    "type": "string",
                                    "example": "de",
                                    "enum": [
                                      "en",
                                      "en-US",
                                      "de"
                                    ]
                                  },
                                  "unit_system": {
                                    "type": "string",
                                    "example": "metric",
                                    "enum": [
                                      "metric",
                                      "imperial"
                                    ]
                                  },
                                  "country_code": {
                                    "type": "string",
                                    "example": "DE",
                                    "nullable": true
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "id",
                                  "first_name",
                                  "name",
                                  "full_name",
                                  "email",
                                  "email_confirmed",
                                  "locale",
                                  "time_zone",
                                  "avatar_url",
                                  "connected",
                                  "created_at",
                                  "updated_at",
                                  "country_code",
                                  "currency",
                                  "unit_system",
                                  "two_factor_authentication_enabled",
                                  "subscription",
                                  "test_account_owner_id"
                                ],
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "29b276b7-c0fa-4514-a5b1-c0fb4ee40fa7"
                                  },
                                  "full_name": {
                                    "type": "string",
                                    "example": "Jane Doe"
                                  },
                                  "email": {
                                    "type": "string",
                                    "format": "email",
                                    "example": "jane.doe@gmail.com"
                                  },
                                  "email_confirmed": {
                                    "type": "boolean",
                                    "example": true,
                                    "description": "If the e-mail is not confirmed, please do not send any e-mails"
                                  },
                                  "currency": {
                                    "type": "string",
                                    "example": "EUR",
                                    "nullable": true,
                                    "description": "Currency in [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format"
                                  },
                                  "time_zone": {
                                    "type": "string",
                                    "example": "UTC",
                                    "description": "IANA Timezone: [List of time zones](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)"
                                  },
                                  "avatar_url": {
                                    "type": "string",
                                    "nullable": true,
                                    "example": "https://directory.heidelberg.cloud/rails/active_storage/blobs/avatar.jpg"
                                  },
                                  "connected": {
                                    "type": "boolean",
                                    "description": "True if person is connected to current app (display in aud)"
                                  },
                                  "subscription": {
                                    "anyOf": [
                                      {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                          "status",
                                          "plan"
                                        ],
                                        "properties": {
                                          "status": {
                                            "type": "string",
                                            "enum": [
                                              "provisioning",
                                              "active",
                                              "unpaid"
                                            ],
                                            "description": "If a subscription was unpaid, you might disable the features available for this subscription. You may want to give the subscriber a little more time. Therefore you can also use `last_paid_at`. A subscription might also change from unpaid to active again.\n"
                                          },
                                          "plan": {
                                            "type": "string",
                                            "description": "The name of a plan or `enterprise` if this subscription is linked to an enterprise plan"
                                          }
                                        }
                                      },
                                      {
                                        "nullable": true
                                      }
                                    ]
                                  },
                                  "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "updated_at": {
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "two_factor_authentication_enabled": {
                                    "type": "boolean"
                                  },
                                  "test_account_owner_id": {
                                    "type": "string",
                                    "nullable": true,
                                    "example": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                                    "description": "If this is a test account, the organization id of the owner of this test organization is returned. If this is not a test account this will be null. Test accounts are only available in the sandbox environment.\n"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    ]
                  }
                },
                "example": [
                  {
                    "id": "b8a1cd10-a110-551c-b6f1-d8aa549a6817",
                    "roles": [
                      "owner"
                    ],
                    "created_at": "2021-01-15T10:12:38.794Z",
                    "updated_at": "2021-01-15T10:12:38.794Z",
                    "person": {
                      "id": "383663bc-149a-5b76-b50d-ee039046c12e",
                      "first_name": "Frank",
                      "name": "Gallikanokus",
                      "full_name": "Frank Gallikanokus",
                      "email": "fgalli@example.com",
                      "pronoun": null,
                      "locale": "en",
                      "country_code": "US",
                      "currency": "USD",
                      "unit_system": "metric",
                      "connected": true,
                      "test_account_owner_id": null,
                      "created_at": "2021-01-15T10:12:38.586Z",
                      "updated_at": "2021-01-15T10:12:38.586Z",
                      "time_zone": "Europe/Berlin",
                      "email_confirmed": true,
                      "two_factor_authentication_enabled": false,
                      "avatar_url": null,
                      "subscription": null
                    }
                  },
                  {
                    "id": "b6a70f99-d077-5de1-8522-725ced0fdfbb",
                    "roles": [
                      "member"
                    ],
                    "created_at": "2021-01-15T10:12:38.794Z",
                    "updated_at": "2021-01-15T10:12:38.794Z",
                    "person": {
                      "id": "6afd2277-9e1f-5a88-8984-bacb5f798716",
                      "first_name": "Tony",
                      "name": "Stark",
                      "full_name": "Tony Stark",
                      "email": "tstark@example.com",
                      "pronoun": null,
                      "locale": "en",
                      "country_code": "US",
                      "currency": "USD",
                      "unit_system": "metric",
                      "connected": true,
                      "test_account_owner_id": null,
                      "created_at": "2021-01-15T10:12:38.586Z",
                      "updated_at": "2021-01-15T10:12:38.586Z",
                      "time_zone": "Europe/Berlin",
                      "email_confirmed": true,
                      "two_factor_authentication_enabled": false,
                      "avatar_url": null,
                      "subscription": null
                    }
                  },
                  {
                    "id": "00256c88-1689-522c-81c4-b8b5b03cc09b",
                    "roles": [
                      "member"
                    ],
                    "created_at": "2021-01-15T10:12:38.794Z",
                    "updated_at": "2021-01-15T10:12:38.794Z",
                    "person": {
                      "id": "1fbe1870-f99b-5fbb-acad-0220e4c05113",
                      "first_name": "Cathrin",
                      "name": "Janeway",
                      "full_name": "Cathrin Janeway",
                      "email": "cj@example.com",
                      "pronoun": null,
                      "locale": "en",
                      "country_code": "DE",
                      "currency": "EUR",
                      "unit_system": "metric",
                      "connected": false,
                      "test_account_owner_id": null,
                      "created_at": "2021-01-15T10:12:38.586Z",
                      "updated_at": "2021-01-15T10:12:38.586Z",
                      "time_zone": "Europe/Berlin",
                      "email_confirmed": true,
                      "two_factor_authentication_enabled": false,
                      "avatar_url": null,
                      "subscription": null
                    }
                  },
                  {
                    "id": "452e7392-5f25-5db6-81d7-aafaf52283c9",
                    "roles": [
                      "member"
                    ],
                    "created_at": "2021-01-15T10:12:38.794Z",
                    "updated_at": "2021-01-15T10:12:38.794Z",
                    "person": {
                      "id": "e9811292-febe-520d-8b9c-870aec5086fe",
                      "first_name": "Dan",
                      "name": "Danson",
                      "full_name": "Dan Danson",
                      "email": "dan.danson@example.com",
                      "pronoun": null,
                      "locale": "en",
                      "country_code": "US",
                      "currency": "USD",
                      "unit_system": "metric",
                      "connected": false,
                      "test_account_owner_id": null,
                      "created_at": "2021-01-15T10:12:38.586Z",
                      "updated_at": "2021-01-15T10:12:38.586Z",
                      "time_zone": "Europe/Berlin",
                      "email_confirmed": true,
                      "two_factor_authentication_enabled": false,
                      "avatar_url": null,
                      "subscription": null
                    }
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/organization/memberships/{membership_id}": {
      "get": {
        "tags": [
          "Organisation"
        ],
        "description": "Retrive a specific membership.\n- needed bearer: `Organization`\n- needed scopes: `directory.organization_members.r` or `directory.organization_members.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "membership_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "required": [
                        "id",
                        "created_at",
                        "updated_at",
                        "roles"
                      ],
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "roles": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "member"
                          ]
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "person"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "person": {
                          "allOf": [
                            {
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "first_name": {
                                  "type": "string",
                                  "example": "Lisa"
                                },
                                "name": {
                                  "type": "string",
                                  "example": "Simpson"
                                },
                                "pronoun": {
                                  "type": "string",
                                  "example": "She/Her",
                                  "nullable": true,
                                  "enum": [
                                    "She/Her",
                                    "He/Him"
                                  ]
                                },
                                "locale": {
                                  "type": "string",
                                  "example": "de",
                                  "enum": [
                                    "en",
                                    "en-US",
                                    "de"
                                  ]
                                },
                                "unit_system": {
                                  "type": "string",
                                  "example": "metric",
                                  "enum": [
                                    "metric",
                                    "imperial"
                                  ]
                                },
                                "country_code": {
                                  "type": "string",
                                  "example": "DE",
                                  "nullable": true
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "id",
                                "first_name",
                                "name",
                                "full_name",
                                "email",
                                "email_confirmed",
                                "locale",
                                "time_zone",
                                "avatar_url",
                                "connected",
                                "created_at",
                                "updated_at",
                                "country_code",
                                "currency",
                                "unit_system",
                                "two_factor_authentication_enabled",
                                "subscription",
                                "test_account_owner_id"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "example": "29b276b7-c0fa-4514-a5b1-c0fb4ee40fa7"
                                },
                                "full_name": {
                                  "type": "string",
                                  "example": "Jane Doe"
                                },
                                "email": {
                                  "type": "string",
                                  "format": "email",
                                  "example": "jane.doe@gmail.com"
                                },
                                "email_confirmed": {
                                  "type": "boolean",
                                  "example": true,
                                  "description": "If the e-mail is not confirmed, please do not send any e-mails"
                                },
                                "currency": {
                                  "type": "string",
                                  "example": "EUR",
                                  "nullable": true,
                                  "description": "Currency in [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format"
                                },
                                "time_zone": {
                                  "type": "string",
                                  "example": "UTC",
                                  "description": "IANA Timezone: [List of time zones](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)"
                                },
                                "avatar_url": {
                                  "type": "string",
                                  "nullable": true,
                                  "example": "https://directory.heidelberg.cloud/rails/active_storage/blobs/avatar.jpg"
                                },
                                "connected": {
                                  "type": "boolean",
                                  "description": "True if person is connected to current app (display in aud)"
                                },
                                "subscription": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "additionalProperties": false,
                                      "required": [
                                        "status",
                                        "plan"
                                      ],
                                      "properties": {
                                        "status": {
                                          "type": "string",
                                          "enum": [
                                            "provisioning",
                                            "active",
                                            "unpaid"
                                          ],
                                          "description": "If a subscription was unpaid, you might disable the features available for this subscription. You may want to give the subscriber a little more time. Therefore you can also use `last_paid_at`. A subscription might also change from unpaid to active again.\n"
                                        },
                                        "plan": {
                                          "type": "string",
                                          "description": "The name of a plan or `enterprise` if this subscription is linked to an enterprise plan"
                                        }
                                      }
                                    },
                                    {
                                      "nullable": true
                                    }
                                  ]
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "updated_at": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "two_factor_authentication_enabled": {
                                  "type": "boolean"
                                },
                                "test_account_owner_id": {
                                  "type": "string",
                                  "nullable": true,
                                  "example": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                                  "description": "If this is a test account, the organization id of the owner of this test organization is returned. If this is not a test account this will be null. Test accounts are only available in the sandbox environment.\n"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "id": "b6a70f99-d077-5de1-8522-725ced0fdfbb",
                  "roles": [
                    "member"
                  ],
                  "created_at": "2021-01-15T10:12:38.789Z",
                  "updated_at": "2021-01-15T10:12:38.789Z",
                  "person": {
                    "id": "6afd2277-9e1f-5a88-8984-bacb5f798716",
                    "first_name": "Tony",
                    "name": "Stark",
                    "full_name": "Tony Stark",
                    "email": "tstark@example.com",
                    "pronoun": null,
                    "locale": "en",
                    "country_code": "US",
                    "currency": "USD",
                    "unit_system": "metric",
                    "connected": true,
                    "test_account_owner_id": null,
                    "created_at": "2021-01-15T10:12:38.580Z",
                    "updated_at": "2021-01-15T10:12:38.580Z",
                    "time_zone": "Europe/Berlin",
                    "email_confirmed": true,
                    "two_factor_authentication_enabled": false,
                    "avatar_url": null,
                    "subscription": null
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      },
      "delete": {
        "tags": [
          "Organisation"
        ],
        "description": "Removes specific membership. Not allowed with owner memberships.\n- needed bearer: `Organization`\n- needed scopes: `directory.organization_members.w` or `directory.organization_members.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "membership_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      },
      "patch": {
        "tags": [
          "Organisation"
        ],
        "description": "Updates roles of a membership for an organization.\n- needed bearer: `Organization`\n- needed scopes: `directory.organization_members.w` or `directory.organization_members.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "membership_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "required": [
                        "id",
                        "created_at",
                        "updated_at",
                        "roles"
                      ],
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "roles": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "member"
                          ]
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "person"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "person": {
                          "allOf": [
                            {
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "first_name": {
                                  "type": "string",
                                  "example": "Lisa"
                                },
                                "name": {
                                  "type": "string",
                                  "example": "Simpson"
                                },
                                "pronoun": {
                                  "type": "string",
                                  "example": "She/Her",
                                  "nullable": true,
                                  "enum": [
                                    "She/Her",
                                    "He/Him"
                                  ]
                                },
                                "locale": {
                                  "type": "string",
                                  "example": "de",
                                  "enum": [
                                    "en",
                                    "en-US",
                                    "de"
                                  ]
                                },
                                "unit_system": {
                                  "type": "string",
                                  "example": "metric",
                                  "enum": [
                                    "metric",
                                    "imperial"
                                  ]
                                },
                                "country_code": {
                                  "type": "string",
                                  "example": "DE",
                                  "nullable": true
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "id",
                                "first_name",
                                "name",
                                "full_name",
                                "email",
                                "email_confirmed",
                                "locale",
                                "time_zone",
                                "avatar_url",
                                "connected",
                                "created_at",
                                "updated_at",
                                "country_code",
                                "currency",
                                "unit_system",
                                "two_factor_authentication_enabled",
                                "subscription",
                                "test_account_owner_id"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "example": "29b276b7-c0fa-4514-a5b1-c0fb4ee40fa7"
                                },
                                "full_name": {
                                  "type": "string",
                                  "example": "Jane Doe"
                                },
                                "email": {
                                  "type": "string",
                                  "format": "email",
                                  "example": "jane.doe@gmail.com"
                                },
                                "email_confirmed": {
                                  "type": "boolean",
                                  "example": true,
                                  "description": "If the e-mail is not confirmed, please do not send any e-mails"
                                },
                                "currency": {
                                  "type": "string",
                                  "example": "EUR",
                                  "nullable": true,
                                  "description": "Currency in [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format"
                                },
                                "time_zone": {
                                  "type": "string",
                                  "example": "UTC",
                                  "description": "IANA Timezone: [List of time zones](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)"
                                },
                                "avatar_url": {
                                  "type": "string",
                                  "nullable": true,
                                  "example": "https://directory.heidelberg.cloud/rails/active_storage/blobs/avatar.jpg"
                                },
                                "connected": {
                                  "type": "boolean",
                                  "description": "True if person is connected to current app (display in aud)"
                                },
                                "subscription": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "additionalProperties": false,
                                      "required": [
                                        "status",
                                        "plan"
                                      ],
                                      "properties": {
                                        "status": {
                                          "type": "string",
                                          "enum": [
                                            "provisioning",
                                            "active",
                                            "unpaid"
                                          ],
                                          "description": "If a subscription was unpaid, you might disable the features available for this subscription. You may want to give the subscriber a little more time. Therefore you can also use `last_paid_at`. A subscription might also change from unpaid to active again.\n"
                                        },
                                        "plan": {
                                          "type": "string",
                                          "description": "The name of a plan or `enterprise` if this subscription is linked to an enterprise plan"
                                        }
                                      }
                                    },
                                    {
                                      "nullable": true
                                    }
                                  ]
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "updated_at": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "two_factor_authentication_enabled": {
                                  "type": "boolean"
                                },
                                "test_account_owner_id": {
                                  "type": "string",
                                  "nullable": true,
                                  "example": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                                  "description": "If this is a test account, the organization id of the owner of this test organization is returned. If this is not a test account this will be null. Test accounts are only available in the sandbox environment.\n"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "id": "b6a70f99-d077-5de1-8522-725ced0fdfbb",
                  "roles": [
                    "production_planner",
                    "member"
                  ],
                  "created_at": "2021-01-15T10:12:38.800Z",
                  "updated_at": "2021-01-15T10:12:41.015Z",
                  "person": {
                    "id": "6afd2277-9e1f-5a88-8984-bacb5f798716",
                    "first_name": "Tony",
                    "name": "Stark",
                    "full_name": "Tony Stark",
                    "email": "tstark@example.com",
                    "pronoun": null,
                    "locale": "en",
                    "country_code": "US",
                    "currency": "USD",
                    "unit_system": "metric",
                    "connected": false,
                    "test_account_owner_id": null,
                    "created_at": "2021-01-15T10:12:38.591Z",
                    "updated_at": "2021-01-15T10:12:38.591Z",
                    "time_zone": "Europe/Berlin",
                    "email_confirmed": true,
                    "two_factor_authentication_enabled": false,
                    "avatar_url": null,
                    "subscription": null
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (Validation error)",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/organization/business_relationships": {
      "get": {
        "tags": [
          "Organisation"
        ],
        "description": "List business relationships where the current organization is the owner of.\n- needed bearer: `Organization`\n- needed scopes: `directory.business_relationships.r` or `directory.business_relationships.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "filters[target_id]",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "id",
                      "target_id",
                      "target_name",
                      "kind",
                      "reference",
                      "created_at",
                      "updated_at"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "2fc5f391-2bac-487e-9cb2-1b6ba8fb5bfc"
                      },
                      "target_id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "4468ceb6-5fdb-4627-852a-875630d06359"
                      },
                      "target_name": {
                        "type": "string"
                      },
                      "reference": {
                        "type": "string",
                        "description": "Custom reference",
                        "nullable": true
                      },
                      "kind": {
                        "type": "string",
                        "description": "The kind of relationship you have to the target: Owner is a [kind] of target",
                        "enum": [
                          "supplier",
                          "manufacturer",
                          "software_vendor",
                          "printer"
                        ]
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "id": "ed38fed5-25fa-5623-88c0-d00fe9ab6d71",
                    "target_id": "f5345a2a-8786-5b46-a1e2-516658fde390",
                    "kind": "printer",
                    "reference": null,
                    "created_at": "2020-03-18T08:38:07.694Z",
                    "updated_at": "2020-03-18T08:38:07.694Z",
                    "target_name": "Galactic Print Inc."
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      },
      "post": {
        "tags": [
          "Organisation"
        ],
        "description": "Creates a new business relationship for the current organization\n- needed bearer: `Organization`\n- needed scopes: `directory.business_relationships.w` or `directory.business_relationships.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "business_relationship"
                ],
                "properties": {
                  "business_relationship": {
                    "allOf": [
                      {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "target_id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "4468ceb6-5fdb-4627-852a-875630d06359",
                            "description": "The organization you want to build a relationship to"
                          },
                          "kind": {
                            "type": "string",
                            "description": "The kind of relationship you have to the target: Owner is a [kind] of target",
                            "enum": [
                              "supplier",
                              "manufacturer",
                              "software_vendor",
                              "printer"
                            ]
                          },
                          "reference": {
                            "type": "string",
                            "description": "Optional reference of the target"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "target_id",
                          "kind"
                        ],
                        "properties": {}
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "id",
                    "target_id",
                    "target_name",
                    "kind",
                    "reference",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "2fc5f391-2bac-487e-9cb2-1b6ba8fb5bfc"
                    },
                    "target_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "4468ceb6-5fdb-4627-852a-875630d06359"
                    },
                    "target_name": {
                      "type": "string"
                    },
                    "reference": {
                      "type": "string",
                      "description": "Custom reference",
                      "nullable": true
                    },
                    "kind": {
                      "type": "string",
                      "description": "The kind of relationship you have to the target: Owner is a [kind] of target",
                      "enum": [
                        "supplier",
                        "manufacturer",
                        "software_vendor",
                        "printer"
                      ]
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "example": {
                  "id": "4f86f0b2-d4fb-47de-a7a8-2093a5d22f5e",
                  "target_id": "7351228a-4274-5e17-9a9f-89b4399b859a",
                  "kind": "printer",
                  "reference": null,
                  "created_at": "2020-03-18T08:38:12.122Z",
                  "updated_at": "2020-03-18T08:38:12.122Z",
                  "target_name": "Octo"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (Validation error)",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/organization/business_relationships/{business_relationship_id}": {
      "delete": {
        "tags": [
          "Organisation"
        ],
        "description": "Deletes business relationship.\n- needed bearer: `Organization`\n- needed scopes: `directory.business_relationships.w` or `directory.business_relationships.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "business_relationship_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      },
      "get": {
        "tags": [
          "Organisation"
        ],
        "description": "Shows single business relationship.\n- needed bearer: `Organization`\n- needed scopes: `directory.business_relationships.r` or `directory.business_relationships.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "business_relationship_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "id",
                    "target_id",
                    "target_name",
                    "kind",
                    "reference",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "2fc5f391-2bac-487e-9cb2-1b6ba8fb5bfc"
                    },
                    "target_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "4468ceb6-5fdb-4627-852a-875630d06359"
                    },
                    "target_name": {
                      "type": "string"
                    },
                    "reference": {
                      "type": "string",
                      "description": "Custom reference",
                      "nullable": true
                    },
                    "kind": {
                      "type": "string",
                      "description": "The kind of relationship you have to the target: Owner is a [kind] of target",
                      "enum": [
                        "supplier",
                        "manufacturer",
                        "software_vendor",
                        "printer"
                      ]
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "example": {
                  "id": "ed38fed5-25fa-5623-88c0-d00fe9ab6d71",
                  "target_id": "f5345a2a-8786-5b46-a1e2-516658fde390",
                  "kind": "printer",
                  "reference": null,
                  "created_at": "2020-04-15T11:12:16.559Z",
                  "updated_at": "2020-04-15T11:12:16.559Z",
                  "target_name": "Galactic Print Inc."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/machines": {
      "get": {
        "tags": [
          "Machines"
        ],
        "description": "Lists machines of the current organization.\n- needed bearer: `Person` or `Organization`\n- needed scopes: `directory.machines.r` or `directory.machines.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "filters[site_id]",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "id",
                      "name",
                      "kind",
                      "serial_number",
                      "manufacturer",
                      "site_id",
                      "owner_id",
                      "created_at",
                      "updated_at"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                      },
                      "name": {
                        "type": "string",
                        "example": "Speedmaster 2020"
                      },
                      "manufacturer": {
                        "type": "string",
                        "description": "Long name of manufacturer or custom name",
                        "example": "Heidelberger Druckmaschinen AG"
                      },
                      "manufacturer_id": {
                        "nullable": true,
                        "type": "string",
                        "example": "heidelberg",
                        "enum": [
                          "JMD",
                          "MK",
                          "baumann",
                          "burg",
                          "canon",
                          "duplo",
                          "fuji",
                          "heidelberg",
                          "hohner",
                          "horizon",
                          "hp",
                          "hugobeck",
                          "hunkeler",
                          "hörauf",
                          "kalfass",
                          "kba",
                          "kodak",
                          "komori",
                          "kugeler-womako",
                          "magnum",
                          "man",
                          "mbo",
                          "meccanotechnica",
                          "miyakoshi",
                          "msi",
                          "müller-martini",
                          "perfecta",
                          "petrato",
                          "polar",
                          "ricoh",
                          "ryobi",
                          "screen",
                          "solema",
                          "stahl",
                          "technow",
                          "wohlenberg",
                          "xeikon",
                          "xerox"
                        ]
                      },
                      "serial_number": {
                        "type": "string",
                        "description": "Needs to be unique by manufacturer",
                        "example": "HDB1337",
                        "nullable": true
                      },
                      "kind": {
                        "type": "string",
                        "enum": [
                          "sheetfed_digital_press",
                          "web_digital_press",
                          "digital_press",
                          "sheetfed_offset_press",
                          "web_offset_press",
                          "offset_press",
                          "cutter",
                          "shape_cutter",
                          "folder",
                          "box_maker",
                          "gatherer",
                          "stitcher",
                          "adhesive_binder",
                          "trimmer",
                          "thread_sewer",
                          "case_maker",
                          "box_packer",
                          "ctp",
                          "platesetter"
                        ]
                      },
                      "site_id": {
                        "type": "string",
                        "nullable": true,
                        "format": "uuid",
                        "description": "Optional Site ID"
                      },
                      "owner_id": {
                        "type": "string",
                        "nullable": true,
                        "format": "uuid"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "id": "627d925b-1d98-53f2-a68a-7db16004551f",
                    "name": "Nobody ownes me",
                    "serial_number": "HDBXYZ",
                    "manufacturer_id": null,
                    "kind": "digital_press",
                    "site_id": "8fff4ac9-9daa-59e8-903e-1dd99beb6879",
                    "created_at": "2020-05-07T14:06:38.292Z",
                    "updated_at": "2020-05-07T14:06:38.292Z",
                    "manufacturer": "Heidelberger Druckmaschinen AG",
                    "owner_id": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      },
      "post": {
        "tags": [
          "Machines"
        ],
        "description": "Creates a machine, needs ownership assigned.\n- needed bearer: `Person` or `Organization`\n- needed scopes: `directory.machines.w` or `directory.machines.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "machine"
                ],
                "properties": {
                  "machine": {
                    "allOf": [
                      {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "Prinect"
                          },
                          "kind": {
                            "type": "string",
                            "enum": [
                              "sheetfed_digital_press",
                              "web_digital_press",
                              "digital_press",
                              "sheetfed_offset_press",
                              "web_offset_press",
                              "offset_press",
                              "cutter",
                              "shape_cutter",
                              "folder",
                              "box_maker",
                              "gatherer",
                              "stitcher",
                              "adhesive_binder",
                              "trimmer",
                              "thread_sewer",
                              "case_maker",
                              "box_packer",
                              "ctp",
                              "platesetter"
                            ]
                          },
                          "manufacturer": {
                            "type": "string",
                            "example": "heidelberg",
                            "description": "Please use one from our normalized list:\nJMD, MK, baumann, burg, canon, duplo, fuji, heidelberg, hohner, horizon, hp, hugobeck, hunkeler, hörauf, kalfass, kba, kodak, komori, kugeler-womako, magnum, man, mbo, meccanotechnica, miyakoshi, msi, müller-martini, perfecta, petrato, polar, ricoh, ryobi, screen, solema, stahl, technow, wohlenberg, xeikon, xerox\nWe also allow custom manufacturers but we kindly recommend you to avoid this. If your manufacturer is missing here, please contact us directly, so that we can offer this manufacturer to others.\n"
                          },
                          "serial_number": {
                            "description": "Unique by manufacturer",
                            "type": "string",
                            "example": "HDB1337"
                          },
                          "site_id": {
                            "description": "DEPRECATED: Please use site_id in machine_ownerships instead",
                            "type": "string",
                            "format": "uuid",
                            "example": "d6308910-f5ae-58c0-aba7-d099947845c6",
                            "deprecated": true
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "name",
                          "kind"
                        ],
                        "properties": {}
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "id",
                    "name",
                    "kind",
                    "serial_number",
                    "manufacturer",
                    "site_id",
                    "owner_id",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                    },
                    "name": {
                      "type": "string",
                      "example": "Speedmaster 2020"
                    },
                    "manufacturer": {
                      "type": "string",
                      "description": "Long name of manufacturer or custom name",
                      "example": "Heidelberger Druckmaschinen AG"
                    },
                    "manufacturer_id": {
                      "nullable": true,
                      "type": "string",
                      "example": "heidelberg",
                      "enum": [
                        "JMD",
                        "MK",
                        "baumann",
                        "burg",
                        "canon",
                        "duplo",
                        "fuji",
                        "heidelberg",
                        "hohner",
                        "horizon",
                        "hp",
                        "hugobeck",
                        "hunkeler",
                        "hörauf",
                        "kalfass",
                        "kba",
                        "kodak",
                        "komori",
                        "kugeler-womako",
                        "magnum",
                        "man",
                        "mbo",
                        "meccanotechnica",
                        "miyakoshi",
                        "msi",
                        "müller-martini",
                        "perfecta",
                        "petrato",
                        "polar",
                        "ricoh",
                        "ryobi",
                        "screen",
                        "solema",
                        "stahl",
                        "technow",
                        "wohlenberg",
                        "xeikon",
                        "xerox"
                      ]
                    },
                    "serial_number": {
                      "type": "string",
                      "description": "Needs to be unique by manufacturer",
                      "example": "HDB1337",
                      "nullable": true
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "sheetfed_digital_press",
                        "web_digital_press",
                        "digital_press",
                        "sheetfed_offset_press",
                        "web_offset_press",
                        "offset_press",
                        "cutter",
                        "shape_cutter",
                        "folder",
                        "box_maker",
                        "gatherer",
                        "stitcher",
                        "adhesive_binder",
                        "trimmer",
                        "thread_sewer",
                        "case_maker",
                        "box_packer",
                        "ctp",
                        "platesetter"
                      ]
                    },
                    "site_id": {
                      "type": "string",
                      "nullable": true,
                      "format": "uuid",
                      "description": "Optional Site ID"
                    },
                    "owner_id": {
                      "type": "string",
                      "nullable": true,
                      "format": "uuid"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "example": {
                  "id": "80daf8f1-b544-4a9a-b92f-49d2c2a04f6f",
                  "name": "Speedmaster 2020",
                  "serial_number": "HDB1337",
                  "manufacturer_id": null,
                  "kind": "offset_press",
                  "site_id": null,
                  "created_at": "2020-05-07T14:06:52.427Z",
                  "updated_at": "2020-05-07T14:06:52.427Z",
                  "manufacturer": "Heidelberger Druckmaschinen AG",
                  "owner_id": null
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (Validation error)",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/machines/{machine_id}": {
      "get": {
        "tags": [
          "Machines"
        ],
        "description": "Retrive a specific machine.\n- needed bearer: `Person` or `Organization`\n- needed scopes: `directory.machines.r` or `directory.machines.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "machine_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "id",
                    "name",
                    "kind",
                    "serial_number",
                    "manufacturer",
                    "site_id",
                    "owner_id",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                    },
                    "name": {
                      "type": "string",
                      "example": "Speedmaster 2020"
                    },
                    "manufacturer": {
                      "type": "string",
                      "description": "Long name of manufacturer or custom name",
                      "example": "Heidelberger Druckmaschinen AG"
                    },
                    "manufacturer_id": {
                      "nullable": true,
                      "type": "string",
                      "example": "heidelberg",
                      "enum": [
                        "JMD",
                        "MK",
                        "baumann",
                        "burg",
                        "canon",
                        "duplo",
                        "fuji",
                        "heidelberg",
                        "hohner",
                        "horizon",
                        "hp",
                        "hugobeck",
                        "hunkeler",
                        "hörauf",
                        "kalfass",
                        "kba",
                        "kodak",
                        "komori",
                        "kugeler-womako",
                        "magnum",
                        "man",
                        "mbo",
                        "meccanotechnica",
                        "miyakoshi",
                        "msi",
                        "müller-martini",
                        "perfecta",
                        "petrato",
                        "polar",
                        "ricoh",
                        "ryobi",
                        "screen",
                        "solema",
                        "stahl",
                        "technow",
                        "wohlenberg",
                        "xeikon",
                        "xerox"
                      ]
                    },
                    "serial_number": {
                      "type": "string",
                      "description": "Needs to be unique by manufacturer",
                      "example": "HDB1337",
                      "nullable": true
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "sheetfed_digital_press",
                        "web_digital_press",
                        "digital_press",
                        "sheetfed_offset_press",
                        "web_offset_press",
                        "offset_press",
                        "cutter",
                        "shape_cutter",
                        "folder",
                        "box_maker",
                        "gatherer",
                        "stitcher",
                        "adhesive_binder",
                        "trimmer",
                        "thread_sewer",
                        "case_maker",
                        "box_packer",
                        "ctp",
                        "platesetter"
                      ]
                    },
                    "site_id": {
                      "type": "string",
                      "nullable": true,
                      "format": "uuid",
                      "description": "Optional Site ID"
                    },
                    "owner_id": {
                      "type": "string",
                      "nullable": true,
                      "format": "uuid"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "example": {
                  "id": "760c3948-18a0-5380-905b-9dc5ee8f75ea",
                  "name": "Speedmaster CX 102",
                  "serial_number": "HDB4911391234949123",
                  "manufacturer_id": "heidelberg",
                  "kind": "offset_press",
                  "site_id": "d6308910-f5ae-58c0-aba7-d099947845c6",
                  "created_at": "2020-05-07T14:06:38.302Z",
                  "updated_at": "2020-05-07T14:06:38.302Z",
                  "manufacturer": "Heidelberger Druckmaschinen AG",
                  "owner_id": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/machines/{machine_id}/machine_ownership": {
      "post": {
        "tags": [
          "Machines"
        ],
        "description": "Creates ownership for asset.\n- needed bearer: `Person` or `Organization`\n- needed scopes: `directory.machines.w` or `directory.machines.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "machine_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "site_id",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "id",
                        "organization_id",
                        "terminated_at",
                        "asset_id",
                        "asset_type",
                        "created_at",
                        "updated_at"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "62abcc92-e17e-4db0-b78e-13369251474b"
                        },
                        "organization_id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                        },
                        "terminated_at": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "site_id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "3cbc2a23-de0e-4b0d-84b2-0c01d884957a",
                          "nullable": true
                        },
                        "asset_id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                        },
                        "asset_type": {
                          "type": "string",
                          "enum": [
                            "Machine",
                            "Software",
                            "Specialist"
                          ]
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "machine_id"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "machine_id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "id": "b1b912db-fdac-4193-ad63-5a2db09be397",
                  "organization_id": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                  "terminated_at": null,
                  "asset_id": "627d925b-1d98-53f2-a68a-7db16004551f",
                  "asset_type": "Machine",
                  "site_id": null,
                  "created_at": "2020-05-07T14:37:22.032Z",
                  "updated_at": "2020-05-07T14:37:22.032Z",
                  "machine_id": "627d925b-1d98-53f2-a68a-7db16004551f"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (Validation error)",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      },
      "patch": {
        "tags": [
          "Machines"
        ],
        "description": "Updates ownership for asset.\n- needed bearer: `Person` or `Organization`\n- needed scopes: `directory.machines.w` or `directory.machines.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "machine_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "machine_ownership"
                ],
                "properties": {
                  "machine_ownership": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "site_id"
                    ],
                    "properties": {
                      "site_id": {
                        "nullable": true,
                        "type": "string",
                        "format": "uuid",
                        "example": "3cbc2a23-de0e-4b0d-84b2-0c01d884957a"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "id",
                        "organization_id",
                        "terminated_at",
                        "asset_id",
                        "asset_type",
                        "created_at",
                        "updated_at"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "62abcc92-e17e-4db0-b78e-13369251474b"
                        },
                        "organization_id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                        },
                        "terminated_at": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "site_id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "3cbc2a23-de0e-4b0d-84b2-0c01d884957a",
                          "nullable": true
                        },
                        "asset_id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                        },
                        "asset_type": {
                          "type": "string",
                          "enum": [
                            "Machine",
                            "Software",
                            "Specialist"
                          ]
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "machine_id"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "machine_id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "id": "486bd5ca-3958-5ab9-8f12-8f245db4d7a8",
                  "organization_id": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                  "terminated_at": null,
                  "asset_id": "760c3948-18a0-5380-905b-9dc5ee8f75ea",
                  "asset_type": "Machine",
                  "site_id": "8fff4ac9-9daa-59e8-903e-1dd99beb6879",
                  "created_at": "2020-05-07T14:34:10.422Z",
                  "updated_at": "2020-05-07T14:34:12.051Z",
                  "machine_id": "760c3948-18a0-5380-905b-9dc5ee8f75ea"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (Validation error)",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      },
      "get": {
        "tags": [
          "Machines"
        ],
        "description": "Show ownership.\n- needed bearer: `Person` or `Organization`\n- needed scopes: `directory.machines.r` or `directory.machines.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "machine_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "id",
                        "organization_id",
                        "terminated_at",
                        "asset_id",
                        "asset_type",
                        "created_at",
                        "updated_at"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "62abcc92-e17e-4db0-b78e-13369251474b"
                        },
                        "organization_id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                        },
                        "terminated_at": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "site_id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "3cbc2a23-de0e-4b0d-84b2-0c01d884957a",
                          "nullable": true
                        },
                        "asset_id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                        },
                        "asset_type": {
                          "type": "string",
                          "enum": [
                            "Machine",
                            "Software",
                            "Specialist"
                          ]
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "machine_id"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "machine_id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "id": "486bd5ca-3958-5ab9-8f12-8f245db4d7a8",
                  "organization_id": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                  "terminated_at": null,
                  "asset_id": "760c3948-18a0-5380-905b-9dc5ee8f75ea",
                  "asset_type": "Machine",
                  "site_id": "d6308910-f5ae-58c0-aba7-d099947845c6",
                  "created_at": "2020-03-23T13:05:53.825Z",
                  "updated_at": "2020-03-23T13:05:53.825Z",
                  "machine_id": "760c3948-18a0-5380-905b-9dc5ee8f75ea"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      },
      "delete": {
        "tags": [
          "Machines"
        ],
        "description": "Removes ownership for asset. Needs special scope: `directory.remove_machines`.\n- needed bearer: `Person` or `Organization`\n- needed scopes: `directory.machines.w` or `directory.machines.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "machine_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/software": {
      "get": {
        "tags": [
          "Software"
        ],
        "description": "Lists software assets of the current organization.\n- needed bearer: `Person` or `Organization`\n- needed scopes: `directory.software.r` or `directory.software.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "filters[site_id]",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "id",
                      "name",
                      "kind",
                      "vendor",
                      "site_id",
                      "owner_id",
                      "created_at",
                      "updated_at"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                      },
                      "name": {
                        "type": "string",
                        "example": "Prinect"
                      },
                      "vendor": {
                        "type": "string",
                        "description": "Long name of vendor or custom name",
                        "example": "Heidelberger Druckmaschinen AG"
                      },
                      "vendor_id": {
                        "nullable": true,
                        "type": "string",
                        "example": "heidelberg",
                        "enum": [
                          "heidelberg",
                          "zaikio"
                        ]
                      },
                      "kind": {
                        "type": "string",
                        "enum": [
                          "erp",
                          "mis"
                        ]
                      },
                      "site_id": {
                        "type": "string",
                        "nullable": true,
                        "format": "uuid",
                        "description": "Optional Site ID"
                      },
                      "owner_id": {
                        "type": "string",
                        "nullable": true,
                        "format": "uuid"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "id": "4fee0257-d7c7-5d11-b9a4-16f95c72cdd3",
                    "name": "Prinect",
                    "vendor_id": "heidelberg",
                    "kind": "erp",
                    "site_id": "d6308910-f5ae-58c0-aba7-d099947845c6",
                    "created_at": "2020-05-07T14:06:38.301Z",
                    "updated_at": "2020-05-07T14:06:38.301Z",
                    "vendor": "Heidelberger Druckmaschinen AG",
                    "owner_id": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      },
      "post": {
        "tags": [
          "Software"
        ],
        "description": "Creates a software asset, needs ownership assigned.\n- needed bearer: `Person` or `Organization`\n- needed scopes: `directory.software.w` or `directory.software.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "software"
                ],
                "properties": {
                  "software": {
                    "allOf": [
                      {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "Prinect"
                          },
                          "kind": {
                            "type": "string",
                            "enum": [
                              "erp",
                              "mis"
                            ]
                          },
                          "vendor": {
                            "type": "string",
                            "example": "heidelberg",
                            "description": "Please use one from our normalized list:\nheidelberg, zaikio\nWe also allow custom vendors but we kindly recommend you to avoid this. If your vendor is missing here, please contact us directly, so that we can offer this vendor to others.\n"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "name",
                          "kind"
                        ],
                        "properties": {}
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "id",
                    "name",
                    "kind",
                    "vendor",
                    "site_id",
                    "owner_id",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                    },
                    "name": {
                      "type": "string",
                      "example": "Prinect"
                    },
                    "vendor": {
                      "type": "string",
                      "description": "Long name of vendor or custom name",
                      "example": "Heidelberger Druckmaschinen AG"
                    },
                    "vendor_id": {
                      "nullable": true,
                      "type": "string",
                      "example": "heidelberg",
                      "enum": [
                        "heidelberg",
                        "zaikio"
                      ]
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "erp",
                        "mis"
                      ]
                    },
                    "site_id": {
                      "type": "string",
                      "nullable": true,
                      "format": "uuid",
                      "description": "Optional Site ID"
                    },
                    "owner_id": {
                      "type": "string",
                      "nullable": true,
                      "format": "uuid"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "example": {
                  "id": "ac7b9fe9-e774-42d0-a021-76a54e5a64d0",
                  "name": "Prinect",
                  "vendor_id": "heidelberg",
                  "kind": "erp",
                  "site_id": null,
                  "created_at": "2020-04-03T09:45:32.645Z",
                  "updated_at": "2020-04-03T09:45:32.645Z",
                  "vendor": "Heidelberger Druckmaschinen AG",
                  "owner_id": null
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (Validation error)",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/software/{software_id}": {
      "get": {
        "tags": [
          "Software"
        ],
        "description": "Retrive a specific software asset.\n- needed bearer: `Person` or `Organization`\n- needed scopes: `directory.software.r` or `directory.software.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "software_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "id",
                    "name",
                    "kind",
                    "vendor",
                    "site_id",
                    "owner_id",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                    },
                    "name": {
                      "type": "string",
                      "example": "Prinect"
                    },
                    "vendor": {
                      "type": "string",
                      "description": "Long name of vendor or custom name",
                      "example": "Heidelberger Druckmaschinen AG"
                    },
                    "vendor_id": {
                      "nullable": true,
                      "type": "string",
                      "example": "heidelberg",
                      "enum": [
                        "heidelberg",
                        "zaikio"
                      ]
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "erp",
                        "mis"
                      ]
                    },
                    "site_id": {
                      "type": "string",
                      "nullable": true,
                      "format": "uuid",
                      "description": "Optional Site ID"
                    },
                    "owner_id": {
                      "type": "string",
                      "nullable": true,
                      "format": "uuid"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "example": {
                  "id": "4fee0257-d7c7-5d11-b9a4-16f95c72cdd3",
                  "name": "Prinect",
                  "vendor_id": "heidelberg",
                  "kind": "erp",
                  "site_id": "d6308910-f5ae-58c0-aba7-d099947845c6",
                  "created_at": "2020-05-07T14:06:38.301Z",
                  "updated_at": "2020-05-07T14:06:38.301Z",
                  "vendor": "Heidelberger Druckmaschinen AG",
                  "owner_id": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/software/{software_id}/software_ownership": {
      "post": {
        "tags": [
          "Software"
        ],
        "description": "Creates ownership for asset.\n- needed bearer: `Person` or `Organization`\n- needed scopes: `directory.software.w` or `directory.software.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "software_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "site_id",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "organization_id",
                    "terminated_at",
                    "asset_id",
                    "asset_type",
                    "created_at",
                    "updated_at"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "62abcc92-e17e-4db0-b78e-13369251474b"
                    },
                    "organization_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                    },
                    "terminated_at": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "site_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "3cbc2a23-de0e-4b0d-84b2-0c01d884957a",
                      "nullable": true
                    },
                    "asset_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                    },
                    "asset_type": {
                      "type": "string",
                      "enum": [
                        "Machine",
                        "Software",
                        "Specialist"
                      ]
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "example": {
                  "id": "049bcb90-a5d6-40ef-b473-ede0e46cb5ae",
                  "organization_id": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                  "terminated_at": null,
                  "asset_id": "4fee0257-d7c7-5d11-b9a4-16f95c72cdd3",
                  "asset_type": "Software",
                  "site_id": null,
                  "created_at": "2020-05-07T14:37:21.656Z",
                  "updated_at": "2020-05-07T14:37:21.656Z"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (Validation error)",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      },
      "patch": {
        "tags": [
          "Software"
        ],
        "description": "Updates ownership for asset.\n- needed bearer: `Person` or `Organization`\n- needed scopes: `directory.software.w` or `directory.software.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "software_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "software_ownership"
                ],
                "properties": {
                  "software_ownership": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "site_id"
                    ],
                    "properties": {
                      "site_id": {
                        "nullable": true,
                        "type": "string",
                        "format": "uuid",
                        "example": "3cbc2a23-de0e-4b0d-84b2-0c01d884957a"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "organization_id",
                    "terminated_at",
                    "asset_id",
                    "asset_type",
                    "created_at",
                    "updated_at"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "62abcc92-e17e-4db0-b78e-13369251474b"
                    },
                    "organization_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                    },
                    "terminated_at": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "site_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "3cbc2a23-de0e-4b0d-84b2-0c01d884957a",
                      "nullable": true
                    },
                    "asset_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                    },
                    "asset_type": {
                      "type": "string",
                      "enum": [
                        "Machine",
                        "Software",
                        "Specialist"
                      ]
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "example": {
                  "id": "79f9798f-6284-5534-b870-4a915e53150e",
                  "organization_id": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                  "terminated_at": null,
                  "asset_id": "4fee0257-d7c7-5d11-b9a4-16f95c72cdd3",
                  "asset_type": "Software",
                  "site_id": "8fff4ac9-9daa-59e8-903e-1dd99beb6879",
                  "created_at": "2020-05-07T14:33:57.193Z",
                  "updated_at": "2020-05-07T14:33:57.903Z"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (Validation error)",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      },
      "get": {
        "tags": [
          "Software"
        ],
        "description": "Show ownership.\n- needed bearer: `Person` or `Organization`\n- needed scopes: `directory.software.r` or `directory.software.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "software_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "organization_id",
                    "terminated_at",
                    "asset_id",
                    "asset_type",
                    "created_at",
                    "updated_at"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "62abcc92-e17e-4db0-b78e-13369251474b"
                    },
                    "organization_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                    },
                    "terminated_at": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "site_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "3cbc2a23-de0e-4b0d-84b2-0c01d884957a",
                      "nullable": true
                    },
                    "asset_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                    },
                    "asset_type": {
                      "type": "string",
                      "enum": [
                        "Machine",
                        "Software",
                        "Specialist"
                      ]
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "example": {
                  "id": "79f9798f-6284-5534-b870-4a915e53150e",
                  "organization_id": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                  "terminated_at": null,
                  "asset_id": "4fee0257-d7c7-5d11-b9a4-16f95c72cdd3",
                  "asset_type": "Software",
                  "site_id": "d6308910-f5ae-58c0-aba7-d099947845c6",
                  "created_at": "2020-05-07T14:34:10.411Z",
                  "updated_at": "2020-05-07T14:34:10.411Z"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      },
      "delete": {
        "tags": [
          "Software"
        ],
        "description": "Removes ownership for asset. Needs special scope: `directory.remove_software`.\n- needed bearer: `Person` or `Organization`\n- needed scopes: `directory.software.w` or `directory.software.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "software_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/sites": {
      "get": {
        "tags": [
          "Sites"
        ],
        "description": "Some organizations might have multiple sites because they have several locations.\n                       This returns a list of the current organization's sites.\n- needed bearer: `Person` or `Organization`\n- needed scopes: `directory.sites.r` or `directory.sites.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "required": [
                          "name",
                          "headquarter",
                          "address",
                          "created_at",
                          "updated_at"
                        ],
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "d6308910-f5ae-58c0-aba7-d099947845c6"
                          },
                          "name": {
                            "type": "string"
                          },
                          "headquarter": {
                            "type": "boolean",
                            "description": "If this is the headquarter site (every organization has exactly one)"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "address": {
                            "type": "object",
                            "nullable": true,
                            "required": [
                              "id",
                              "addressee",
                              "street",
                              "number",
                              "zip_code",
                              "town",
                              "country_code",
                              "state",
                              "addition",
                              "location",
                              "created_at",
                              "updated_at"
                            ],
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "95fd969d-684f-49f6-b17d-5f4e786c11a9"
                              },
                              "addressee": {
                                "type": "string",
                                "example": "Zaikio GmbH"
                              },
                              "street": {
                                "type": "string",
                                "example": "Emmerich-Josef-Straße"
                              },
                              "number": {
                                "type": "string",
                                "example": "1A",
                                "nullable": true
                              },
                              "zip_code": {
                                "type": "string",
                                "example": "551166"
                              },
                              "town": {
                                "type": "string",
                                "example": "Mainz"
                              },
                              "country_code": {
                                "type": "string",
                                "example": "DE",
                                "nullable": true
                              },
                              "state": {
                                "type": "string",
                                "example": "Rheinland-Pfalz"
                              },
                              "addition": {
                                "type": "string",
                                "nullable": true
                              },
                              "location": {
                                "type": "array",
                                "minItems": 2,
                                "maxItems": 2,
                                "description": "Latitude and Longitude",
                                "items": {
                                  "type": "number"
                                }
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "organization"
                        ],
                        "properties": {
                          "organization": {
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "name",
                              "created_at",
                              "updated_at",
                              "slug",
                              "logo_url",
                              "connected",
                              "kinds",
                              "sections",
                              "country_code",
                              "currency",
                              "subscription",
                              "brand_color",
                              "test_account_owner_id"
                            ],
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                              },
                              "slug": {
                                "type": "string",
                                "example": "bounty-soap-inc"
                              },
                              "name": {
                                "type": "string",
                                "example": "Bounty Soap Inc."
                              },
                              "logo_url": {
                                "type": "string",
                                "format": "uri",
                                "nullable": true
                              },
                              "connected": {
                                "type": "boolean",
                                "description": "True if organization is connected to current app (display in aud)"
                              },
                              "subscription": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                      "status",
                                      "plan"
                                    ],
                                    "properties": {
                                      "status": {
                                        "type": "string",
                                        "enum": [
                                          "provisioning",
                                          "active",
                                          "unpaid"
                                        ],
                                        "description": "If a subscription was unpaid, you might disable the features available for this subscription. You may want to give the subscriber a little more time. Therefore you can also use `last_paid_at`. A subscription might also change from unpaid to active again.\n"
                                      },
                                      "plan": {
                                        "type": "string",
                                        "description": "The name of a plan or `enterprise` if this subscription is linked to an enterprise plan"
                                      }
                                    }
                                  },
                                  {
                                    "nullable": true
                                  }
                                ]
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "country_code": {
                                "type": "string",
                                "example": "DE",
                                "nullable": true
                              },
                              "kinds": {
                                "type": "array",
                                "minItems": 1,
                                "items": {
                                  "type": "string",
                                  "example": "printer",
                                  "enum": [
                                    "printer",
                                    "supplier",
                                    "machine_vendor",
                                    "brand_owner",
                                    "designer",
                                    "publisher",
                                    "software_developer",
                                    "other"
                                  ]
                                }
                              },
                              "sections": {
                                "type": "object",
                                "additionalProperties": false,
                                "description": "Only the sections that are also part of kinds are taken into account.",
                                "properties": {
                                  "printer": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "enum": [
                                        "softcover_books",
                                        "hardcover_books",
                                        "labels",
                                        "packagings",
                                        "business_cards",
                                        "flyers",
                                        "leaflets",
                                        "brochures",
                                        "large_formats"
                                      ]
                                    }
                                  },
                                  "supplier": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "enum": [
                                        "sheet_substrates",
                                        "web_substrates",
                                        "ink",
                                        "plates",
                                        "foils",
                                        "other"
                                      ]
                                    }
                                  },
                                  "machine_vendor": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "enum": [
                                        "sheet_fed_offset_presses",
                                        "web_fed_offset_presses",
                                        "sheet_fed_digital_presses",
                                        "web_fed_digital_presses",
                                        "cutters",
                                        "binders",
                                        "saddle_stitchers"
                                      ]
                                    }
                                  },
                                  "designer": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "enum": [
                                        "self_employed",
                                        "studio",
                                        "inhouse",
                                        "other"
                                      ]
                                    }
                                  },
                                  "publisher": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "enum": [
                                        "softcover_books",
                                        "hardcover_books",
                                        "brochures"
                                      ]
                                    }
                                  },
                                  "software_developer": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "enum": [
                                        "imposing",
                                        "ganging",
                                        "mis",
                                        "reporting",
                                        "web_to_print",
                                        "logistics",
                                        "warehousing",
                                        "machine_integration",
                                        "preflight",
                                        "workflow",
                                        "billing",
                                        "accounting",
                                        "production_planning",
                                        "production_scheduling",
                                        "production_capacity_planning"
                                      ]
                                    }
                                  }
                                }
                              },
                              "kind": {
                                "type": "string",
                                "example": "printer",
                                "description": "DEPRECATED please use kinds since organizations can have multiple kinds",
                                "enum": [
                                  "printer",
                                  "supplier",
                                  "machine_vendor",
                                  "brand_owner",
                                  "designer",
                                  "publisher",
                                  "software_developer",
                                  "other"
                                ]
                              },
                              "currency": {
                                "type": "string",
                                "example": "EUR",
                                "nullable": true,
                                "description": "Currency in [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format"
                              },
                              "brand_color": {
                                "type": "string",
                                "pattern": "^\\A#?(?:[0-9a-fA-F]{3}){1,2}\\z$",
                                "example": "#000000",
                                "nullable": true,
                                "description": "Brand color in hex color format"
                              },
                              "test_account_owner_id": {
                                "type": "string",
                                "nullable": true,
                                "example": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                                "description": "If this is a test account, the organization id of the owner of this test organization is returned. If this is not a test account this will be null. Test accounts are only available in the sandbox environment.\n"
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "example": [
                  {
                    "id": "d6308910-f5ae-58c0-aba7-d099947845c6",
                    "name": "Black Mesa Research Facility",
                    "headquarter": true,
                    "created_at": "2021-01-15T10:12:38.751Z",
                    "updated_at": "2021-01-15T10:12:38.751Z",
                    "organization": {
                      "id": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                      "name": "Bounty Soap Inc.",
                      "slug": "bounty_soap_inc",
                      "connected": true,
                      "kinds": [
                        "printer"
                      ],
                      "sections": {
                        "printer": [
                          "softcover_books",
                          "hardcover_books",
                          "business_cards",
                          "flyers"
                        ]
                      },
                      "country_code": "DE",
                      "brand_color": "#000000",
                      "currency": "EUR",
                      "test_account_owner_id": null,
                      "created_at": "2021-01-15T10:12:38.642Z",
                      "updated_at": "2021-01-15T10:12:38.642Z",
                      "logo_url": null,
                      "kind": "printer",
                      "subscription": {
                        "status": "active",
                        "plan": "advanced"
                      }
                    },
                    "address": {
                      "id": "7f06fbb7-ac7a-5557-8415-f70de75bbf5c",
                      "addressee": "Bounty Soap Inc.",
                      "street": "California Street Northeast",
                      "number": "115",
                      "zip_code": "87108",
                      "town": "Albuquerque",
                      "country_code": "US",
                      "state": "New Mexico",
                      "addition": null,
                      "location": [
                        35.077502,
                        0
                      ],
                      "created_at": "2021-01-15T10:12:38.566Z",
                      "updated_at": "2021-01-15T10:12:38.566Z"
                    }
                  },
                  {
                    "id": "8fff4ac9-9daa-59e8-903e-1dd99beb6879",
                    "name": "Black Mesa Headquaters",
                    "headquarter": false,
                    "created_at": "2021-01-15T10:12:38.751Z",
                    "updated_at": "2021-01-15T10:12:38.751Z",
                    "organization": {
                      "id": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                      "name": "Bounty Soap Inc.",
                      "slug": "bounty_soap_inc",
                      "connected": true,
                      "kinds": [
                        "printer"
                      ],
                      "sections": {
                        "printer": [
                          "softcover_books",
                          "hardcover_books",
                          "business_cards",
                          "flyers"
                        ]
                      },
                      "country_code": "DE",
                      "brand_color": "#000000",
                      "currency": "EUR",
                      "test_account_owner_id": null,
                      "created_at": "2021-01-15T10:12:38.642Z",
                      "updated_at": "2021-01-15T10:12:38.642Z",
                      "logo_url": null,
                      "kind": "printer",
                      "subscription": {
                        "status": "active",
                        "plan": "advanced"
                      }
                    },
                    "address": {
                      "id": "34e73d39-c338-5055-8956-9458a2e926d9",
                      "addressee": "Bounty Soap Inc.",
                      "street": "Gutenbergring",
                      "number": "17",
                      "zip_code": "69168",
                      "town": "Wiesloch",
                      "country_code": "DE",
                      "state": "Baden-Württemberg",
                      "addition": null,
                      "location": [
                        49.2900757,
                        0
                      ],
                      "created_at": "2021-01-15T10:12:38.566Z",
                      "updated_at": "2021-01-15T10:12:38.566Z"
                    }
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      },
      "post": {
        "tags": [
          "Sites"
        ],
        "description": "Creates a site for the current organization.\n- needed bearer: `Person` or `Organization`\n- needed scopes: `directory.sites.w` or `directory.sites.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "site"
                ],
                "properties": {
                  "site": {
                    "allOf": [
                      {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "Berlin North"
                          },
                          "address_attributes": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                              "addressee",
                              "text"
                            ],
                            "properties": {
                              "addressee": {
                                "type": "string",
                                "example": "Crispy Mountain GmbH"
                              },
                              "text": {
                                "type": "string",
                                "description": "Address that will be parsed by Google",
                                "example": "Emmerich-Josef-Straße 1A, 55116 Mainz"
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {}
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "required": [
                        "name",
                        "headquarter",
                        "address",
                        "created_at",
                        "updated_at"
                      ],
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "d6308910-f5ae-58c0-aba7-d099947845c6"
                        },
                        "name": {
                          "type": "string"
                        },
                        "headquarter": {
                          "type": "boolean",
                          "description": "If this is the headquarter site (every organization has exactly one)"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "address": {
                          "type": "object",
                          "nullable": true,
                          "required": [
                            "id",
                            "addressee",
                            "street",
                            "number",
                            "zip_code",
                            "town",
                            "country_code",
                            "state",
                            "addition",
                            "location",
                            "created_at",
                            "updated_at"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "example": "95fd969d-684f-49f6-b17d-5f4e786c11a9"
                            },
                            "addressee": {
                              "type": "string",
                              "example": "Zaikio GmbH"
                            },
                            "street": {
                              "type": "string",
                              "example": "Emmerich-Josef-Straße"
                            },
                            "number": {
                              "type": "string",
                              "example": "1A",
                              "nullable": true
                            },
                            "zip_code": {
                              "type": "string",
                              "example": "551166"
                            },
                            "town": {
                              "type": "string",
                              "example": "Mainz"
                            },
                            "country_code": {
                              "type": "string",
                              "example": "DE",
                              "nullable": true
                            },
                            "state": {
                              "type": "string",
                              "example": "Rheinland-Pfalz"
                            },
                            "addition": {
                              "type": "string",
                              "nullable": true
                            },
                            "location": {
                              "type": "array",
                              "minItems": 2,
                              "maxItems": 2,
                              "description": "Latitude and Longitude",
                              "items": {
                                "type": "number"
                              }
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "updated_at": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "organization"
                      ],
                      "properties": {
                        "organization": {
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "name",
                            "created_at",
                            "updated_at",
                            "slug",
                            "logo_url",
                            "connected",
                            "kinds",
                            "sections",
                            "country_code",
                            "currency",
                            "subscription",
                            "brand_color",
                            "test_account_owner_id"
                          ],
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "example": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                            },
                            "slug": {
                              "type": "string",
                              "example": "bounty-soap-inc"
                            },
                            "name": {
                              "type": "string",
                              "example": "Bounty Soap Inc."
                            },
                            "logo_url": {
                              "type": "string",
                              "format": "uri",
                              "nullable": true
                            },
                            "connected": {
                              "type": "boolean",
                              "description": "True if organization is connected to current app (display in aud)"
                            },
                            "subscription": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "required": [
                                    "status",
                                    "plan"
                                  ],
                                  "properties": {
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "provisioning",
                                        "active",
                                        "unpaid"
                                      ],
                                      "description": "If a subscription was unpaid, you might disable the features available for this subscription. You may want to give the subscriber a little more time. Therefore you can also use `last_paid_at`. A subscription might also change from unpaid to active again.\n"
                                    },
                                    "plan": {
                                      "type": "string",
                                      "description": "The name of a plan or `enterprise` if this subscription is linked to an enterprise plan"
                                    }
                                  }
                                },
                                {
                                  "nullable": true
                                }
                              ]
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "updated_at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "country_code": {
                              "type": "string",
                              "example": "DE",
                              "nullable": true
                            },
                            "kinds": {
                              "type": "array",
                              "minItems": 1,
                              "items": {
                                "type": "string",
                                "example": "printer",
                                "enum": [
                                  "printer",
                                  "supplier",
                                  "machine_vendor",
                                  "brand_owner",
                                  "designer",
                                  "publisher",
                                  "software_developer",
                                  "other"
                                ]
                              }
                            },
                            "sections": {
                              "type": "object",
                              "additionalProperties": false,
                              "description": "Only the sections that are also part of kinds are taken into account.",
                              "properties": {
                                "printer": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "softcover_books",
                                      "hardcover_books",
                                      "labels",
                                      "packagings",
                                      "business_cards",
                                      "flyers",
                                      "leaflets",
                                      "brochures",
                                      "large_formats"
                                    ]
                                  }
                                },
                                "supplier": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "sheet_substrates",
                                      "web_substrates",
                                      "ink",
                                      "plates",
                                      "foils",
                                      "other"
                                    ]
                                  }
                                },
                                "machine_vendor": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "sheet_fed_offset_presses",
                                      "web_fed_offset_presses",
                                      "sheet_fed_digital_presses",
                                      "web_fed_digital_presses",
                                      "cutters",
                                      "binders",
                                      "saddle_stitchers"
                                    ]
                                  }
                                },
                                "designer": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "self_employed",
                                      "studio",
                                      "inhouse",
                                      "other"
                                    ]
                                  }
                                },
                                "publisher": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "softcover_books",
                                      "hardcover_books",
                                      "brochures"
                                    ]
                                  }
                                },
                                "software_developer": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "imposing",
                                      "ganging",
                                      "mis",
                                      "reporting",
                                      "web_to_print",
                                      "logistics",
                                      "warehousing",
                                      "machine_integration",
                                      "preflight",
                                      "workflow",
                                      "billing",
                                      "accounting",
                                      "production_planning",
                                      "production_scheduling",
                                      "production_capacity_planning"
                                    ]
                                  }
                                }
                              }
                            },
                            "kind": {
                              "type": "string",
                              "example": "printer",
                              "description": "DEPRECATED please use kinds since organizations can have multiple kinds",
                              "enum": [
                                "printer",
                                "supplier",
                                "machine_vendor",
                                "brand_owner",
                                "designer",
                                "publisher",
                                "software_developer",
                                "other"
                              ]
                            },
                            "currency": {
                              "type": "string",
                              "example": "EUR",
                              "nullable": true,
                              "description": "Currency in [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format"
                            },
                            "brand_color": {
                              "type": "string",
                              "pattern": "^\\A#?(?:[0-9a-fA-F]{3}){1,2}\\z$",
                              "example": "#000000",
                              "nullable": true,
                              "description": "Brand color in hex color format"
                            },
                            "test_account_owner_id": {
                              "type": "string",
                              "nullable": true,
                              "example": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                              "description": "If this is a test account, the organization id of the owner of this test organization is returned. If this is not a test account this will be null. Test accounts are only available in the sandbox environment.\n"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "id": "45d5859a-d542-4bb0-a2fc-3d3fd366a3be",
                  "name": "Berlin North",
                  "headquarter": false,
                  "created_at": "2021-01-15T11:14:49.034+01:00",
                  "updated_at": "2021-01-15T11:14:49.034+01:00",
                  "organization": {
                    "id": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                    "name": "Bounty Soap Inc.",
                    "slug": "bounty_soap_inc",
                    "connected": true,
                    "kinds": [
                      "printer"
                    ],
                    "sections": {
                      "printer": [
                        "softcover_books",
                        "hardcover_books",
                        "business_cards",
                        "flyers"
                      ]
                    },
                    "country_code": "DE",
                    "brand_color": "#000000",
                    "currency": "EUR",
                    "test_account_owner_id": null,
                    "created_at": "2021-01-15T11:12:38.642+01:00",
                    "updated_at": "2021-01-15T11:12:38.642+01:00",
                    "logo_url": null,
                    "kind": "printer",
                    "subscription": {
                      "status": "active",
                      "plan": "advanced"
                    }
                  },
                  "address": {
                    "id": "f9d74909-1d15-46ed-b30b-8415b3b7b7e6",
                    "addressee": "Crispy Mountain GmbH",
                    "street": "Pasewalker Straße",
                    "number": "25",
                    "zip_code": "13127",
                    "town": "Berlin",
                    "country_code": "DE",
                    "state": "Berlin",
                    "addition": null,
                    "location": [
                      52.5882204,
                      13.4294955
                    ],
                    "created_at": "2021-01-15T11:14:49.037+01:00",
                    "updated_at": "2021-01-15T11:14:49.037+01:00"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (Validation error)",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/sites/{site_id}": {
      "get": {
        "tags": [
          "Sites"
        ],
        "description": "Retrive a specific site.\n- needed bearer: `Person` or `Organization`\n- needed scopes: `directory.sites.r` or `directory.sites.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "site_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "required": [
                        "name",
                        "headquarter",
                        "address",
                        "created_at",
                        "updated_at"
                      ],
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "d6308910-f5ae-58c0-aba7-d099947845c6"
                        },
                        "name": {
                          "type": "string"
                        },
                        "headquarter": {
                          "type": "boolean",
                          "description": "If this is the headquarter site (every organization has exactly one)"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "address": {
                          "type": "object",
                          "nullable": true,
                          "required": [
                            "id",
                            "addressee",
                            "street",
                            "number",
                            "zip_code",
                            "town",
                            "country_code",
                            "state",
                            "addition",
                            "location",
                            "created_at",
                            "updated_at"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "example": "95fd969d-684f-49f6-b17d-5f4e786c11a9"
                            },
                            "addressee": {
                              "type": "string",
                              "example": "Zaikio GmbH"
                            },
                            "street": {
                              "type": "string",
                              "example": "Emmerich-Josef-Straße"
                            },
                            "number": {
                              "type": "string",
                              "example": "1A",
                              "nullable": true
                            },
                            "zip_code": {
                              "type": "string",
                              "example": "551166"
                            },
                            "town": {
                              "type": "string",
                              "example": "Mainz"
                            },
                            "country_code": {
                              "type": "string",
                              "example": "DE",
                              "nullable": true
                            },
                            "state": {
                              "type": "string",
                              "example": "Rheinland-Pfalz"
                            },
                            "addition": {
                              "type": "string",
                              "nullable": true
                            },
                            "location": {
                              "type": "array",
                              "minItems": 2,
                              "maxItems": 2,
                              "description": "Latitude and Longitude",
                              "items": {
                                "type": "number"
                              }
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "updated_at": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "organization"
                      ],
                      "properties": {
                        "organization": {
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "name",
                            "created_at",
                            "updated_at",
                            "slug",
                            "logo_url",
                            "connected",
                            "kinds",
                            "sections",
                            "country_code",
                            "currency",
                            "subscription",
                            "brand_color",
                            "test_account_owner_id"
                          ],
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "example": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                            },
                            "slug": {
                              "type": "string",
                              "example": "bounty-soap-inc"
                            },
                            "name": {
                              "type": "string",
                              "example": "Bounty Soap Inc."
                            },
                            "logo_url": {
                              "type": "string",
                              "format": "uri",
                              "nullable": true
                            },
                            "connected": {
                              "type": "boolean",
                              "description": "True if organization is connected to current app (display in aud)"
                            },
                            "subscription": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "required": [
                                    "status",
                                    "plan"
                                  ],
                                  "properties": {
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "provisioning",
                                        "active",
                                        "unpaid"
                                      ],
                                      "description": "If a subscription was unpaid, you might disable the features available for this subscription. You may want to give the subscriber a little more time. Therefore you can also use `last_paid_at`. A subscription might also change from unpaid to active again.\n"
                                    },
                                    "plan": {
                                      "type": "string",
                                      "description": "The name of a plan or `enterprise` if this subscription is linked to an enterprise plan"
                                    }
                                  }
                                },
                                {
                                  "nullable": true
                                }
                              ]
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "updated_at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "country_code": {
                              "type": "string",
                              "example": "DE",
                              "nullable": true
                            },
                            "kinds": {
                              "type": "array",
                              "minItems": 1,
                              "items": {
                                "type": "string",
                                "example": "printer",
                                "enum": [
                                  "printer",
                                  "supplier",
                                  "machine_vendor",
                                  "brand_owner",
                                  "designer",
                                  "publisher",
                                  "software_developer",
                                  "other"
                                ]
                              }
                            },
                            "sections": {
                              "type": "object",
                              "additionalProperties": false,
                              "description": "Only the sections that are also part of kinds are taken into account.",
                              "properties": {
                                "printer": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "softcover_books",
                                      "hardcover_books",
                                      "labels",
                                      "packagings",
                                      "business_cards",
                                      "flyers",
                                      "leaflets",
                                      "brochures",
                                      "large_formats"
                                    ]
                                  }
                                },
                                "supplier": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "sheet_substrates",
                                      "web_substrates",
                                      "ink",
                                      "plates",
                                      "foils",
                                      "other"
                                    ]
                                  }
                                },
                                "machine_vendor": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "sheet_fed_offset_presses",
                                      "web_fed_offset_presses",
                                      "sheet_fed_digital_presses",
                                      "web_fed_digital_presses",
                                      "cutters",
                                      "binders",
                                      "saddle_stitchers"
                                    ]
                                  }
                                },
                                "designer": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "self_employed",
                                      "studio",
                                      "inhouse",
                                      "other"
                                    ]
                                  }
                                },
                                "publisher": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "softcover_books",
                                      "hardcover_books",
                                      "brochures"
                                    ]
                                  }
                                },
                                "software_developer": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "imposing",
                                      "ganging",
                                      "mis",
                                      "reporting",
                                      "web_to_print",
                                      "logistics",
                                      "warehousing",
                                      "machine_integration",
                                      "preflight",
                                      "workflow",
                                      "billing",
                                      "accounting",
                                      "production_planning",
                                      "production_scheduling",
                                      "production_capacity_planning"
                                    ]
                                  }
                                }
                              }
                            },
                            "kind": {
                              "type": "string",
                              "example": "printer",
                              "description": "DEPRECATED please use kinds since organizations can have multiple kinds",
                              "enum": [
                                "printer",
                                "supplier",
                                "machine_vendor",
                                "brand_owner",
                                "designer",
                                "publisher",
                                "software_developer",
                                "other"
                              ]
                            },
                            "currency": {
                              "type": "string",
                              "example": "EUR",
                              "nullable": true,
                              "description": "Currency in [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format"
                            },
                            "brand_color": {
                              "type": "string",
                              "pattern": "^\\A#?(?:[0-9a-fA-F]{3}){1,2}\\z$",
                              "example": "#000000",
                              "nullable": true,
                              "description": "Brand color in hex color format"
                            },
                            "test_account_owner_id": {
                              "type": "string",
                              "nullable": true,
                              "example": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                              "description": "If this is a test account, the organization id of the owner of this test organization is returned. If this is not a test account this will be null. Test accounts are only available in the sandbox environment.\n"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "id": "d6308910-f5ae-58c0-aba7-d099947845c6",
                  "name": "Black Mesa Research Facility",
                  "headquarter": true,
                  "created_at": "2021-01-15T10:12:38.757Z",
                  "updated_at": "2021-01-15T10:12:38.757Z",
                  "organization": {
                    "id": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                    "name": "Bounty Soap Inc.",
                    "slug": "bounty_soap_inc",
                    "connected": true,
                    "kinds": [
                      "printer"
                    ],
                    "sections": {
                      "printer": [
                        "softcover_books",
                        "hardcover_books",
                        "business_cards",
                        "flyers"
                      ]
                    },
                    "country_code": "DE",
                    "brand_color": "#000000",
                    "currency": "EUR",
                    "test_account_owner_id": null,
                    "created_at": "2021-01-15T10:12:38.648Z",
                    "updated_at": "2021-01-15T10:12:38.648Z",
                    "logo_url": null,
                    "kind": "printer",
                    "subscription": {
                      "status": "active",
                      "plan": "advanced"
                    }
                  },
                  "address": {
                    "id": "7f06fbb7-ac7a-5557-8415-f70de75bbf5c",
                    "addressee": "Bounty Soap Inc.",
                    "street": "California Street Northeast",
                    "number": "115",
                    "zip_code": "87108",
                    "town": "Albuquerque",
                    "country_code": "US",
                    "state": "New Mexico",
                    "addition": null,
                    "location": [
                      35.077502,
                      0
                    ],
                    "created_at": "2021-01-15T10:12:38.571Z",
                    "updated_at": "2021-01-15T10:12:38.571Z"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      },
      "patch": {
        "tags": [
          "Sites"
        ],
        "description": "Update a specific site.\n- needed bearer: `Person` or `Organization`\n- needed scopes: `directory.sites.w` or `directory.sites.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "site_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "site"
                ],
                "properties": {
                  "site": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "Berlin North"
                      },
                      "address_attributes": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "addressee",
                          "text"
                        ],
                        "properties": {
                          "addressee": {
                            "type": "string",
                            "example": "Crispy Mountain GmbH"
                          },
                          "text": {
                            "type": "string",
                            "description": "Address that will be parsed by Google",
                            "example": "Emmerich-Josef-Straße 1A, 55116 Mainz"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "required": [
                        "name",
                        "headquarter",
                        "address",
                        "created_at",
                        "updated_at"
                      ],
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "d6308910-f5ae-58c0-aba7-d099947845c6"
                        },
                        "name": {
                          "type": "string"
                        },
                        "headquarter": {
                          "type": "boolean",
                          "description": "If this is the headquarter site (every organization has exactly one)"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "address": {
                          "type": "object",
                          "nullable": true,
                          "required": [
                            "id",
                            "addressee",
                            "street",
                            "number",
                            "zip_code",
                            "town",
                            "country_code",
                            "state",
                            "addition",
                            "location",
                            "created_at",
                            "updated_at"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "example": "95fd969d-684f-49f6-b17d-5f4e786c11a9"
                            },
                            "addressee": {
                              "type": "string",
                              "example": "Zaikio GmbH"
                            },
                            "street": {
                              "type": "string",
                              "example": "Emmerich-Josef-Straße"
                            },
                            "number": {
                              "type": "string",
                              "example": "1A",
                              "nullable": true
                            },
                            "zip_code": {
                              "type": "string",
                              "example": "551166"
                            },
                            "town": {
                              "type": "string",
                              "example": "Mainz"
                            },
                            "country_code": {
                              "type": "string",
                              "example": "DE",
                              "nullable": true
                            },
                            "state": {
                              "type": "string",
                              "example": "Rheinland-Pfalz"
                            },
                            "addition": {
                              "type": "string",
                              "nullable": true
                            },
                            "location": {
                              "type": "array",
                              "minItems": 2,
                              "maxItems": 2,
                              "description": "Latitude and Longitude",
                              "items": {
                                "type": "number"
                              }
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "updated_at": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "organization"
                      ],
                      "properties": {
                        "organization": {
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "name",
                            "created_at",
                            "updated_at",
                            "slug",
                            "logo_url",
                            "connected",
                            "kinds",
                            "sections",
                            "country_code",
                            "currency",
                            "subscription",
                            "brand_color",
                            "test_account_owner_id"
                          ],
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "example": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                            },
                            "slug": {
                              "type": "string",
                              "example": "bounty-soap-inc"
                            },
                            "name": {
                              "type": "string",
                              "example": "Bounty Soap Inc."
                            },
                            "logo_url": {
                              "type": "string",
                              "format": "uri",
                              "nullable": true
                            },
                            "connected": {
                              "type": "boolean",
                              "description": "True if organization is connected to current app (display in aud)"
                            },
                            "subscription": {
                              "anyOf": [
                                {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "required": [
                                    "status",
                                    "plan"
                                  ],
                                  "properties": {
                                    "status": {
                                      "type": "string",
                                      "enum": [
                                        "provisioning",
                                        "active",
                                        "unpaid"
                                      ],
                                      "description": "If a subscription was unpaid, you might disable the features available for this subscription. You may want to give the subscriber a little more time. Therefore you can also use `last_paid_at`. A subscription might also change from unpaid to active again.\n"
                                    },
                                    "plan": {
                                      "type": "string",
                                      "description": "The name of a plan or `enterprise` if this subscription is linked to an enterprise plan"
                                    }
                                  }
                                },
                                {
                                  "nullable": true
                                }
                              ]
                            },
                            "created_at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "updated_at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "country_code": {
                              "type": "string",
                              "example": "DE",
                              "nullable": true
                            },
                            "kinds": {
                              "type": "array",
                              "minItems": 1,
                              "items": {
                                "type": "string",
                                "example": "printer",
                                "enum": [
                                  "printer",
                                  "supplier",
                                  "machine_vendor",
                                  "brand_owner",
                                  "designer",
                                  "publisher",
                                  "software_developer",
                                  "other"
                                ]
                              }
                            },
                            "sections": {
                              "type": "object",
                              "additionalProperties": false,
                              "description": "Only the sections that are also part of kinds are taken into account.",
                              "properties": {
                                "printer": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "softcover_books",
                                      "hardcover_books",
                                      "labels",
                                      "packagings",
                                      "business_cards",
                                      "flyers",
                                      "leaflets",
                                      "brochures",
                                      "large_formats"
                                    ]
                                  }
                                },
                                "supplier": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "sheet_substrates",
                                      "web_substrates",
                                      "ink",
                                      "plates",
                                      "foils",
                                      "other"
                                    ]
                                  }
                                },
                                "machine_vendor": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "sheet_fed_offset_presses",
                                      "web_fed_offset_presses",
                                      "sheet_fed_digital_presses",
                                      "web_fed_digital_presses",
                                      "cutters",
                                      "binders",
                                      "saddle_stitchers"
                                    ]
                                  }
                                },
                                "designer": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "self_employed",
                                      "studio",
                                      "inhouse",
                                      "other"
                                    ]
                                  }
                                },
                                "publisher": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "softcover_books",
                                      "hardcover_books",
                                      "brochures"
                                    ]
                                  }
                                },
                                "software_developer": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "imposing",
                                      "ganging",
                                      "mis",
                                      "reporting",
                                      "web_to_print",
                                      "logistics",
                                      "warehousing",
                                      "machine_integration",
                                      "preflight",
                                      "workflow",
                                      "billing",
                                      "accounting",
                                      "production_planning",
                                      "production_scheduling",
                                      "production_capacity_planning"
                                    ]
                                  }
                                }
                              }
                            },
                            "kind": {
                              "type": "string",
                              "example": "printer",
                              "description": "DEPRECATED please use kinds since organizations can have multiple kinds",
                              "enum": [
                                "printer",
                                "supplier",
                                "machine_vendor",
                                "brand_owner",
                                "designer",
                                "publisher",
                                "software_developer",
                                "other"
                              ]
                            },
                            "currency": {
                              "type": "string",
                              "example": "EUR",
                              "nullable": true,
                              "description": "Currency in [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format"
                            },
                            "brand_color": {
                              "type": "string",
                              "pattern": "^\\A#?(?:[0-9a-fA-F]{3}){1,2}\\z$",
                              "example": "#000000",
                              "nullable": true,
                              "description": "Brand color in hex color format"
                            },
                            "test_account_owner_id": {
                              "type": "string",
                              "nullable": true,
                              "example": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                              "description": "If this is a test account, the organization id of the owner of this test organization is returned. If this is not a test account this will be null. Test accounts are only available in the sandbox environment.\n"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "id": "d6308910-f5ae-58c0-aba7-d099947845c6",
                  "name": "Berlin North",
                  "headquarter": true,
                  "created_at": "2021-01-15T10:12:38.745Z",
                  "updated_at": "2021-01-15T10:14:48.194Z",
                  "organization": {
                    "id": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                    "name": "Bounty Soap Inc.",
                    "slug": "bounty_soap_inc",
                    "connected": true,
                    "kinds": [
                      "printer"
                    ],
                    "sections": {
                      "printer": [
                        "softcover_books",
                        "hardcover_books",
                        "business_cards",
                        "flyers"
                      ]
                    },
                    "country_code": "DE",
                    "brand_color": "#000000",
                    "currency": "EUR",
                    "test_account_owner_id": null,
                    "created_at": "2021-01-15T10:12:38.636Z",
                    "updated_at": "2021-01-15T10:12:38.636Z",
                    "logo_url": null,
                    "kind": "printer",
                    "subscription": {
                      "status": "active",
                      "plan": "advanced"
                    }
                  },
                  "address": {
                    "id": "e2020cf0-827c-41d1-a955-3181d8481c29",
                    "addressee": "Crispy Mountain GmbH",
                    "street": "Pasewalker Straße",
                    "number": "25",
                    "zip_code": "13127",
                    "town": "Berlin",
                    "country_code": "DE",
                    "state": "Berlin",
                    "addition": null,
                    "location": [
                      52.5882204,
                      13.4294955
                    ],
                    "created_at": "2021-01-15T10:14:48.196Z",
                    "updated_at": "2021-01-15T10:14:48.196Z"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (Validation error)",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/jwt_public_keys": {
      "get": {
        "tags": [
          "JWT Public Keys"
        ],
        "summary": "Get json public key",
        "description": "Retrieve a json public key that can be turned into an rsa key again",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "keys": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "kty",
                          "n",
                          "e",
                          "kid"
                        ],
                        "properties": {
                          "kty": {
                            "type": "string",
                            "enum": [
                              "RSA"
                            ]
                          },
                          "n": {
                            "type": "string"
                          },
                          "e": {
                            "type": "string"
                          },
                          "kid": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "keys": [
                    {
                      "kty": "RSA",
                      "n": "2dr3GkBMFNEeSL9ap9oWU-YmOoU5g26lVoLZIqGtmFDvsTu6tURrUdzjxmEb16d_C0t_oMMvNrXrC4pwD4xWYDT2kV8ARkkOra9LBJfOPkoWBcXCvba_GOfMAxKQ4ptJUmIMQC7GLns1NQh6oxoAs6tfqEeVHT-bLsqU0hr7uFZ9f38UwT27kR0pnl23FZHFnpUF1ly-akLVhAD9GVNYJaV8KW5nQjHO78wmPn_GbCS57Wed-8JjkR79-wt0U8mu-pDaMEOu79uqBY94idshT_UWQV4FaCrvzwNQ16dY6BqeogjIqRUx7qvtkd_hxRlCJkCFcgD22bpr35Es-bTa7w",
                      "e": "AQAB",
                      "kid": "a6a531c0fae5e5a5003d26e4a1202b0686d1d54c4faa5bd9de0c37dcbdcddc7e"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "description": "Retrieve list of available roles with their translation",
        "security": [],
        "parameters": [
          {
            "in": "query",
            "name": "lang",
            "description": "Optional language parameter",
            "required": false,
            "schema": {
              "type": "string",
              "example": "de",
              "enum": [
                "en",
                "de"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "owner"
                      },
                      "name": {
                        "description": "Translated Name",
                        "type": "string",
                        "example": "Owner"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "id": "owner",
                    "name": "Eigentümer"
                  },
                  {
                    "id": "admin",
                    "name": "Administrator"
                  },
                  {
                    "id": "member",
                    "name": "Mitglied"
                  },
                  {
                    "id": "purchaser",
                    "name": "Einkauf"
                  },
                  {
                    "id": "production_planner",
                    "name": "Produktionsplaner"
                  },
                  {
                    "id": "customer_service_representative",
                    "name": "Kundenberater"
                  },
                  {
                    "id": "sales_representative",
                    "name": "Vertrieb"
                  },
                  {
                    "id": "designer",
                    "name": "Designer"
                  },
                  {
                    "id": "developer",
                    "name": "Entwickler"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/connections": {
      "get": {
        "tags": [
          "Subscriptions & Connections"
        ],
        "description": "Retrieve list of connections for the authorized app (requires HTTP Basic Auth for app or bearer auth with vendor organisation).\n- needed bearer: `Organization`\n- needed scopes: `directory.connections_and_subscriptions.r` or `directory.connections_and_subscriptions.rw`",
        "security": [
          {
            "basicAuth": [],
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "filters[connectable_id]",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Organization-d2e78ba7-5cfc-4359-9d8a-43ce0fa3a795"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The page of the current collection that shall be returned",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "description": "The maximum number of items included in the response, ie., the page size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "maximum": 100,
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "app_name",
                      "connectable_type",
                      "connectable_id",
                      "created_at",
                      "updated_at",
                      "granted_oauth_scopes"
                    ],
                    "properties": {
                      "app_name": {
                        "type": "string"
                      },
                      "connectable_type": {
                        "type": "string",
                        "enum": [
                          "Person",
                          "Organization"
                        ]
                      },
                      "connectable_id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "granted_oauth_scopes": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "directory.person.r"
                        }
                      }
                    }
                  }
                },
                "example": [
                  {
                    "connectable_type": "Person",
                    "connectable_id": "383663bc-149a-5b76-b50d-ee039046c12e",
                    "created_at": "2021-01-21T08:24:26.487Z",
                    "updated_at": "2021-01-21T08:24:26.487Z",
                    "app_name": "keyline",
                    "granted_oauth_scopes": [
                      "directory.person.r",
                      "warehouse.items.r"
                    ]
                  },
                  {
                    "connectable_type": "Person",
                    "connectable_id": "6afd2277-9e1f-5a88-8984-bacb5f798716",
                    "created_at": "2021-01-21T08:24:26.487Z",
                    "updated_at": "2021-01-21T08:24:26.487Z",
                    "app_name": "keyline",
                    "granted_oauth_scopes": [
                      "directory.person.r"
                    ]
                  },
                  {
                    "connectable_type": "Organization",
                    "connectable_id": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                    "created_at": "2021-01-21T08:24:26.487Z",
                    "updated_at": "2021-01-21T08:24:26.487Z",
                    "app_name": "keyline",
                    "granted_oauth_scopes": [
                      "directory.machines.rw",
                      "directory.organization.r"
                    ]
                  }
                ]
              }
            },
            "headers": {
              "Link": {
                "description": "Links to previous and next pages, in the format described in [RFC 8288](https://tools.ietf.org/html/rfc8288)\nThe relations `first`, `prev`, `next` and `last` can be present.",
                "schema": {
                  "type": "string",
                  "externalDocs": {
                    "url": "https://tools.ietf.org/html/rfc8288"
                  }
                }
              },
              "Current-Page": {
                "description": "The current page of the paginated response",
                "schema": {
                  "oneOf": [
                    {
                      "type": "integer",
                      "minimum": 1
                    },
                    {
                      "type": "string",
                      "format": "number"
                    }
                  ]
                }
              },
              "Total-Count": {
                "description": "The total number of items in this collection",
                "schema": {
                  "oneOf": [
                    {
                      "type": "integer",
                      "minimum": 0
                    },
                    {
                      "type": "string",
                      "format": "number"
                    }
                  ]
                }
              },
              "Total-Pages": {
                "description": "The total number of pages for the current page size in this collection",
                "schema": {
                  "oneOf": [
                    {
                      "type": "integer",
                      "minimum": 0
                    },
                    {
                      "type": "string",
                      "format": "number"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\nThis is returned when invalid page or per_page params have been sent.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/connections/{connection_id}": {
      "get": {
        "tags": [
          "Subscriptions & Connections"
        ],
        "description": "Retrieve specific connection for the authorized app (requires HTTP Basic Auth for app or bearer auth with vendor organisation).The ID of the connection is e.g. `Person-52986771-5fc9-4037-ab90-d9257509c1d6` or `Organization-d2e78ba7-5cfc-4359-9d8a-43ce0fa3a795`\n- needed bearer: `Organization`\n- needed scopes: `directory.connections_and_subscriptions.r` or `directory.connections_and_subscriptions.rw`",
        "security": [
          {
            "basicAuth": [],
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "connection_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "app_name",
                    "connectable_type",
                    "connectable_id",
                    "created_at",
                    "updated_at",
                    "granted_oauth_scopes"
                  ],
                  "properties": {
                    "app_name": {
                      "type": "string"
                    },
                    "connectable_type": {
                      "type": "string",
                      "enum": [
                        "Person",
                        "Organization"
                      ]
                    },
                    "connectable_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "granted_oauth_scopes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "directory.person.r"
                      }
                    }
                  }
                },
                "example": {
                  "connectable_type": "Person",
                  "connectable_id": "383663bc-149a-5b76-b50d-ee039046c12e",
                  "created_at": "2021-01-21T08:24:26.494Z",
                  "updated_at": "2021-01-21T08:24:26.494Z",
                  "app_name": "keyline",
                  "granted_oauth_scopes": [
                    "directory.person.r",
                    "warehouse.items.r"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/manufacturer/machines": {
      "get": {
        "tags": [
          "Manufacturer"
        ],
        "description": "Lists all machines that were created for the given manufacturer organization.\n- needed bearer: `Organization` or `Person`\n- needed scopes: `directory.manufactured_machines.r` or `directory.manufactured_machines.rw`\n",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of machines",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "id",
                      "name",
                      "kind",
                      "serial_number",
                      "manufacturer_id",
                      "owner_id",
                      "site_id",
                      "created_at",
                      "updated_at"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                      },
                      "name": {
                        "type": "string",
                        "example": "Speedmaster 2020"
                      },
                      "manufacturer_id": {
                        "nullable": true,
                        "type": "string",
                        "example": "heidelberg",
                        "enum": [
                          "JMD",
                          "MK",
                          "baumann",
                          "burg",
                          "canon",
                          "duplo",
                          "fuji",
                          "heidelberg",
                          "hohner",
                          "horizon",
                          "hp",
                          "hugobeck",
                          "hunkeler",
                          "hörauf",
                          "kalfass",
                          "kba",
                          "kodak",
                          "komori",
                          "kugeler-womako",
                          "magnum",
                          "man",
                          "mbo",
                          "meccanotechnica",
                          "miyakoshi",
                          "msi",
                          "müller-martini",
                          "perfecta",
                          "petrato",
                          "polar",
                          "ricoh",
                          "ryobi",
                          "screen",
                          "solema",
                          "stahl",
                          "technow",
                          "wohlenberg",
                          "xeikon",
                          "xerox"
                        ]
                      },
                      "serial_number": {
                        "type": "string",
                        "description": "Needs to be unique by manufacturer",
                        "example": "HDB1337",
                        "nullable": true
                      },
                      "kind": {
                        "type": "string",
                        "enum": [
                          "sheetfed_digital_press",
                          "web_digital_press",
                          "digital_press",
                          "sheetfed_offset_press",
                          "web_offset_press",
                          "offset_press",
                          "cutter",
                          "shape_cutter",
                          "folder",
                          "box_maker",
                          "gatherer",
                          "stitcher",
                          "adhesive_binder",
                          "trimmer",
                          "thread_sewer",
                          "case_maker",
                          "box_packer",
                          "ctp",
                          "platesetter"
                        ]
                      },
                      "owner_id": {
                        "type": "string",
                        "nullable": true,
                        "format": "uuid",
                        "description": "Optional Owner Organization ID, if the machine has an owner"
                      },
                      "site_id": {
                        "type": "string",
                        "nullable": true,
                        "format": "uuid",
                        "description": "Optional Site ID"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "id": "760c3948-18a0-5380-905b-9dc5ee8f75ea",
                    "name": "Speedmaster CX 102",
                    "serial_number": "HDB4911391234949123",
                    "manufacturer_id": "heidelberg",
                    "kind": "offset_press",
                    "site_id": "d6308910-f5ae-58c0-aba7-d099947845c6",
                    "created_at": "2020-03-18T10:44:17.720Z",
                    "updated_at": "2020-03-18T10:44:17.720Z",
                    "owner_id": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                  }
                ]
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Manufacturer"
        ],
        "description": "Creates a new machine with the given arguments.\n- needed bearer: `Organization` or `Person`\n- needed scopes: `directory.manufactured_machines.rw` or `directory.manufactured_machines.w`\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "manufactured_machine"
                ],
                "properties": {
                  "manufactured_machine": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "name",
                      "kind"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "Speedmaster 2020"
                      },
                      "serial_number": {
                        "description": "Unique by manufacturer",
                        "type": "string",
                        "example": "HDB1337"
                      },
                      "kind": {
                        "type": "string",
                        "enum": [
                          "sheetfed_digital_press",
                          "web_digital_press",
                          "digital_press",
                          "sheetfed_offset_press",
                          "web_offset_press",
                          "offset_press",
                          "cutter",
                          "shape_cutter",
                          "folder",
                          "box_maker",
                          "gatherer",
                          "stitcher",
                          "adhesive_binder",
                          "trimmer",
                          "thread_sewer",
                          "case_maker",
                          "box_packer",
                          "ctp",
                          "platesetter"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "organization_id",
            "required": false,
            "schema": {
              "description": "Optional UUID of the organization, if the bearer is a Person",
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "id",
                    "name",
                    "kind",
                    "serial_number",
                    "manufacturer_id",
                    "owner_id",
                    "site_id",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                    },
                    "name": {
                      "type": "string",
                      "example": "Speedmaster 2020"
                    },
                    "manufacturer_id": {
                      "nullable": true,
                      "type": "string",
                      "example": "heidelberg",
                      "enum": [
                        "JMD",
                        "MK",
                        "baumann",
                        "burg",
                        "canon",
                        "duplo",
                        "fuji",
                        "heidelberg",
                        "hohner",
                        "horizon",
                        "hp",
                        "hugobeck",
                        "hunkeler",
                        "hörauf",
                        "kalfass",
                        "kba",
                        "kodak",
                        "komori",
                        "kugeler-womako",
                        "magnum",
                        "man",
                        "mbo",
                        "meccanotechnica",
                        "miyakoshi",
                        "msi",
                        "müller-martini",
                        "perfecta",
                        "petrato",
                        "polar",
                        "ricoh",
                        "ryobi",
                        "screen",
                        "solema",
                        "stahl",
                        "technow",
                        "wohlenberg",
                        "xeikon",
                        "xerox"
                      ]
                    },
                    "serial_number": {
                      "type": "string",
                      "description": "Needs to be unique by manufacturer",
                      "example": "HDB1337",
                      "nullable": true
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "sheetfed_digital_press",
                        "web_digital_press",
                        "digital_press",
                        "sheetfed_offset_press",
                        "web_offset_press",
                        "offset_press",
                        "cutter",
                        "shape_cutter",
                        "folder",
                        "box_maker",
                        "gatherer",
                        "stitcher",
                        "adhesive_binder",
                        "trimmer",
                        "thread_sewer",
                        "case_maker",
                        "box_packer",
                        "ctp",
                        "platesetter"
                      ]
                    },
                    "owner_id": {
                      "type": "string",
                      "nullable": true,
                      "format": "uuid",
                      "description": "Optional Owner Organization ID, if the machine has an owner"
                    },
                    "site_id": {
                      "type": "string",
                      "nullable": true,
                      "format": "uuid",
                      "description": "Optional Site ID"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "example": {
                  "id": "4b797acb-9734-41b6-8377-ef3e38e3ce1d",
                  "name": "Manufactured Machine",
                  "serial_number": "ABC",
                  "manufacturer_id": "heidelberg",
                  "kind": "offset_press",
                  "site_id": null,
                  "created_at": "2020-03-18T10:55:09.558Z",
                  "updated_at": "2020-03-18T10:55:09.558Z",
                  "owner_id": null
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (can happen if the organization is not a manufacturer)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": {
                  "errors": [
                    "no_manufacturer_organization"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity (Validation error during creation)",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/manufacturer/machines/{machine_id}": {
      "get": {
        "tags": [
          "Manufacturer"
        ],
        "description": "Shows manufactured machine that belongs to the given manufacturer organization.\n- needed bearer: `Organization` or `Person`\n- needed scopes: `directory.manufactured_machines.r` or `directory.manufactured_machines.rw`\n",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "machine_id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "23f90a03-0baf-4466-be09-09dfa6923041"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns machine",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "id",
                    "name",
                    "kind",
                    "serial_number",
                    "manufacturer_id",
                    "owner_id",
                    "site_id",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                    },
                    "name": {
                      "type": "string",
                      "example": "Speedmaster 2020"
                    },
                    "manufacturer_id": {
                      "nullable": true,
                      "type": "string",
                      "example": "heidelberg",
                      "enum": [
                        "JMD",
                        "MK",
                        "baumann",
                        "burg",
                        "canon",
                        "duplo",
                        "fuji",
                        "heidelberg",
                        "hohner",
                        "horizon",
                        "hp",
                        "hugobeck",
                        "hunkeler",
                        "hörauf",
                        "kalfass",
                        "kba",
                        "kodak",
                        "komori",
                        "kugeler-womako",
                        "magnum",
                        "man",
                        "mbo",
                        "meccanotechnica",
                        "miyakoshi",
                        "msi",
                        "müller-martini",
                        "perfecta",
                        "petrato",
                        "polar",
                        "ricoh",
                        "ryobi",
                        "screen",
                        "solema",
                        "stahl",
                        "technow",
                        "wohlenberg",
                        "xeikon",
                        "xerox"
                      ]
                    },
                    "serial_number": {
                      "type": "string",
                      "description": "Needs to be unique by manufacturer",
                      "example": "HDB1337",
                      "nullable": true
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "sheetfed_digital_press",
                        "web_digital_press",
                        "digital_press",
                        "sheetfed_offset_press",
                        "web_offset_press",
                        "offset_press",
                        "cutter",
                        "shape_cutter",
                        "folder",
                        "box_maker",
                        "gatherer",
                        "stitcher",
                        "adhesive_binder",
                        "trimmer",
                        "thread_sewer",
                        "case_maker",
                        "box_packer",
                        "ctp",
                        "platesetter"
                      ]
                    },
                    "owner_id": {
                      "type": "string",
                      "nullable": true,
                      "format": "uuid",
                      "description": "Optional Owner Organization ID, if the machine has an owner"
                    },
                    "site_id": {
                      "type": "string",
                      "nullable": true,
                      "format": "uuid",
                      "description": "Optional Site ID"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "example": {
                  "id": "760c3948-18a0-5380-905b-9dc5ee8f75ea",
                  "name": "Speedmaster CX 102",
                  "serial_number": "HDB4911391234949123",
                  "manufacturer_id": "heidelberg",
                  "kind": "offset_press",
                  "site_id": "d6308910-f5ae-58c0-aba7-d099947845c6",
                  "created_at": "2020-03-18T11:23:35.150Z",
                  "updated_at": "2020-03-18T11:23:35.150Z",
                  "owner_id": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Manufacturer"
        ],
        "description": "Update machine that belongs to the given manufacturer organization.\n- needed bearer: `Organization` or `Person`\n- needed scopes: `directory.manufactured_machines.w` or `directory.manufactured_machines.rw`\n",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "manufactured_machine"
                ],
                "properties": {
                  "manufactured_machine": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "Speedmaster 2020"
                      },
                      "serial_number": {
                        "description": "Unique by manufacturer",
                        "type": "string",
                        "example": "HDB1337"
                      },
                      "kind": {
                        "type": "string",
                        "enum": [
                          "sheetfed_digital_press",
                          "web_digital_press",
                          "digital_press",
                          "sheetfed_offset_press",
                          "web_offset_press",
                          "offset_press",
                          "cutter",
                          "shape_cutter",
                          "folder",
                          "box_maker",
                          "gatherer",
                          "stitcher",
                          "adhesive_binder",
                          "trimmer",
                          "thread_sewer",
                          "case_maker",
                          "box_packer",
                          "ctp",
                          "platesetter"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "machine_id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "23f90a03-0baf-4466-be09-09dfa6923041"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns machine",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "id",
                    "name",
                    "kind",
                    "serial_number",
                    "manufacturer_id",
                    "owner_id",
                    "site_id",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                    },
                    "name": {
                      "type": "string",
                      "example": "Speedmaster 2020"
                    },
                    "manufacturer_id": {
                      "nullable": true,
                      "type": "string",
                      "example": "heidelberg",
                      "enum": [
                        "JMD",
                        "MK",
                        "baumann",
                        "burg",
                        "canon",
                        "duplo",
                        "fuji",
                        "heidelberg",
                        "hohner",
                        "horizon",
                        "hp",
                        "hugobeck",
                        "hunkeler",
                        "hörauf",
                        "kalfass",
                        "kba",
                        "kodak",
                        "komori",
                        "kugeler-womako",
                        "magnum",
                        "man",
                        "mbo",
                        "meccanotechnica",
                        "miyakoshi",
                        "msi",
                        "müller-martini",
                        "perfecta",
                        "petrato",
                        "polar",
                        "ricoh",
                        "ryobi",
                        "screen",
                        "solema",
                        "stahl",
                        "technow",
                        "wohlenberg",
                        "xeikon",
                        "xerox"
                      ]
                    },
                    "serial_number": {
                      "type": "string",
                      "description": "Needs to be unique by manufacturer",
                      "example": "HDB1337",
                      "nullable": true
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "sheetfed_digital_press",
                        "web_digital_press",
                        "digital_press",
                        "sheetfed_offset_press",
                        "web_offset_press",
                        "offset_press",
                        "cutter",
                        "shape_cutter",
                        "folder",
                        "box_maker",
                        "gatherer",
                        "stitcher",
                        "adhesive_binder",
                        "trimmer",
                        "thread_sewer",
                        "case_maker",
                        "box_packer",
                        "ctp",
                        "platesetter"
                      ]
                    },
                    "owner_id": {
                      "type": "string",
                      "nullable": true,
                      "format": "uuid",
                      "description": "Optional Owner Organization ID, if the machine has an owner"
                    },
                    "site_id": {
                      "type": "string",
                      "nullable": true,
                      "format": "uuid",
                      "description": "Optional Site ID"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "example": {
                  "id": "760c3948-18a0-5380-905b-9dc5ee8f75ea",
                  "name": "Manufactured Machine",
                  "serial_number": "HDB4911391234949123",
                  "manufacturer_id": "heidelberg",
                  "kind": "adhesive_binder",
                  "site_id": "d6308910-f5ae-58c0-aba7-d099947845c6",
                  "created_at": "2020-03-18T11:28:24.820Z",
                  "updated_at": "2020-03-18T11:28:25.517Z",
                  "owner_id": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Manufacturer"
        ],
        "description": "Deleted manufactured machine that belongs to the given manufacturer organization if it does not have an owner.\n- needed bearer: `Organization` or `Person`\n- needed scopes: `directory.manufactured_machines.w` or `directory.manufactured_machines.rw`\n",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "machine_id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "23f90a03-0baf-4466-be09-09dfa6923041"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Machine was deleted"
          }
        }
      }
    },
    "/person/organizations/{organization_id}/machines/{machine_id}/machine_specification": {
      "get": {
        "tags": [
          "Person's Organization"
        ],
        "description": "Retrive specification of an asset.\n- needed bearer: `Person`\n- needed scopes: `directory.machine_specifications.r` or `directory.machine_specifications.rw` or `directory.confidential_machine_specifications.r` or `directory.confidential_machine_specifications.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "machine_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "variables",
            "description": "Variables to calculate conditional specification values",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "printed_surfaces": {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 2
                },
                "multi_color": {
                  "type": "boolean"
                },
                "substrate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "width_in_mm": {
                      "type": "number",
                      "minimum": 0
                    },
                    "height_in_mm": {
                      "type": "number",
                      "minimum": 0
                    },
                    "thickness_in_mm": {
                      "type": "number",
                      "minimum": 0
                    },
                    "coating": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "capabilities"
                  ],
                  "properties": {
                    "capabilities": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": {
                  "capabilities": [],
                  "setup_time": {
                    "value": "10",
                    "unit": "minutes"
                  },
                  "costs_per_hour": {
                    "value": "1200",
                    "unit": "EUR"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/machines/{machine_id}/machine_specification": {
      "get": {
        "tags": [
          "Machines"
        ],
        "description": "Retrive specification of an asset.\n- needed bearer: `Person` or `Organization`\n- needed scopes: `directory.machine_specifications.r` or `directory.machine_specifications.rw` or `directory.confidential_machine_specifications.r` or `directory.confidential_machine_specifications.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "machine_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "variables",
            "description": "Variables to calculate conditional specification values",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "printed_surfaces": {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 2
                },
                "multi_color": {
                  "type": "boolean"
                },
                "substrate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "width_in_mm": {
                      "type": "number",
                      "minimum": 0
                    },
                    "height_in_mm": {
                      "type": "number",
                      "minimum": 0
                    },
                    "thickness_in_mm": {
                      "type": "number",
                      "minimum": 0
                    },
                    "coating": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "capabilities"
                  ],
                  "properties": {
                    "capabilities": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": {
                  "capabilities": [],
                  "machine_time": {
                    "value": {
                      "setup": 10,
                      "setup_unit": "minutes",
                      "clean_up": 0,
                      "clean_up_unit": "minutes"
                    },
                    "unit": "minutes"
                  },
                  "costs_per_hour": {
                    "value": "1200",
                    "unit": "EUR"
                  },
                  "sheets_per_hour": {
                    "value": [
                      {
                        "condition": {
                          "and": [
                            {
                              ">": [
                                {
                                  "var": "substrate.width_in_mm"
                                },
                                "364"
                              ]
                            },
                            {
                              "==": [
                                {
                                  "var": "substrate.coating"
                                },
                                true
                              ]
                            }
                          ]
                        },
                        "value": 1420,
                        "unit": "sheets_per_hour"
                      },
                      {
                        "condition": {},
                        "value": 1490,
                        "unit": "sheets_per_hour"
                      }
                    ],
                    "unit": "sheets_per_hour"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/person/organizations/{organization_id}/specialists/{specialist_id}/specialist_ownership": {
      "post": {
        "tags": [
          "Person's Organization"
        ],
        "description": "Creates ownership for asset.\n- needed bearer: `Person`\n- needed scopes: `directory.specialists.w` or `directory.specialists.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "specialist_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "site_id",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "organization_id",
                    "terminated_at",
                    "asset_id",
                    "asset_type",
                    "created_at",
                    "updated_at"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "62abcc92-e17e-4db0-b78e-13369251474b"
                    },
                    "organization_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                    },
                    "terminated_at": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "site_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "3cbc2a23-de0e-4b0d-84b2-0c01d884957a",
                      "nullable": true
                    },
                    "asset_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                    },
                    "asset_type": {
                      "type": "string",
                      "enum": [
                        "Machine",
                        "Software",
                        "Specialist"
                      ]
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "example": {
                  "id": "2fd90d0c-6064-443b-bbfe-920f4830ceed",
                  "organization_id": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                  "terminated_at": null,
                  "asset_id": "032201df-2a93-5b25-b271-c6714fb22eac",
                  "asset_type": "Specialist",
                  "site_id": null,
                  "created_at": "2020-05-12T12:36:37.324+02:00",
                  "updated_at": "2020-05-12T12:36:37.324+02:00"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (Validation error)",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      },
      "patch": {
        "tags": [
          "Person's Organization"
        ],
        "description": "Updates ownership for asset.\n- needed bearer: `Person`\n- needed scopes: `directory.specialists.w` or `directory.specialists.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "specialist_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "specialist_ownership"
                ],
                "properties": {
                  "specialist_ownership": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "site_id"
                    ],
                    "properties": {
                      "site_id": {
                        "nullable": true,
                        "type": "string",
                        "format": "uuid",
                        "example": "3cbc2a23-de0e-4b0d-84b2-0c01d884957a"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "organization_id",
                    "terminated_at",
                    "asset_id",
                    "asset_type",
                    "created_at",
                    "updated_at"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "62abcc92-e17e-4db0-b78e-13369251474b"
                    },
                    "organization_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                    },
                    "terminated_at": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "site_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "3cbc2a23-de0e-4b0d-84b2-0c01d884957a",
                      "nullable": true
                    },
                    "asset_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                    },
                    "asset_type": {
                      "type": "string",
                      "enum": [
                        "Machine",
                        "Software",
                        "Specialist"
                      ]
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "example": {
                  "id": "f9901a8b-3dca-59d1-9ed0-4469233800a8",
                  "organization_id": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                  "terminated_at": null,
                  "asset_id": "fe16f803-9960-566a-bbf4-23d3d88c6ec4",
                  "asset_type": "Specialist",
                  "site_id": "8fff4ac9-9daa-59e8-903e-1dd99beb6879",
                  "created_at": "2020-05-12T12:41:08.999+02:00",
                  "updated_at": "2020-05-12T12:41:13.622+02:00"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (Validation error)",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      },
      "get": {
        "tags": [
          "Person's Organization"
        ],
        "description": "Show ownership.\n- needed bearer: `Person`\n- needed scopes: `directory.specialists.r` or `directory.specialists.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "specialist_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "organization_id",
                    "terminated_at",
                    "asset_id",
                    "asset_type",
                    "created_at",
                    "updated_at"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "62abcc92-e17e-4db0-b78e-13369251474b"
                    },
                    "organization_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                    },
                    "terminated_at": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "site_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "3cbc2a23-de0e-4b0d-84b2-0c01d884957a",
                      "nullable": true
                    },
                    "asset_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                    },
                    "asset_type": {
                      "type": "string",
                      "enum": [
                        "Machine",
                        "Software",
                        "Specialist"
                      ]
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "example": {
                  "id": "f9901a8b-3dca-59d1-9ed0-4469233800a8",
                  "organization_id": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                  "terminated_at": null,
                  "asset_id": "fe16f803-9960-566a-bbf4-23d3d88c6ec4",
                  "asset_type": "Specialist",
                  "site_id": "d6308910-f5ae-58c0-aba7-d099947845c6",
                  "created_at": "2020-05-12T12:42:32.131+02:00",
                  "updated_at": "2020-05-12T12:42:32.131+02:00"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      },
      "delete": {
        "tags": [
          "Person's Organization"
        ],
        "description": "Removes ownership for asset. Needs special scope: `directory.remove_specialists`.\n- needed bearer: `Person`\n- needed scopes: `directory.specialists.w` or `directory.specialists.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "specialist_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/specialists/{specialist_id}/specialist_ownership": {
      "post": {
        "tags": [
          "Specialists"
        ],
        "description": "Creates ownership for asset.\n- needed bearer: `Person` or `Organization`\n- needed scopes: `directory.specialists.w` or `directory.specialists.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "specialist_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "site_id",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "organization_id",
                    "terminated_at",
                    "asset_id",
                    "asset_type",
                    "created_at",
                    "updated_at"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "62abcc92-e17e-4db0-b78e-13369251474b"
                    },
                    "organization_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                    },
                    "terminated_at": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "site_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "3cbc2a23-de0e-4b0d-84b2-0c01d884957a",
                      "nullable": true
                    },
                    "asset_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                    },
                    "asset_type": {
                      "type": "string",
                      "enum": [
                        "Machine",
                        "Software",
                        "Specialist"
                      ]
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "example": {
                  "id": "380a0e29-3b96-43f4-9234-cfd7dc49232a",
                  "organization_id": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                  "terminated_at": null,
                  "asset_id": "032201df-2a93-5b25-b271-c6714fb22eac",
                  "asset_type": "Specialist",
                  "site_id": null,
                  "created_at": "2020-05-12T10:36:36.352Z",
                  "updated_at": "2020-05-12T10:36:36.352Z"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (Validation error)",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      },
      "patch": {
        "tags": [
          "Specialists"
        ],
        "description": "Updates ownership for asset.\n- needed bearer: `Person` or `Organization`\n- needed scopes: `directory.specialists.w` or `directory.specialists.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "specialist_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "specialist_ownership"
                ],
                "properties": {
                  "specialist_ownership": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "site_id"
                    ],
                    "properties": {
                      "site_id": {
                        "nullable": true,
                        "type": "string",
                        "format": "uuid",
                        "example": "3cbc2a23-de0e-4b0d-84b2-0c01d884957a"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "organization_id",
                    "terminated_at",
                    "asset_id",
                    "asset_type",
                    "created_at",
                    "updated_at"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "62abcc92-e17e-4db0-b78e-13369251474b"
                    },
                    "organization_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                    },
                    "terminated_at": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "site_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "3cbc2a23-de0e-4b0d-84b2-0c01d884957a",
                      "nullable": true
                    },
                    "asset_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                    },
                    "asset_type": {
                      "type": "string",
                      "enum": [
                        "Machine",
                        "Software",
                        "Specialist"
                      ]
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "example": {
                  "id": "f9901a8b-3dca-59d1-9ed0-4469233800a8",
                  "organization_id": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                  "terminated_at": null,
                  "asset_id": "fe16f803-9960-566a-bbf4-23d3d88c6ec4",
                  "asset_type": "Specialist",
                  "site_id": "8fff4ac9-9daa-59e8-903e-1dd99beb6879",
                  "created_at": "2020-05-12T10:41:08.992Z",
                  "updated_at": "2020-05-12T10:41:11.734Z"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (Validation error)",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      },
      "get": {
        "tags": [
          "Specialists"
        ],
        "description": "Show ownership.\n- needed bearer: `Person` or `Organization`\n- needed scopes: `directory.specialists.r` or `directory.specialists.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "specialist_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "organization_id",
                    "terminated_at",
                    "asset_id",
                    "asset_type",
                    "created_at",
                    "updated_at"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "62abcc92-e17e-4db0-b78e-13369251474b"
                    },
                    "organization_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                    },
                    "terminated_at": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "site_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "3cbc2a23-de0e-4b0d-84b2-0c01d884957a",
                      "nullable": true
                    },
                    "asset_id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                    },
                    "asset_type": {
                      "type": "string",
                      "enum": [
                        "Machine",
                        "Software",
                        "Specialist"
                      ]
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "example": {
                  "id": "f9901a8b-3dca-59d1-9ed0-4469233800a8",
                  "organization_id": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                  "terminated_at": null,
                  "asset_id": "fe16f803-9960-566a-bbf4-23d3d88c6ec4",
                  "asset_type": "Specialist",
                  "site_id": "d6308910-f5ae-58c0-aba7-d099947845c6",
                  "created_at": "2020-05-12T10:42:32.131Z",
                  "updated_at": "2020-05-12T10:42:32.131Z"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      },
      "delete": {
        "tags": [
          "Specialists"
        ],
        "description": "Removes ownership for asset. Needs special scope: `directory.remove_specialists`.\n- needed bearer: `Person` or `Organization`\n- needed scopes: `directory.specialists.w` or `directory.specialists.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "specialist_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/person/organizations/{organization_id}/specialists/{specialist_id}": {
      "get": {
        "tags": [
          "Person's Organization"
        ],
        "description": "Retrive a specific Specialist.\n- needed bearer: `Person`\n- needed scopes: `directory.specialists.r` or `directory.specialists.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "specialist_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "id",
                    "name",
                    "kind",
                    "site_id",
                    "owner_id",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                    },
                    "name": {
                      "type": "string",
                      "example": "Shipping"
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "shipping",
                        "boxing",
                        "other"
                      ]
                    },
                    "site_id": {
                      "type": "string",
                      "nullable": true,
                      "format": "uuid",
                      "description": "Optional Site ID"
                    },
                    "owner_id": {
                      "type": "string",
                      "nullable": true,
                      "format": "uuid"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "example": {
                  "id": "fe16f803-9960-566a-bbf4-23d3d88c6ec4",
                  "name": "Boxing",
                  "kind": "boxing",
                  "site_id": "d6308910-f5ae-58c0-aba7-d099947845c6",
                  "created_at": "2020-05-12T14:47:19.489+02:00",
                  "updated_at": "2020-05-12T14:47:19.489+02:00",
                  "owner_id": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/person/organizations/{organization_id}/specialists": {
      "get": {
        "tags": [
          "Person's Organization"
        ],
        "description": "Lists Specialists of the current organization.\n- needed bearer: `Person`\n- needed scopes: `directory.specialists.r` or `directory.specialists.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filters[site_id]",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "id",
                      "name",
                      "kind",
                      "site_id",
                      "owner_id",
                      "created_at",
                      "updated_at"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                      },
                      "name": {
                        "type": "string",
                        "example": "Shipping"
                      },
                      "kind": {
                        "type": "string",
                        "enum": [
                          "shipping",
                          "boxing",
                          "other"
                        ]
                      },
                      "site_id": {
                        "type": "string",
                        "nullable": true,
                        "format": "uuid",
                        "description": "Optional Site ID"
                      },
                      "owner_id": {
                        "type": "string",
                        "nullable": true,
                        "format": "uuid"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "id": "fe16f803-9960-566a-bbf4-23d3d88c6ec4",
                    "name": "Boxing",
                    "kind": "boxing",
                    "site_id": "d6308910-f5ae-58c0-aba7-d099947845c6",
                    "created_at": "2020-05-12T14:47:38.788+02:00",
                    "updated_at": "2020-05-12T14:47:38.788+02:00",
                    "owner_id": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      },
      "post": {
        "tags": [
          "Person's Organization"
        ],
        "description": "Creates a Specialist, needs ownership assigned.\n- needed bearer: `Person`\n- needed scopes: `directory.specialists.w` or `directory.specialists.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "specialist"
                ],
                "properties": {
                  "specialist": {
                    "allOf": [
                      {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "Shipping"
                          },
                          "kind": {
                            "type": "string",
                            "enum": [
                              "shipping",
                              "boxing",
                              "other"
                            ]
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "name",
                          "kind"
                        ],
                        "properties": {}
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "id",
                    "name",
                    "kind",
                    "site_id",
                    "owner_id",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                    },
                    "name": {
                      "type": "string",
                      "example": "Shipping"
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "shipping",
                        "boxing",
                        "other"
                      ]
                    },
                    "site_id": {
                      "type": "string",
                      "nullable": true,
                      "format": "uuid",
                      "description": "Optional Site ID"
                    },
                    "owner_id": {
                      "type": "string",
                      "nullable": true,
                      "format": "uuid"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "example": {
                  "id": "8da76ec5-172c-40f9-8e8d-088dfd2450b9",
                  "name": "Boxing",
                  "kind": "boxing",
                  "site_id": null,
                  "created_at": "2020-05-12T14:50:00.788+02:00",
                  "updated_at": "2020-05-12T14:50:00.788+02:00",
                  "owner_id": null
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (Validation error)",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/specialists/{specialist_id}": {
      "get": {
        "tags": [
          "Specialists"
        ],
        "description": "Retrive a specific Specialist.\n- needed bearer: `Person` or `Organization`\n- needed scopes: `directory.specialists.r` or `directory.specialists.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "specialist_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "id",
                    "name",
                    "kind",
                    "site_id",
                    "owner_id",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                    },
                    "name": {
                      "type": "string",
                      "example": "Shipping"
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "shipping",
                        "boxing",
                        "other"
                      ]
                    },
                    "site_id": {
                      "type": "string",
                      "nullable": true,
                      "format": "uuid",
                      "description": "Optional Site ID"
                    },
                    "owner_id": {
                      "type": "string",
                      "nullable": true,
                      "format": "uuid"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "example": {
                  "id": "fe16f803-9960-566a-bbf4-23d3d88c6ec4",
                  "name": "Boxing",
                  "kind": "boxing",
                  "site_id": "d6308910-f5ae-58c0-aba7-d099947845c6",
                  "created_at": "2020-05-12T12:50:56.693Z",
                  "updated_at": "2020-05-12T12:50:56.693Z",
                  "owner_id": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/specialists": {
      "get": {
        "tags": [
          "Specialists"
        ],
        "description": "Lists Specialists of the current organization.\n- needed bearer: `Person` or `Organization`\n- needed scopes: `directory.specialists.r` or `directory.specialists.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "filters[site_id]",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "id",
                      "name",
                      "kind",
                      "site_id",
                      "owner_id",
                      "created_at",
                      "updated_at"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                      },
                      "name": {
                        "type": "string",
                        "example": "Shipping"
                      },
                      "kind": {
                        "type": "string",
                        "enum": [
                          "shipping",
                          "boxing",
                          "other"
                        ]
                      },
                      "site_id": {
                        "type": "string",
                        "nullable": true,
                        "format": "uuid",
                        "description": "Optional Site ID"
                      },
                      "owner_id": {
                        "type": "string",
                        "nullable": true,
                        "format": "uuid"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "id": "fe16f803-9960-566a-bbf4-23d3d88c6ec4",
                    "name": "Boxing",
                    "kind": "boxing",
                    "site_id": "d6308910-f5ae-58c0-aba7-d099947845c6",
                    "created_at": "2020-05-12T12:54:48.483Z",
                    "updated_at": "2020-05-12T12:54:48.483Z",
                    "owner_id": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      },
      "post": {
        "tags": [
          "Specialists"
        ],
        "description": "Creates a Specialist, needs ownership assigned.\n- needed bearer: `Person` or `Organization`\n- needed scopes: `directory.specialists.w` or `directory.specialists.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "specialist"
                ],
                "properties": {
                  "specialist": {
                    "allOf": [
                      {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "Shipping"
                          },
                          "kind": {
                            "type": "string",
                            "enum": [
                              "shipping",
                              "boxing",
                              "other"
                            ]
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "name",
                          "kind"
                        ],
                        "properties": {}
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "id",
                    "name",
                    "kind",
                    "site_id",
                    "owner_id",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "4187f98a-585c-4db7-baa5-52170fb5011d"
                    },
                    "name": {
                      "type": "string",
                      "example": "Shipping"
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "shipping",
                        "boxing",
                        "other"
                      ]
                    },
                    "site_id": {
                      "type": "string",
                      "nullable": true,
                      "format": "uuid",
                      "description": "Optional Site ID"
                    },
                    "owner_id": {
                      "type": "string",
                      "nullable": true,
                      "format": "uuid"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "example": {
                  "id": "2a19bc22-7345-460a-83b9-a63e35f1987c",
                  "name": "Boxing",
                  "kind": "boxing",
                  "site_id": null,
                  "created_at": "2020-05-12T12:50:02.216Z",
                  "updated_at": "2020-05-12T12:50:02.216Z",
                  "owner_id": null
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (Validation error)",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/person/organizations/{organization_id}/specialists/{specialist_id}/specialist_specification": {
      "get": {
        "tags": [
          "Person's Organization"
        ],
        "description": "Retrive specification of an asset.\n- needed bearer: `Person`\n- needed scopes: `directory.specialist_specifications.r` or `directory.specialist_specifications.rw` or `directory.confidential_specialist_specifications.r` or `directory.confidential_specialist_specifications.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "specialist_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "variables",
            "description": "Variables to calculate conditional specification values",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "printed_surfaces": {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 2
                },
                "multi_color": {
                  "type": "boolean"
                },
                "substrate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "width_in_mm": {
                      "type": "number",
                      "minimum": 0
                    },
                    "height_in_mm": {
                      "type": "number",
                      "minimum": 0
                    },
                    "thickness_in_mm": {
                      "type": "number",
                      "minimum": 0
                    },
                    "coating": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "capabilities"
                  ],
                  "properties": {
                    "capabilities": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": {
                  "capabilities": []
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/specialists/{specialist_id}/specialist_specification": {
      "get": {
        "tags": [
          "Specialists"
        ],
        "description": "Retrive specification of an asset.\n- needed bearer: `Person` or `Organization`\n- needed scopes: `directory.specialist_specifications.r` or `directory.specialist_specifications.rw` or `directory.confidential_specialist_specifications.r` or `directory.confidential_specialist_specifications.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "specialist_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "variables",
            "description": "Variables to calculate conditional specification values",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "printed_surfaces": {
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 2
                },
                "multi_color": {
                  "type": "boolean"
                },
                "substrate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "width_in_mm": {
                      "type": "number",
                      "minimum": 0
                    },
                    "height_in_mm": {
                      "type": "number",
                      "minimum": 0
                    },
                    "thickness_in_mm": {
                      "type": "number",
                      "minimum": 0
                    },
                    "coating": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "capabilities"
                  ],
                  "properties": {
                    "capabilities": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": {
                  "capabilities": []
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/revoked_access_tokens": {
      "get": {
        "tags": [
          "Revoked Access Tokens"
        ],
        "description": "Retrieve list of active but revoked access tokens that\n                    should not be accepted (No authorization required).",
        "security": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of token IDs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "revoked_token_ids"
                  ],
                  "properties": {
                    "revoked_token_ids": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "uuid"
                      }
                    }
                  }
                },
                "example": {
                  "revoked_token_ids": [
                    "24973a53-5970-5a33-aeb3-2fd68fc08078",
                    "6f293ff2-d334-5e9a-ad7a-21a4ba3a2a4e"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      },
      "post": {
        "tags": [
          "Revoked Access Tokens"
        ],
        "description": "Revokes given, currently active, access token given by Authorization Header.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "access_token_id"
                  ],
                  "properties": {
                    "access_token_id": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                },
                "example": {
                  "access_token_id": "24973a53-5970-5a33-aeb3-2fd68fc08078"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (Validation error)",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/subscriptions": {
      "get": {
        "tags": [
          "Subscriptions & Connections"
        ],
        "description": "Retrieve list of active or provisioning subscriptions for the authorized app (requires HTTP Basic Auth for app or bearer auth with vendor organisation).",
        "security": [
          {
            "basicAuth": [],
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "filters[subscriber_id]",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Organization-d2e78ba7-5cfc-4359-9d8a-43ce0fa3a795"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The page of the current collection that shall be returned",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "description": "The maximum number of items included in the response, ie., the page size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 1,
              "maximum": 100,
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "app_name",
                      "subscriber_type",
                      "subscriber_id",
                      "status",
                      "plan",
                      "preceding_plan",
                      "changed_plan_at",
                      "activated_at",
                      "last_billed_at",
                      "last_paid_at",
                      "usages_in_current_billing_period",
                      "trial_ended_at",
                      "created_at",
                      "updated_at"
                    ],
                    "properties": {
                      "app_name": {
                        "type": "string"
                      },
                      "subscriber_type": {
                        "type": "string",
                        "enum": [
                          "Person",
                          "Organization"
                        ]
                      },
                      "subscriber_id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "provisioning",
                          "active",
                          "unpaid"
                        ],
                        "description": "If a subscription was unpaid, you might disable the features available for this subscription. You may want to give the subscriber a little more time. Therefore you can also use `last_paid_at`. A subscription might also change from unpaid to active again.\n"
                      },
                      "plan": {
                        "type": "string",
                        "description": "The name of a plan or `enterprise` if this subscription is linked to an enterprise plan"
                      },
                      "preceding_plan": {
                        "type": "string",
                        "nullable": true,
                        "description": "(optional) name of a plan or `enterprise`, that was subscribed before"
                      },
                      "changed_plan_at": {
                        "type": "string",
                        "nullable": true,
                        "format": "date-time",
                        "description": "(optional) if the plan changed"
                      },
                      "activated_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                      },
                      "last_billed_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                      },
                      "last_paid_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "When the subscriber paid the last time"
                      },
                      "usages_in_current_billing_period": {
                        "type": "object",
                        "description": "Object with name of a usage cost as key and the current usages as values.",
                        "additionalProperties": {
                          "type": "integer"
                        }
                      },
                      "trial_ended_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true,
                        "description": "(optional) only if a trial period was set by the plan. Does not affect the invoice status (subscription will be active)."
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "subscriber_type": "Organization",
                    "subscriber_id": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                    "status": "active",
                    "activated_at": "2020-08-08T00:00:00.000Z",
                    "last_billed_at": null,
                    "last_paid_at": null,
                    "trial_ended_at": null,
                    "created_at": "2021-01-21T08:31:24.285Z",
                    "updated_at": "2021-01-21T08:31:24.285Z",
                    "app_name": "keyline",
                    "plan": "advanced",
                    "preceding_plan": null,
                    "changed_plan_at": null,
                    "usages_in_current_billing_period": {
                      "orders_created": 12
                    }
                  }
                ]
              }
            },
            "headers": {
              "Link": {
                "description": "Links to previous and next pages, in the format described in [RFC 8288](https://tools.ietf.org/html/rfc8288)\nThe relations `first`, `prev`, `next` and `last` can be present.",
                "schema": {
                  "type": "string",
                  "externalDocs": {
                    "url": "https://tools.ietf.org/html/rfc8288"
                  }
                }
              },
              "Current-Page": {
                "description": "The current page of the paginated response",
                "schema": {
                  "oneOf": [
                    {
                      "type": "integer",
                      "minimum": 1
                    },
                    {
                      "type": "string",
                      "format": "number"
                    }
                  ]
                }
              },
              "Total-Count": {
                "description": "The total number of items in this collection",
                "schema": {
                  "oneOf": [
                    {
                      "type": "integer",
                      "minimum": 0
                    },
                    {
                      "type": "string",
                      "format": "number"
                    }
                  ]
                }
              },
              "Total-Pages": {
                "description": "The total number of pages for the current page size in this collection",
                "schema": {
                  "oneOf": [
                    {
                      "type": "integer",
                      "minimum": 0
                    },
                    {
                      "type": "string",
                      "format": "number"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\nThis is returned when invalid page or per_page params have been sent.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/subscriptions/{subscription_id}": {
      "get": {
        "tags": [
          "Subscriptions & Connections"
        ],
        "description": "Retrieve specific active or provisioning subscription for the authorized app.The ID of the subscription is e.g. `Person-52986771-5fc9-4037-ab90-d9257509c1d6` or `Organization-d2e78ba7-5cfc-4359-9d8a-43ce0fa3a795` (requires HTTP Basic Auth for app or bearer auth with vendor organisation)",
        "security": [
          {
            "basicAuth": [],
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscription_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "app_name",
                    "subscriber_type",
                    "subscriber_id",
                    "status",
                    "plan",
                    "preceding_plan",
                    "changed_plan_at",
                    "activated_at",
                    "last_billed_at",
                    "last_paid_at",
                    "usages_in_current_billing_period",
                    "trial_ended_at",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "app_name": {
                      "type": "string"
                    },
                    "subscriber_type": {
                      "type": "string",
                      "enum": [
                        "Person",
                        "Organization"
                      ]
                    },
                    "subscriber_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "provisioning",
                        "active",
                        "unpaid"
                      ],
                      "description": "If a subscription was unpaid, you might disable the features available for this subscription. You may want to give the subscriber a little more time. Therefore you can also use `last_paid_at`. A subscription might also change from unpaid to active again.\n"
                    },
                    "plan": {
                      "type": "string",
                      "description": "The name of a plan or `enterprise` if this subscription is linked to an enterprise plan"
                    },
                    "preceding_plan": {
                      "type": "string",
                      "nullable": true,
                      "description": "(optional) name of a plan or `enterprise`, that was subscribed before"
                    },
                    "changed_plan_at": {
                      "type": "string",
                      "nullable": true,
                      "format": "date-time",
                      "description": "(optional) if the plan changed"
                    },
                    "activated_at": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "last_billed_at": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "last_paid_at": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true,
                      "description": "When the subscriber paid the last time"
                    },
                    "usages_in_current_billing_period": {
                      "type": "object",
                      "description": "Object with name of a usage cost as key and the current usages as values.",
                      "additionalProperties": {
                        "type": "integer"
                      }
                    },
                    "trial_ended_at": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true,
                      "description": "(optional) only if a trial period was set by the plan. Does not affect the invoice status (subscription will be active)."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "example": {
                  "subscriber_type": "Organization",
                  "subscriber_id": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                  "status": "active",
                  "activated_at": "2020-08-08T00:00:00.000Z",
                  "last_billed_at": null,
                  "last_paid_at": null,
                  "trial_ended_at": null,
                  "created_at": "2021-01-21T08:24:26.592Z",
                  "updated_at": "2021-01-21T08:24:26.592Z",
                  "app_name": "keyline",
                  "plan": "advanced",
                  "preceding_plan": null,
                  "changed_plan_at": null,
                  "usages_in_current_billing_period": {
                    "orders_created": 12
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      },
      "patch": {
        "tags": [
          "Subscriptions & Connections"
        ],
        "description": "Update a specific active or provisioning subscription for the authorized app.The ID of the subscription is e.g. `Person-52986771-5fc9-4037-ab90-d9257509c1d6` or `Organization-d2e78ba7-5cfc-4359-9d8a-43ce0fa3a795` (requires HTTP Basic Auth for app)",
        "security": [
          {
            "basicAuth": [],
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscription_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "subscription"
                ],
                "properties": {
                  "subscription": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "status": {
                        "type": "string",
                        "description": "Change the subscription to active (if it is currently provisioning)",
                        "enum": [
                          "active"
                        ]
                      },
                      "increment_usages_in_current_billing_period": {
                        "type": "object",
                        "description": "Object with name of a usage cost as key and the usages that should be added.",
                        "additionalProperties": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "app_name",
                    "subscriber_type",
                    "subscriber_id",
                    "status",
                    "plan",
                    "preceding_plan",
                    "changed_plan_at",
                    "activated_at",
                    "last_billed_at",
                    "last_paid_at",
                    "usages_in_current_billing_period",
                    "trial_ended_at",
                    "created_at",
                    "updated_at"
                  ],
                  "properties": {
                    "app_name": {
                      "type": "string"
                    },
                    "subscriber_type": {
                      "type": "string",
                      "enum": [
                        "Person",
                        "Organization"
                      ]
                    },
                    "subscriber_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "provisioning",
                        "active",
                        "unpaid"
                      ],
                      "description": "If a subscription was unpaid, you might disable the features available for this subscription. You may want to give the subscriber a little more time. Therefore you can also use `last_paid_at`. A subscription might also change from unpaid to active again.\n"
                    },
                    "plan": {
                      "type": "string",
                      "description": "The name of a plan or `enterprise` if this subscription is linked to an enterprise plan"
                    },
                    "preceding_plan": {
                      "type": "string",
                      "nullable": true,
                      "description": "(optional) name of a plan or `enterprise`, that was subscribed before"
                    },
                    "changed_plan_at": {
                      "type": "string",
                      "nullable": true,
                      "format": "date-time",
                      "description": "(optional) if the plan changed"
                    },
                    "activated_at": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "last_billed_at": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "last_paid_at": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true,
                      "description": "When the subscriber paid the last time"
                    },
                    "usages_in_current_billing_period": {
                      "type": "object",
                      "description": "Object with name of a usage cost as key and the current usages as values.",
                      "additionalProperties": {
                        "type": "integer"
                      }
                    },
                    "trial_ended_at": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true,
                      "description": "(optional) only if a trial period was set by the plan. Does not affect the invoice status (subscription will be active)."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "example": {
                  "subscriber_type": "Organization",
                  "subscriber_id": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                  "status": "active",
                  "activated_at": "2021-01-21T08:25:55.802Z",
                  "last_billed_at": null,
                  "last_paid_at": null,
                  "trial_ended_at": null,
                  "created_at": "2021-01-21T08:25:55.723Z",
                  "updated_at": "2021-01-21T08:25:55.828Z",
                  "app_name": "accounting",
                  "plan": "deluxe_packaging",
                  "preceding_plan": null,
                  "changed_plan_at": null,
                  "usages_in_current_billing_period": {}
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (Validation error)",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      },
      "delete": {
        "tags": [
          "Subscriptions & Connections"
        ],
        "description": "Cancel a specific active or provisioning subscription for the authorized app.The ID of the subscription is e.g. `Person-52986771-5fc9-4037-ab90-d9257509c1d6` or `Organization-d2e78ba7-5cfc-4359-9d8a-43ce0fa3a795` (requires HTTP Basic Auth for app)",
        "security": [
          {
            "basicAuth": [],
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscription_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/organization/addons/{addon_id}": {
      "get": {
        "tags": [
          "Organisation"
        ],
        "description": "Returns the active addon of an organization for the current app.\n- needed bearer: `Organization`\n- needed scopes: `directory.organization.r`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "addon_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of addon",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "id",
                    "name",
                    "entry_point_url",
                    "logo_url",
                    "vendor_name",
                    "connected",
                    "plan_status"
                  ],
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                    },
                    "name": {
                      "type": "string",
                      "description": "system name of the addon app"
                    },
                    "entry_point_url": {
                      "type": "string",
                      "nullable": true
                    },
                    "logo_url": {
                      "type": "string",
                      "nullable": true
                    },
                    "vendor_name": {
                      "type": "string"
                    },
                    "connected": {
                      "type": "boolean",
                      "description": "If the current organization is connected"
                    },
                    "plan_status": {
                      "type": "string",
                      "description": "null if no subscription is present",
                      "nullable": true,
                      "enum": [
                        "provisioning",
                        "active"
                      ]
                    }
                  }
                },
                "example": {
                  "id": "a1198dc4-9e7f-5bea-9c09-2ac71f46a02e",
                  "name": "keyline_power_bi",
                  "entry_point_url": null,
                  "logo_url": null,
                  "vendor_name": "Crispy Mountain GmbH",
                  "connected": false,
                  "plan_status": "provisioning"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/organization/addons": {
      "get": {
        "tags": [
          "Organisation"
        ],
        "description": "Returns the active addons of an organization for the current app.\n- needed bearer: `Organization`\n- needed scopes: `directory.organization.r` or `directory.organization.rw`",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "required": [
                      "id",
                      "name",
                      "entry_point_url",
                      "logo_url",
                      "vendor_name",
                      "connected",
                      "plan_status"
                    ],
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                      },
                      "name": {
                        "type": "string",
                        "description": "system name of the addon app"
                      },
                      "entry_point_url": {
                        "type": "string",
                        "nullable": true
                      },
                      "logo_url": {
                        "type": "string",
                        "nullable": true
                      },
                      "vendor_name": {
                        "type": "string"
                      },
                      "connected": {
                        "type": "boolean",
                        "description": "If the current organization is connected"
                      },
                      "plan_status": {
                        "type": "string",
                        "description": "null if no subscription is present",
                        "nullable": true,
                        "enum": [
                          "provisioning",
                          "active"
                        ]
                      }
                    }
                  }
                },
                "example": [
                  {
                    "id": "a1198dc4-9e7f-5bea-9c09-2ac71f46a02e",
                    "name": "keyline_power_bi",
                    "entry_point_url": null,
                    "logo_url": null,
                    "vendor_name": "Crispy Mountain GmbH",
                    "connected": false,
                    "plan_status": null
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g. wrong scopes)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (issues with JWT)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/test_accounts": {
      "get": {
        "tags": [
          "Test Accounts"
        ],
        "description": "(SANDBOX ONLY) Retrieve list of test organizations for the vendor of the authorized app (required HTTP Basic Auth).",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "additionalProperties": false,
                        "required": [
                          "id",
                          "name",
                          "created_at",
                          "updated_at",
                          "slug",
                          "logo_url",
                          "connected",
                          "kinds",
                          "sections",
                          "country_code",
                          "currency",
                          "subscription",
                          "brand_color",
                          "test_account_owner_id"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                          },
                          "slug": {
                            "type": "string",
                            "example": "bounty-soap-inc"
                          },
                          "name": {
                            "type": "string",
                            "example": "Bounty Soap Inc."
                          },
                          "logo_url": {
                            "type": "string",
                            "format": "uri",
                            "nullable": true
                          },
                          "connected": {
                            "type": "boolean",
                            "description": "True if organization is connected to current app (display in aud)"
                          },
                          "subscription": {
                            "anyOf": [
                              {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                  "status",
                                  "plan"
                                ],
                                "properties": {
                                  "status": {
                                    "type": "string",
                                    "enum": [
                                      "provisioning",
                                      "active",
                                      "unpaid"
                                    ],
                                    "description": "If a subscription was unpaid, you might disable the features available for this subscription. You may want to give the subscriber a little more time. Therefore you can also use `last_paid_at`. A subscription might also change from unpaid to active again.\n"
                                  },
                                  "plan": {
                                    "type": "string",
                                    "description": "The name of a plan or `enterprise` if this subscription is linked to an enterprise plan"
                                  }
                                }
                              },
                              {
                                "nullable": true
                              }
                            ]
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "country_code": {
                            "type": "string",
                            "example": "DE",
                            "nullable": true
                          },
                          "kinds": {
                            "type": "array",
                            "minItems": 1,
                            "items": {
                              "type": "string",
                              "example": "printer",
                              "enum": [
                                "printer",
                                "supplier",
                                "machine_vendor",
                                "brand_owner",
                                "designer",
                                "publisher",
                                "software_developer",
                                "other"
                              ]
                            }
                          },
                          "sections": {
                            "type": "object",
                            "additionalProperties": false,
                            "description": "Only the sections that are also part of kinds are taken into account.",
                            "properties": {
                              "printer": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "softcover_books",
                                    "hardcover_books",
                                    "labels",
                                    "packagings",
                                    "business_cards",
                                    "flyers",
                                    "leaflets",
                                    "brochures",
                                    "large_formats"
                                  ]
                                }
                              },
                              "supplier": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "sheet_substrates",
                                    "web_substrates",
                                    "ink",
                                    "plates",
                                    "foils",
                                    "other"
                                  ]
                                }
                              },
                              "machine_vendor": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "sheet_fed_offset_presses",
                                    "web_fed_offset_presses",
                                    "sheet_fed_digital_presses",
                                    "web_fed_digital_presses",
                                    "cutters",
                                    "binders",
                                    "saddle_stitchers"
                                  ]
                                }
                              },
                              "designer": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "self_employed",
                                    "studio",
                                    "inhouse",
                                    "other"
                                  ]
                                }
                              },
                              "publisher": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "softcover_books",
                                    "hardcover_books",
                                    "brochures"
                                  ]
                                }
                              },
                              "software_developer": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "imposing",
                                    "ganging",
                                    "mis",
                                    "reporting",
                                    "web_to_print",
                                    "logistics",
                                    "warehousing",
                                    "machine_integration",
                                    "preflight",
                                    "workflow",
                                    "billing",
                                    "accounting",
                                    "production_planning",
                                    "production_scheduling",
                                    "production_capacity_planning"
                                  ]
                                }
                              }
                            }
                          },
                          "kind": {
                            "type": "string",
                            "example": "printer",
                            "description": "DEPRECATED please use kinds since organizations can have multiple kinds",
                            "enum": [
                              "printer",
                              "supplier",
                              "machine_vendor",
                              "brand_owner",
                              "designer",
                              "publisher",
                              "software_developer",
                              "other"
                            ]
                          },
                          "currency": {
                            "type": "string",
                            "example": "EUR",
                            "nullable": true,
                            "description": "Currency in [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format"
                          },
                          "brand_color": {
                            "type": "string",
                            "pattern": "^\\A#?(?:[0-9a-fA-F]{3}){1,2}\\z$",
                            "example": "#000000",
                            "nullable": true,
                            "description": "Brand color in hex color format"
                          },
                          "test_account_owner_id": {
                            "type": "string",
                            "nullable": true,
                            "example": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                            "description": "If this is a test account, the organization id of the owner of this test organization is returned. If this is not a test account this will be null. Test accounts are only available in the sandbox environment.\n"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "memberships",
                          "sites",
                          "private_access_token"
                        ],
                        "additionalProperties": false,
                        "properties": {
                          "private_access_token": {
                            "type": "string",
                            "description": "Private access token with all available scopes, can be null if revoked",
                            "nullable": true
                          },
                          "memberships": {
                            "type": "array",
                            "items": {
                              "allOf": [
                                {
                                  "required": [
                                    "id",
                                    "created_at",
                                    "updated_at",
                                    "roles"
                                  ],
                                  "type": "object",
                                  "additionalProperties": false,
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "format": "uuid",
                                      "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                                    },
                                    "created_at": {
                                      "type": "string",
                                      "format": "date-time"
                                    },
                                    "updated_at": {
                                      "type": "string",
                                      "format": "date-time"
                                    },
                                    "roles": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "example": [
                                        "member"
                                      ]
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "person"
                                  ],
                                  "additionalProperties": false,
                                  "properties": {
                                    "person": {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "additionalProperties": false,
                                          "properties": {
                                            "first_name": {
                                              "type": "string",
                                              "example": "Lisa"
                                            },
                                            "name": {
                                              "type": "string",
                                              "example": "Simpson"
                                            },
                                            "pronoun": {
                                              "type": "string",
                                              "example": "She/Her",
                                              "nullable": true,
                                              "enum": [
                                                "She/Her",
                                                "He/Him"
                                              ]
                                            },
                                            "locale": {
                                              "type": "string",
                                              "example": "de",
                                              "enum": [
                                                "en",
                                                "en-US",
                                                "de"
                                              ]
                                            },
                                            "unit_system": {
                                              "type": "string",
                                              "example": "metric",
                                              "enum": [
                                                "metric",
                                                "imperial"
                                              ]
                                            },
                                            "country_code": {
                                              "type": "string",
                                              "example": "DE",
                                              "nullable": true
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "required": [
                                            "id",
                                            "first_name",
                                            "name",
                                            "full_name",
                                            "email",
                                            "email_confirmed",
                                            "locale",
                                            "time_zone",
                                            "avatar_url",
                                            "connected",
                                            "created_at",
                                            "updated_at",
                                            "country_code",
                                            "currency",
                                            "unit_system",
                                            "two_factor_authentication_enabled",
                                            "subscription",
                                            "test_account_owner_id"
                                          ],
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "format": "uuid",
                                              "example": "29b276b7-c0fa-4514-a5b1-c0fb4ee40fa7"
                                            },
                                            "full_name": {
                                              "type": "string",
                                              "example": "Jane Doe"
                                            },
                                            "email": {
                                              "type": "string",
                                              "format": "email",
                                              "example": "jane.doe@gmail.com"
                                            },
                                            "email_confirmed": {
                                              "type": "boolean",
                                              "example": true,
                                              "description": "If the e-mail is not confirmed, please do not send any e-mails"
                                            },
                                            "currency": {
                                              "type": "string",
                                              "example": "EUR",
                                              "nullable": true,
                                              "description": "Currency in [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format"
                                            },
                                            "time_zone": {
                                              "type": "string",
                                              "example": "UTC",
                                              "description": "IANA Timezone: [List of time zones](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)"
                                            },
                                            "avatar_url": {
                                              "type": "string",
                                              "nullable": true,
                                              "example": "https://directory.heidelberg.cloud/rails/active_storage/blobs/avatar.jpg"
                                            },
                                            "connected": {
                                              "type": "boolean",
                                              "description": "True if person is connected to current app (display in aud)"
                                            },
                                            "subscription": {
                                              "anyOf": [
                                                {
                                                  "type": "object",
                                                  "additionalProperties": false,
                                                  "required": [
                                                    "status",
                                                    "plan"
                                                  ],
                                                  "properties": {
                                                    "status": {
                                                      "type": "string",
                                                      "enum": [
                                                        "provisioning",
                                                        "active",
                                                        "unpaid"
                                                      ],
                                                      "description": "If a subscription was unpaid, you might disable the features available for this subscription. You may want to give the subscriber a little more time. Therefore you can also use `last_paid_at`. A subscription might also change from unpaid to active again.\n"
                                                    },
                                                    "plan": {
                                                      "type": "string",
                                                      "description": "The name of a plan or `enterprise` if this subscription is linked to an enterprise plan"
                                                    }
                                                  }
                                                },
                                                {
                                                  "nullable": true
                                                }
                                              ]
                                            },
                                            "created_at": {
                                              "type": "string",
                                              "format": "date-time"
                                            },
                                            "updated_at": {
                                              "type": "string",
                                              "format": "date-time"
                                            },
                                            "two_factor_authentication_enabled": {
                                              "type": "boolean"
                                            },
                                            "test_account_owner_id": {
                                              "type": "string",
                                              "nullable": true,
                                              "example": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                                              "description": "If this is a test account, the organization id of the owner of this test organization is returned. If this is not a test account this will be null. Test accounts are only available in the sandbox environment.\n"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "sites": {
                            "type": "array",
                            "items": {
                              "required": [
                                "name",
                                "headquarter",
                                "address",
                                "created_at",
                                "updated_at"
                              ],
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "example": "d6308910-f5ae-58c0-aba7-d099947845c6"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "headquarter": {
                                  "type": "boolean",
                                  "description": "If this is the headquarter site (every organization has exactly one)"
                                },
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "updated_at": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "address": {
                                  "type": "object",
                                  "nullable": true,
                                  "required": [
                                    "id",
                                    "addressee",
                                    "street",
                                    "number",
                                    "zip_code",
                                    "town",
                                    "country_code",
                                    "state",
                                    "addition",
                                    "location",
                                    "created_at",
                                    "updated_at"
                                  ],
                                  "additionalProperties": false,
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "format": "uuid",
                                      "example": "95fd969d-684f-49f6-b17d-5f4e786c11a9"
                                    },
                                    "addressee": {
                                      "type": "string",
                                      "example": "Zaikio GmbH"
                                    },
                                    "street": {
                                      "type": "string",
                                      "example": "Emmerich-Josef-Straße"
                                    },
                                    "number": {
                                      "type": "string",
                                      "example": "1A",
                                      "nullable": true
                                    },
                                    "zip_code": {
                                      "type": "string",
                                      "example": "551166"
                                    },
                                    "town": {
                                      "type": "string",
                                      "example": "Mainz"
                                    },
                                    "country_code": {
                                      "type": "string",
                                      "example": "DE",
                                      "nullable": true
                                    },
                                    "state": {
                                      "type": "string",
                                      "example": "Rheinland-Pfalz"
                                    },
                                    "addition": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "location": {
                                      "type": "array",
                                      "minItems": 2,
                                      "maxItems": 2,
                                      "description": "Latitude and Longitude",
                                      "items": {
                                        "type": "number"
                                      }
                                    },
                                    "created_at": {
                                      "type": "string",
                                      "format": "date-time"
                                    },
                                    "updated_at": {
                                      "type": "string",
                                      "format": "date-time"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "example": [
                  {
                    "id": "79a882ed-d924-47df-b3ea-cd8c7af6fb27",
                    "name": "Rainbow GmbH",
                    "slug": "rainbow-gmbh",
                    "connected": false,
                    "kinds": [
                      "printer"
                    ],
                    "sections": {
                      "printer": [
                        "hardcover_books",
                        "softcover_books",
                        "brochures"
                      ]
                    },
                    "country_code": "DE",
                    "brand_color": null,
                    "currency": "EUR",
                    "test_account_owner_id": "c453ca95-5850-5d9a-b93e-050334c951af",
                    "created_at": "2021-01-21T14:02:53.266Z",
                    "updated_at": "2021-01-21T14:02:54.639Z",
                    "logo_url": "http://www.example.com/rails/active_storage/blobs/redirect/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaWt3TW1Vek5qQmxPUzFsTW1SbExUUm1aRGN0WVdVeE9DMHhaR1V6T0RrMFpXVTNZaklHT2daRlZBPT0iLCJleHAiOm51bGwsInB1ciI6ImJsb2JfaWQifX0=--47d2d1783258f0003276eabbd4f6b413a4164139/197-300x300.jpg",
                    "kind": "printer",
                    "subscription": null,
                    "private_access_token": "eyJraWQiOiJhNmE1MzFjMGZhZTVlNWE1MDAzZDI2ZTRhMTIwMmIwNjg2ZDFkNTRjNGZhYTViZDlkZTBjMzdkY2JkY2RkYzdlIiwiYWxnIjoiUlMyNTYifQ.eyJpc3MiOiJaQUkiLCJzdWIiOiJPcmdhbml6YXRpb24vNzlhODgyZWQtZDkyNC00N2RmLWIzZWEtY2Q4YzdhZjZmYjI3IiwiYXVkIjpbIk9yZ2FuaXphdGlvbi83OWE4ODJlZC1kOTI0LTQ3ZGYtYjNlYS1jZDhjN2FmNmZiMjciXSwianRpIjoiOGJiMjRmM2EtMjM4ZS00YWRlLWE3NWUtNjgwMTkzZmRkYzRjIiwibmJmIjoxNjExMjM3Nzc2LCJleHAiOjE2MTYzMzUzNzYsImprdSI6Imh0dHBzOi8vd3d3LmV4YW1wbGUuY29tL2FwaS92MS9qd3RfcHVibGljX2tleXMiLCJzY29wZSI6WyJkaXJlY3RvcnkuYnVzaW5lc3NfcmVsYXRpb25zaGlwcy5ydyIsImRpcmVjdG9yeS5jb25maWRlbnRpYWxfbWFjaGluZV9zcGVjaWZpY2F0aW9ucy5yIiwiZGlyZWN0b3J5LmNvbmZpZGVudGlhbF9zcGVjaWFsaXN0X3NwZWNpZmljYXRpb25zLnIiLCJkaXJlY3RvcnkuY29ubmVjdGlvbnNfYW5kX3N1YnNjcmlwdGlvbnMuciIsImRpcmVjdG9yeS5kZWxlZ2F0aW9ucy5ydyIsImRpcmVjdG9yeS5tYWNoaW5lX3NwZWNpZmljYXRpb25zLnIiLCJkaXJlY3RvcnkubWFjaGluZXMucnciLCJkaXJlY3RvcnkubWFudWZhY3R1cmVkX21hY2hpbmVzLnJ3IiwiZGlyZWN0b3J5Lm9yZ2FuaXphdGlvbi5yIiwiZGlyZWN0b3J5Lm9yZ2FuaXphdGlvbl9tZW1iZXJzLnJ3IiwiZGlyZWN0b3J5LnJlbW92ZV9tYWNoaW5lcy53IiwiZGlyZWN0b3J5LnJlbW92ZV9zb2Z0d2FyZS53IiwiZGlyZWN0b3J5LnJlbW92ZV9zcGVjaWFsaXN0cy53IiwiZGlyZWN0b3J5LnNpdGVzLnJ3IiwiZGlyZWN0b3J5LnNvZnR3YXJlLnJ3IiwiZGlyZWN0b3J5LnNwZWNpYWxpc3Rfc3BlY2lmaWNhdGlvbnMuciIsImRpcmVjdG9yeS5zcGVjaWFsaXN0cy5ydyIsImtleWxpbmUuY2xpZW50cy5ydyIsIndhcmVob3VzZS5pdGVtcy5ydyJdfQ.DUBiaVbi03wf-0LxmvFNpDMMPZcWqEPmpjDFN3yPep4-g-J2B0mueRQlLcoIM-wE3_JZ9wRHkg5TFzSYFMHdTWYjg-C_vdQ_VKvdiw--5dQp_dehErMsW99mTvKrNz9Pys4ClLyByeUX8tSShjB4X3FfIpsN14KS8KkMVrqdYjcfk200Y-7i-8LTpgiqOJqmpoCozOeeV3gMNmScY4bNHBgxYotyIZkwrerqumzgsjiIyFRDc2dJii7JWVgcQeKBj4N80HNfUXC-UZcIW-zjDP6h_bsr5EChhxYyc1sPIcrTgvqheWuNnev6DSjV8WPNMQTcpGe2RXhcKzJsGB18QQ",
                    "memberships": [
                      {
                        "id": "6c199058-3835-46ff-996d-227c9dd4ede4",
                        "roles": [
                          "owner",
                          "owner"
                        ],
                        "created_at": "2021-01-21T14:02:53.596Z",
                        "updated_at": "2021-01-21T14:02:56.987Z",
                        "person": {
                          "id": "7a0dc682-5829-458c-a7c3-2222a406fb26",
                          "first_name": "Jane",
                          "name": "Doe",
                          "full_name": "Jane Doe",
                          "email": "rainbow_jane@example.com",
                          "pronoun": null,
                          "locale": "de",
                          "country_code": "DE",
                          "currency": "EUR",
                          "unit_system": "metric",
                          "connected": false,
                          "test_account_owner_id": null,
                          "created_at": "2021-01-21T14:02:53.562Z",
                          "updated_at": "2021-01-21T14:02:53.587Z",
                          "time_zone": "Etc/UTC",
                          "email_confirmed": true,
                          "two_factor_authentication_enabled": false,
                          "avatar_url": "http://www.example.com/rails/active_storage/blobs/redirect/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaWsxWm1Rd05HUTFOeTAzWmpKakxUUXlNREl0T0RCbVl5MDVNMlF4TVdFNFlUWmhaR1FHT2daRlZBPT0iLCJleHAiOm51bGwsInB1ciI6ImJsb2JfaWQifX0=--5d8772640588b504fa7cd0397754ef25b4d9f553/1074-300x300.jpg",
                          "subscription": null
                        }
                      },
                      {
                        "id": "4a0dc346-bfd0-4484-a1d7-5f4d1a48b00a",
                        "roles": [
                          "admin"
                        ],
                        "created_at": "2021-01-21T14:02:53.611Z",
                        "updated_at": "2021-01-21T14:02:53.611Z",
                        "person": {
                          "id": "ae07dde9-d086-406a-90ea-212bbc881d54",
                          "first_name": "Bob",
                          "name": "Wolt",
                          "full_name": "Bob Wolt",
                          "email": "rainbow_bob@example.com",
                          "pronoun": null,
                          "locale": "de",
                          "country_code": "DE",
                          "currency": "EUR",
                          "unit_system": "metric",
                          "connected": false,
                          "test_account_owner_id": null,
                          "created_at": "2021-01-21T14:02:53.603Z",
                          "updated_at": "2021-01-21T14:02:53.608Z",
                          "time_zone": "Etc/UTC",
                          "email_confirmed": true,
                          "two_factor_authentication_enabled": false,
                          "avatar_url": null,
                          "subscription": null
                        }
                      }
                    ],
                    "sites": [
                      {
                        "id": "215bae1d-099e-4a1e-984f-210cf7c7b1e8",
                        "name": "Headquarter",
                        "headquarter": true,
                        "created_at": "2021-01-21T14:02:53.828Z",
                        "updated_at": "2021-01-21T14:02:53.828Z",
                        "address": {
                          "id": "ab888f4f-f681-42eb-bb99-64a4f481dfb4",
                          "addressee": "Rainbow GmbH",
                          "street": "Travestraße",
                          "number": "3",
                          "zip_code": "10247",
                          "town": "Berlin",
                          "country_code": "DE",
                          "state": "Berlin",
                          "addition": null,
                          "location": [
                            52.5115115,
                            13.4699126
                          ],
                          "created_at": "2021-01-21T14:02:53.831Z",
                          "updated_at": "2021-01-21T14:02:53.831Z"
                        }
                      },
                      {
                        "id": "bfb936dc-36e7-49f1-b69a-d2d70ffc5e76",
                        "name": "Second Site",
                        "headquarter": false,
                        "created_at": "2021-01-21T14:02:54.003Z",
                        "updated_at": "2021-01-21T14:02:54.003Z",
                        "address": {
                          "id": "b321fea9-a4a6-438a-b467-f376c346a6fa",
                          "addressee": "Rainbow GmbH",
                          "street": "Voigtstraße",
                          "number": "38",
                          "zip_code": "10247",
                          "town": "Berlin",
                          "country_code": "DE",
                          "state": "Berlin",
                          "addition": null,
                          "location": [
                            52.5160646,
                            13.4680829
                          ],
                          "created_at": "2021-01-21T14:02:54.004Z",
                          "updated_at": "2021-01-21T14:02:54.004Z"
                        }
                      }
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      },
      "post": {
        "tags": [
          "Test Accounts"
        ],
        "description": "(SANDBOX ONLY) Create test account for the vendor of the authorized app. Might delete existing test organization with the same name",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "test_account"
                ],
                "properties": {
                  "test_account": {
                    "required": [
                      "name",
                      "country_code",
                      "member_attributes",
                      "kinds",
                      "sections"
                    ],
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "Bounty Soap Inc."
                      },
                      "country_code": {
                        "type": "string",
                        "example": "DE",
                        "nullable": true
                      },
                      "logo_url": {
                        "type": "string",
                        "format": "uri",
                        "description": "Max 200KB"
                      },
                      "kinds": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                          "type": "string",
                          "example": "printer",
                          "enum": [
                            "printer",
                            "supplier",
                            "machine_vendor",
                            "brand_owner",
                            "designer",
                            "publisher",
                            "software_developer",
                            "other"
                          ]
                        }
                      },
                      "sections": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "Only the sections that are also part of kinds are taken into account.",
                        "properties": {
                          "printer": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "softcover_books",
                                "hardcover_books",
                                "labels",
                                "packagings",
                                "business_cards",
                                "flyers",
                                "leaflets",
                                "brochures",
                                "large_formats"
                              ]
                            }
                          },
                          "supplier": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "sheet_substrates",
                                "web_substrates",
                                "ink",
                                "plates",
                                "foils",
                                "other"
                              ]
                            }
                          },
                          "machine_vendor": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "sheet_fed_offset_presses",
                                "web_fed_offset_presses",
                                "sheet_fed_digital_presses",
                                "web_fed_digital_presses",
                                "cutters",
                                "binders",
                                "saddle_stitchers"
                              ]
                            }
                          },
                          "designer": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "self_employed",
                                "studio",
                                "inhouse",
                                "other"
                              ]
                            }
                          },
                          "publisher": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "softcover_books",
                                "hardcover_books",
                                "brochures"
                              ]
                            }
                          },
                          "software_developer": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "imposing",
                                "ganging",
                                "mis",
                                "reporting",
                                "web_to_print",
                                "logistics",
                                "warehousing",
                                "machine_integration",
                                "preflight",
                                "workflow",
                                "billing",
                                "accounting",
                                "production_planning",
                                "production_scheduling",
                                "production_capacity_planning"
                              ]
                            }
                          }
                        }
                      },
                      "connection_attributes": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "procurement_consumer",
                          "description": "Technical unique name of the app"
                        }
                      },
                      "subscription_attributes": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "app_name",
                            "plan_name"
                          ],
                          "properties": {
                            "app_name": {
                              "type": "string",
                              "example": "keyline_classic",
                              "description": "Technical unique name of the app"
                            },
                            "plan_name": {
                              "type": "string",
                              "example": "basic",
                              "description": "Technical name of the plan"
                            }
                          }
                        }
                      },
                      "member_attributes": {
                        "type": "array",
                        "description": "You need to provide exactly one member with the role owner",
                        "items": {
                          "required": [
                            "email",
                            "password",
                            "country_code",
                            "name",
                            "roles"
                          ],
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "email": {
                              "type": "string",
                              "format": "email",
                              "example": "jane.doe@gmail.com"
                            },
                            "password": {
                              "type": "string"
                            },
                            "country_code": {
                              "type": "string",
                              "example": "DE",
                              "nullable": true
                            },
                            "locale": {
                              "type": "string",
                              "example": "de",
                              "enum": [
                                "en",
                                "en-US",
                                "de"
                              ]
                            },
                            "first_name": {
                              "type": "string",
                              "example": "Jane"
                            },
                            "name": {
                              "type": "string",
                              "example": "Doe"
                            },
                            "avatar_url": {
                              "type": "string",
                              "format": "uri",
                              "description": "Max 200KB"
                            },
                            "roles": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "example": [
                                "owner"
                              ]
                            }
                          }
                        }
                      },
                      "site_attributes": {
                        "type": "array",
                        "description": "You need to provide exactly one headquarter",
                        "items": {
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "name",
                            "address_attributes"
                          ],
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Berlin North"
                            },
                            "headquarter": {
                              "type": "boolean",
                              "description": "You can only create one headquarter"
                            },
                            "address_attributes": {
                              "type": "object",
                              "additionalProperties": false,
                              "required": [
                                "addressee",
                                "text"
                              ],
                              "properties": {
                                "addressee": {
                                  "type": "string",
                                  "example": "Zaikio GmbH"
                                },
                                "text": {
                                  "type": "string",
                                  "description": "Address that will be parsed by Google",
                                  "example": "Emmerich-Josef-Straße 1A, 55116 Mainz"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "required": [
                        "id",
                        "name",
                        "created_at",
                        "updated_at",
                        "slug",
                        "logo_url",
                        "connected",
                        "kinds",
                        "sections",
                        "country_code",
                        "currency",
                        "subscription",
                        "brand_color",
                        "test_account_owner_id"
                      ],
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                        },
                        "slug": {
                          "type": "string",
                          "example": "bounty-soap-inc"
                        },
                        "name": {
                          "type": "string",
                          "example": "Bounty Soap Inc."
                        },
                        "logo_url": {
                          "type": "string",
                          "format": "uri",
                          "nullable": true
                        },
                        "connected": {
                          "type": "boolean",
                          "description": "True if organization is connected to current app (display in aud)"
                        },
                        "subscription": {
                          "anyOf": [
                            {
                              "type": "object",
                              "additionalProperties": false,
                              "required": [
                                "status",
                                "plan"
                              ],
                              "properties": {
                                "status": {
                                  "type": "string",
                                  "enum": [
                                    "provisioning",
                                    "active",
                                    "unpaid"
                                  ],
                                  "description": "If a subscription was unpaid, you might disable the features available for this subscription. You may want to give the subscriber a little more time. Therefore you can also use `last_paid_at`. A subscription might also change from unpaid to active again.\n"
                                },
                                "plan": {
                                  "type": "string",
                                  "description": "The name of a plan or `enterprise` if this subscription is linked to an enterprise plan"
                                }
                              }
                            },
                            {
                              "nullable": true
                            }
                          ]
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "country_code": {
                          "type": "string",
                          "example": "DE",
                          "nullable": true
                        },
                        "kinds": {
                          "type": "array",
                          "minItems": 1,
                          "items": {
                            "type": "string",
                            "example": "printer",
                            "enum": [
                              "printer",
                              "supplier",
                              "machine_vendor",
                              "brand_owner",
                              "designer",
                              "publisher",
                              "software_developer",
                              "other"
                            ]
                          }
                        },
                        "sections": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "Only the sections that are also part of kinds are taken into account.",
                          "properties": {
                            "printer": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "softcover_books",
                                  "hardcover_books",
                                  "labels",
                                  "packagings",
                                  "business_cards",
                                  "flyers",
                                  "leaflets",
                                  "brochures",
                                  "large_formats"
                                ]
                              }
                            },
                            "supplier": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "sheet_substrates",
                                  "web_substrates",
                                  "ink",
                                  "plates",
                                  "foils",
                                  "other"
                                ]
                              }
                            },
                            "machine_vendor": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "sheet_fed_offset_presses",
                                  "web_fed_offset_presses",
                                  "sheet_fed_digital_presses",
                                  "web_fed_digital_presses",
                                  "cutters",
                                  "binders",
                                  "saddle_stitchers"
                                ]
                              }
                            },
                            "designer": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "self_employed",
                                  "studio",
                                  "inhouse",
                                  "other"
                                ]
                              }
                            },
                            "publisher": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "softcover_books",
                                  "hardcover_books",
                                  "brochures"
                                ]
                              }
                            },
                            "software_developer": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "imposing",
                                  "ganging",
                                  "mis",
                                  "reporting",
                                  "web_to_print",
                                  "logistics",
                                  "warehousing",
                                  "machine_integration",
                                  "preflight",
                                  "workflow",
                                  "billing",
                                  "accounting",
                                  "production_planning",
                                  "production_scheduling",
                                  "production_capacity_planning"
                                ]
                              }
                            }
                          }
                        },
                        "kind": {
                          "type": "string",
                          "example": "printer",
                          "description": "DEPRECATED please use kinds since organizations can have multiple kinds",
                          "enum": [
                            "printer",
                            "supplier",
                            "machine_vendor",
                            "brand_owner",
                            "designer",
                            "publisher",
                            "software_developer",
                            "other"
                          ]
                        },
                        "currency": {
                          "type": "string",
                          "example": "EUR",
                          "nullable": true,
                          "description": "Currency in [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format"
                        },
                        "brand_color": {
                          "type": "string",
                          "pattern": "^\\A#?(?:[0-9a-fA-F]{3}){1,2}\\z$",
                          "example": "#000000",
                          "nullable": true,
                          "description": "Brand color in hex color format"
                        },
                        "test_account_owner_id": {
                          "type": "string",
                          "nullable": true,
                          "example": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                          "description": "If this is a test account, the organization id of the owner of this test organization is returned. If this is not a test account this will be null. Test accounts are only available in the sandbox environment.\n"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "memberships",
                        "sites",
                        "private_access_token"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "private_access_token": {
                          "type": "string",
                          "description": "Private access token with all available scopes, can be null if revoked",
                          "nullable": true
                        },
                        "memberships": {
                          "type": "array",
                          "items": {
                            "allOf": [
                              {
                                "required": [
                                  "id",
                                  "created_at",
                                  "updated_at",
                                  "roles"
                                ],
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                                  },
                                  "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "updated_at": {
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "roles": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "example": [
                                      "member"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "person"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                  "person": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "properties": {
                                          "first_name": {
                                            "type": "string",
                                            "example": "Lisa"
                                          },
                                          "name": {
                                            "type": "string",
                                            "example": "Simpson"
                                          },
                                          "pronoun": {
                                            "type": "string",
                                            "example": "She/Her",
                                            "nullable": true,
                                            "enum": [
                                              "She/Her",
                                              "He/Him"
                                            ]
                                          },
                                          "locale": {
                                            "type": "string",
                                            "example": "de",
                                            "enum": [
                                              "en",
                                              "en-US",
                                              "de"
                                            ]
                                          },
                                          "unit_system": {
                                            "type": "string",
                                            "example": "metric",
                                            "enum": [
                                              "metric",
                                              "imperial"
                                            ]
                                          },
                                          "country_code": {
                                            "type": "string",
                                            "example": "DE",
                                            "nullable": true
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "required": [
                                          "id",
                                          "first_name",
                                          "name",
                                          "full_name",
                                          "email",
                                          "email_confirmed",
                                          "locale",
                                          "time_zone",
                                          "avatar_url",
                                          "connected",
                                          "created_at",
                                          "updated_at",
                                          "country_code",
                                          "currency",
                                          "unit_system",
                                          "two_factor_authentication_enabled",
                                          "subscription",
                                          "test_account_owner_id"
                                        ],
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid",
                                            "example": "29b276b7-c0fa-4514-a5b1-c0fb4ee40fa7"
                                          },
                                          "full_name": {
                                            "type": "string",
                                            "example": "Jane Doe"
                                          },
                                          "email": {
                                            "type": "string",
                                            "format": "email",
                                            "example": "jane.doe@gmail.com"
                                          },
                                          "email_confirmed": {
                                            "type": "boolean",
                                            "example": true,
                                            "description": "If the e-mail is not confirmed, please do not send any e-mails"
                                          },
                                          "currency": {
                                            "type": "string",
                                            "example": "EUR",
                                            "nullable": true,
                                            "description": "Currency in [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format"
                                          },
                                          "time_zone": {
                                            "type": "string",
                                            "example": "UTC",
                                            "description": "IANA Timezone: [List of time zones](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)"
                                          },
                                          "avatar_url": {
                                            "type": "string",
                                            "nullable": true,
                                            "example": "https://directory.heidelberg.cloud/rails/active_storage/blobs/avatar.jpg"
                                          },
                                          "connected": {
                                            "type": "boolean",
                                            "description": "True if person is connected to current app (display in aud)"
                                          },
                                          "subscription": {
                                            "anyOf": [
                                              {
                                                "type": "object",
                                                "additionalProperties": false,
                                                "required": [
                                                  "status",
                                                  "plan"
                                                ],
                                                "properties": {
                                                  "status": {
                                                    "type": "string",
                                                    "enum": [
                                                      "provisioning",
                                                      "active",
                                                      "unpaid"
                                                    ],
                                                    "description": "If a subscription was unpaid, you might disable the features available for this subscription. You may want to give the subscriber a little more time. Therefore you can also use `last_paid_at`. A subscription might also change from unpaid to active again.\n"
                                                  },
                                                  "plan": {
                                                    "type": "string",
                                                    "description": "The name of a plan or `enterprise` if this subscription is linked to an enterprise plan"
                                                  }
                                                }
                                              },
                                              {
                                                "nullable": true
                                              }
                                            ]
                                          },
                                          "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                          },
                                          "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                          },
                                          "two_factor_authentication_enabled": {
                                            "type": "boolean"
                                          },
                                          "test_account_owner_id": {
                                            "type": "string",
                                            "nullable": true,
                                            "example": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                                            "description": "If this is a test account, the organization id of the owner of this test organization is returned. If this is not a test account this will be null. Test accounts are only available in the sandbox environment.\n"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "sites": {
                          "type": "array",
                          "items": {
                            "required": [
                              "name",
                              "headquarter",
                              "address",
                              "created_at",
                              "updated_at"
                            ],
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "d6308910-f5ae-58c0-aba7-d099947845c6"
                              },
                              "name": {
                                "type": "string"
                              },
                              "headquarter": {
                                "type": "boolean",
                                "description": "If this is the headquarter site (every organization has exactly one)"
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "address": {
                                "type": "object",
                                "nullable": true,
                                "required": [
                                  "id",
                                  "addressee",
                                  "street",
                                  "number",
                                  "zip_code",
                                  "town",
                                  "country_code",
                                  "state",
                                  "addition",
                                  "location",
                                  "created_at",
                                  "updated_at"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "95fd969d-684f-49f6-b17d-5f4e786c11a9"
                                  },
                                  "addressee": {
                                    "type": "string",
                                    "example": "Zaikio GmbH"
                                  },
                                  "street": {
                                    "type": "string",
                                    "example": "Emmerich-Josef-Straße"
                                  },
                                  "number": {
                                    "type": "string",
                                    "example": "1A",
                                    "nullable": true
                                  },
                                  "zip_code": {
                                    "type": "string",
                                    "example": "551166"
                                  },
                                  "town": {
                                    "type": "string",
                                    "example": "Mainz"
                                  },
                                  "country_code": {
                                    "type": "string",
                                    "example": "DE",
                                    "nullable": true
                                  },
                                  "state": {
                                    "type": "string",
                                    "example": "Rheinland-Pfalz"
                                  },
                                  "addition": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "location": {
                                    "type": "array",
                                    "minItems": 2,
                                    "maxItems": 2,
                                    "description": "Latitude and Longitude",
                                    "items": {
                                      "type": "number"
                                    }
                                  },
                                  "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "updated_at": {
                                    "type": "string",
                                    "format": "date-time"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "id": "2bc2d686-0687-4e6f-904d-8a4663ec982f",
                  "name": "Rainbow GmbH",
                  "slug": "rainbow-gmbh",
                  "connected": false,
                  "kinds": [
                    "printer"
                  ],
                  "sections": {
                    "printer": [
                      "hardcover_books",
                      "softcover_books",
                      "brochures"
                    ]
                  },
                  "country_code": "DE",
                  "brand_color": null,
                  "currency": "EUR",
                  "test_account_owner_id": "c453ca95-5850-5d9a-b93e-050334c951af",
                  "created_at": "2021-01-21T14:02:53.256Z",
                  "updated_at": "2021-01-21T14:02:54.746Z",
                  "logo_url": "http://www.example.com/rails/active_storage/blobs/redirect/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaWxrT1RnMVltUmxOQzB5T1RNMExUUTFNVGN0WWpjd1ppMHdaR1kyWTJVMU1XUmxOakFHT2daRlZBPT0iLCJleHAiOm51bGwsInB1ciI6ImJsb2JfaWQifX0=--0734c2d9e5e6bbf494e2b148e776a64dcce9a03f/197-300x300.jpg",
                  "kind": "printer",
                  "subscription": null,
                  "private_access_token": "eyJraWQiOiJhNmE1MzFjMGZhZTVlNWE1MDAzZDI2ZTRhMTIwMmIwNjg2ZDFkNTRjNGZhYTViZDlkZTBjMzdkY2JkY2RkYzdlIiwiYWxnIjoiUlMyNTYifQ.eyJpc3MiOiJaQUkiLCJzdWIiOiJPcmdhbml6YXRpb24vMmJjMmQ2ODYtMDY4Ny00ZTZmLTkwNGQtOGE0NjYzZWM5ODJmIiwiYXVkIjpbIk9yZ2FuaXphdGlvbi8yYmMyZDY4Ni0wNjg3LTRlNmYtOTA0ZC04YTQ2NjNlYzk4MmYiXSwianRpIjoiNTA0NzE2ZmEtN2I5ZC00NDRmLWJhN2ItMzkxMTJlYmZkOTFhIiwibmJmIjoxNjExMjM3Nzc2LCJleHAiOjE2MTYzMzUzNzYsImprdSI6Imh0dHBzOi8vd3d3LmV4YW1wbGUuY29tL2FwaS92MS9qd3RfcHVibGljX2tleXMiLCJzY29wZSI6WyJkaXJlY3RvcnkuYnVzaW5lc3NfcmVsYXRpb25zaGlwcy5ydyIsImRpcmVjdG9yeS5jb25maWRlbnRpYWxfbWFjaGluZV9zcGVjaWZpY2F0aW9ucy5yIiwiZGlyZWN0b3J5LmNvbmZpZGVudGlhbF9zcGVjaWFsaXN0X3NwZWNpZmljYXRpb25zLnIiLCJkaXJlY3RvcnkuY29ubmVjdGlvbnNfYW5kX3N1YnNjcmlwdGlvbnMuciIsImRpcmVjdG9yeS5kZWxlZ2F0aW9ucy5ydyIsImRpcmVjdG9yeS5tYWNoaW5lX3NwZWNpZmljYXRpb25zLnIiLCJkaXJlY3RvcnkubWFjaGluZXMucnciLCJkaXJlY3RvcnkubWFudWZhY3R1cmVkX21hY2hpbmVzLnJ3IiwiZGlyZWN0b3J5Lm9yZ2FuaXphdGlvbi5yIiwiZGlyZWN0b3J5Lm9yZ2FuaXphdGlvbl9tZW1iZXJzLnJ3IiwiZGlyZWN0b3J5LnJlbW92ZV9tYWNoaW5lcy53IiwiZGlyZWN0b3J5LnJlbW92ZV9zb2Z0d2FyZS53IiwiZGlyZWN0b3J5LnJlbW92ZV9zcGVjaWFsaXN0cy53IiwiZGlyZWN0b3J5LnNpdGVzLnJ3IiwiZGlyZWN0b3J5LnNvZnR3YXJlLnJ3IiwiZGlyZWN0b3J5LnNwZWNpYWxpc3Rfc3BlY2lmaWNhdGlvbnMuciIsImRpcmVjdG9yeS5zcGVjaWFsaXN0cy5ydyIsImtleWxpbmUuY2xpZW50cy5ydyIsIndhcmVob3VzZS5pdGVtcy5ydyJdfQ.mz6UxqEluhohvDgEfsJIQTZS9boFEEcKnT7LwYGWwuX2g7SJGo18fVPbmDoKKzqewpJGcKD5REJ317feUO1p2c76j3s5YXpUFyKlche6cmq8rypf0QDVlcrGqQ35oPxkJry2QxaMNyIUjeipaEcERJ52MgBCpgI-vu29MsawygSjcwDnyHfD8GPy67394YhTdFQWonETWU_jRBQfo4vc790LirvbV8eIN5tK1F_mO6L1xXYM6laRzAwidjmEeCgrdn-FvwCjWRGyHtmZ0aLcispwG6XBZxO_By1AtV9c26chHsHEeNfnP2e4TFC1qrwpyi0n9fYwes1AEdHKrktb6w",
                  "memberships": [
                    {
                      "id": "286c1c2a-7658-46cd-b5cd-27f660daf047",
                      "roles": [
                        "owner",
                        "owner"
                      ],
                      "created_at": "2021-01-21T14:02:53.627Z",
                      "updated_at": "2021-01-21T14:02:56.951Z",
                      "person": {
                        "id": "d91495a5-dd0e-416a-8cd1-c267cd4fa522",
                        "first_name": "Jane",
                        "name": "Doe",
                        "full_name": "Jane Doe",
                        "email": "rainbow_jane@example.com",
                        "pronoun": null,
                        "locale": "de",
                        "country_code": "DE",
                        "currency": "EUR",
                        "unit_system": "metric",
                        "connected": false,
                        "test_account_owner_id": null,
                        "created_at": "2021-01-21T14:02:53.596Z",
                        "updated_at": "2021-01-21T14:02:53.617Z",
                        "time_zone": "Etc/UTC",
                        "email_confirmed": true,
                        "two_factor_authentication_enabled": false,
                        "avatar_url": "http://www.example.com/rails/active_storage/blobs/redirect/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaWxpTURSa01UVTFOaTB6TkdabExUUmtaall0WWpSbVpDMWtPREV6WTJGaFpXRTBaV1VHT2daRlZBPT0iLCJleHAiOm51bGwsInB1ciI6ImJsb2JfaWQifX0=--75cee3e4679ca1ae85488875d2a8136657ebd1ff/1074-300x300.jpg",
                        "subscription": null
                      }
                    },
                    {
                      "id": "978ded9b-ea53-4230-9407-55b4f513c7d2",
                      "roles": [
                        "admin"
                      ],
                      "created_at": "2021-01-21T14:02:53.645Z",
                      "updated_at": "2021-01-21T14:02:53.645Z",
                      "person": {
                        "id": "55929f4a-f4eb-4248-ae91-37b1d77b2b1f",
                        "first_name": "Bob",
                        "name": "Wolt",
                        "full_name": "Bob Wolt",
                        "email": "rainbow_bob@example.com",
                        "pronoun": null,
                        "locale": "de",
                        "country_code": "DE",
                        "currency": "EUR",
                        "unit_system": "metric",
                        "connected": false,
                        "test_account_owner_id": null,
                        "created_at": "2021-01-21T14:02:53.635Z",
                        "updated_at": "2021-01-21T14:02:53.643Z",
                        "time_zone": "Etc/UTC",
                        "email_confirmed": true,
                        "two_factor_authentication_enabled": false,
                        "avatar_url": null,
                        "subscription": null
                      }
                    }
                  ],
                  "sites": [
                    {
                      "id": "e286ec3c-6212-4fff-87d6-d9346a8cb99a",
                      "name": "Headquarter",
                      "headquarter": true,
                      "created_at": "2021-01-21T14:02:53.868Z",
                      "updated_at": "2021-01-21T14:02:53.868Z",
                      "address": {
                        "id": "7818b33a-f8c2-4828-959b-7f0e05341a3d",
                        "addressee": "Rainbow GmbH",
                        "street": "Travestraße",
                        "number": "3",
                        "zip_code": "10247",
                        "town": "Berlin",
                        "country_code": "DE",
                        "state": "Berlin",
                        "addition": null,
                        "location": [
                          52.5115115,
                          13.4699126
                        ],
                        "created_at": "2021-01-21T14:02:53.869Z",
                        "updated_at": "2021-01-21T14:02:53.869Z"
                      }
                    },
                    {
                      "id": "7a251ba4-10eb-420a-b563-c82df8ac5f17",
                      "name": "Second Site",
                      "headquarter": false,
                      "created_at": "2021-01-21T14:02:54.104Z",
                      "updated_at": "2021-01-21T14:02:54.104Z",
                      "address": {
                        "id": "80358009-bfc0-41c7-ae1b-f78ccbc8eea4",
                        "addressee": "Rainbow GmbH",
                        "street": "Voigtstraße",
                        "number": "38",
                        "zip_code": "10247",
                        "town": "Berlin",
                        "country_code": "DE",
                        "state": "Berlin",
                        "addition": null,
                        "location": [
                          52.5160646,
                          13.4680829
                        ],
                        "created_at": "2021-01-21T14:02:54.105Z",
                        "updated_at": "2021-01-21T14:02:54.105Z"
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (Validation error)",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/test_accounts/{test_account_id}": {
      "get": {
        "tags": [
          "Test Accounts"
        ],
        "description": "(SANDBOX ONLY) Retrieve specific test organization for the vendor of the authorized app. Use the id of the organization e.g. `52986771-5fc9-4037-ab90-d9257509c1d6`",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "test_account_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "required": [
                        "id",
                        "name",
                        "created_at",
                        "updated_at",
                        "slug",
                        "logo_url",
                        "connected",
                        "kinds",
                        "sections",
                        "country_code",
                        "currency",
                        "subscription",
                        "brand_color",
                        "test_account_owner_id"
                      ],
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "b1475f65-236c-58b8-96e1-e1778b43beb7"
                        },
                        "slug": {
                          "type": "string",
                          "example": "bounty-soap-inc"
                        },
                        "name": {
                          "type": "string",
                          "example": "Bounty Soap Inc."
                        },
                        "logo_url": {
                          "type": "string",
                          "format": "uri",
                          "nullable": true
                        },
                        "connected": {
                          "type": "boolean",
                          "description": "True if organization is connected to current app (display in aud)"
                        },
                        "subscription": {
                          "anyOf": [
                            {
                              "type": "object",
                              "additionalProperties": false,
                              "required": [
                                "status",
                                "plan"
                              ],
                              "properties": {
                                "status": {
                                  "type": "string",
                                  "enum": [
                                    "provisioning",
                                    "active",
                                    "unpaid"
                                  ],
                                  "description": "If a subscription was unpaid, you might disable the features available for this subscription. You may want to give the subscriber a little more time. Therefore you can also use `last_paid_at`. A subscription might also change from unpaid to active again.\n"
                                },
                                "plan": {
                                  "type": "string",
                                  "description": "The name of a plan or `enterprise` if this subscription is linked to an enterprise plan"
                                }
                              }
                            },
                            {
                              "nullable": true
                            }
                          ]
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "country_code": {
                          "type": "string",
                          "example": "DE",
                          "nullable": true
                        },
                        "kinds": {
                          "type": "array",
                          "minItems": 1,
                          "items": {
                            "type": "string",
                            "example": "printer",
                            "enum": [
                              "printer",
                              "supplier",
                              "machine_vendor",
                              "brand_owner",
                              "designer",
                              "publisher",
                              "software_developer",
                              "other"
                            ]
                          }
                        },
                        "sections": {
                          "type": "object",
                          "additionalProperties": false,
                          "description": "Only the sections that are also part of kinds are taken into account.",
                          "properties": {
                            "printer": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "softcover_books",
                                  "hardcover_books",
                                  "labels",
                                  "packagings",
                                  "business_cards",
                                  "flyers",
                                  "leaflets",
                                  "brochures",
                                  "large_formats"
                                ]
                              }
                            },
                            "supplier": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "sheet_substrates",
                                  "web_substrates",
                                  "ink",
                                  "plates",
                                  "foils",
                                  "other"
                                ]
                              }
                            },
                            "machine_vendor": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "sheet_fed_offset_presses",
                                  "web_fed_offset_presses",
                                  "sheet_fed_digital_presses",
                                  "web_fed_digital_presses",
                                  "cutters",
                                  "binders",
                                  "saddle_stitchers"
                                ]
                              }
                            },
                            "designer": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "self_employed",
                                  "studio",
                                  "inhouse",
                                  "other"
                                ]
                              }
                            },
                            "publisher": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "softcover_books",
                                  "hardcover_books",
                                  "brochures"
                                ]
                              }
                            },
                            "software_developer": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "imposing",
                                  "ganging",
                                  "mis",
                                  "reporting",
                                  "web_to_print",
                                  "logistics",
                                  "warehousing",
                                  "machine_integration",
                                  "preflight",
                                  "workflow",
                                  "billing",
                                  "accounting",
                                  "production_planning",
                                  "production_scheduling",
                                  "production_capacity_planning"
                                ]
                              }
                            }
                          }
                        },
                        "kind": {
                          "type": "string",
                          "example": "printer",
                          "description": "DEPRECATED please use kinds since organizations can have multiple kinds",
                          "enum": [
                            "printer",
                            "supplier",
                            "machine_vendor",
                            "brand_owner",
                            "designer",
                            "publisher",
                            "software_developer",
                            "other"
                          ]
                        },
                        "currency": {
                          "type": "string",
                          "example": "EUR",
                          "nullable": true,
                          "description": "Currency in [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format"
                        },
                        "brand_color": {
                          "type": "string",
                          "pattern": "^\\A#?(?:[0-9a-fA-F]{3}){1,2}\\z$",
                          "example": "#000000",
                          "nullable": true,
                          "description": "Brand color in hex color format"
                        },
                        "test_account_owner_id": {
                          "type": "string",
                          "nullable": true,
                          "example": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                          "description": "If this is a test account, the organization id of the owner of this test organization is returned. If this is not a test account this will be null. Test accounts are only available in the sandbox environment.\n"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "memberships",
                        "sites",
                        "private_access_token"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "private_access_token": {
                          "type": "string",
                          "description": "Private access token with all available scopes, can be null if revoked",
                          "nullable": true
                        },
                        "memberships": {
                          "type": "array",
                          "items": {
                            "allOf": [
                              {
                                "required": [
                                  "id",
                                  "created_at",
                                  "updated_at",
                                  "roles"
                                ],
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                                  },
                                  "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "updated_at": {
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "roles": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "example": [
                                      "member"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "person"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                  "person": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "properties": {
                                          "first_name": {
                                            "type": "string",
                                            "example": "Lisa"
                                          },
                                          "name": {
                                            "type": "string",
                                            "example": "Simpson"
                                          },
                                          "pronoun": {
                                            "type": "string",
                                            "example": "She/Her",
                                            "nullable": true,
                                            "enum": [
                                              "She/Her",
                                              "He/Him"
                                            ]
                                          },
                                          "locale": {
                                            "type": "string",
                                            "example": "de",
                                            "enum": [
                                              "en",
                                              "en-US",
                                              "de"
                                            ]
                                          },
                                          "unit_system": {
                                            "type": "string",
                                            "example": "metric",
                                            "enum": [
                                              "metric",
                                              "imperial"
                                            ]
                                          },
                                          "country_code": {
                                            "type": "string",
                                            "example": "DE",
                                            "nullable": true
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "required": [
                                          "id",
                                          "first_name",
                                          "name",
                                          "full_name",
                                          "email",
                                          "email_confirmed",
                                          "locale",
                                          "time_zone",
                                          "avatar_url",
                                          "connected",
                                          "created_at",
                                          "updated_at",
                                          "country_code",
                                          "currency",
                                          "unit_system",
                                          "two_factor_authentication_enabled",
                                          "subscription",
                                          "test_account_owner_id"
                                        ],
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid",
                                            "example": "29b276b7-c0fa-4514-a5b1-c0fb4ee40fa7"
                                          },
                                          "full_name": {
                                            "type": "string",
                                            "example": "Jane Doe"
                                          },
                                          "email": {
                                            "type": "string",
                                            "format": "email",
                                            "example": "jane.doe@gmail.com"
                                          },
                                          "email_confirmed": {
                                            "type": "boolean",
                                            "example": true,
                                            "description": "If the e-mail is not confirmed, please do not send any e-mails"
                                          },
                                          "currency": {
                                            "type": "string",
                                            "example": "EUR",
                                            "nullable": true,
                                            "description": "Currency in [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format"
                                          },
                                          "time_zone": {
                                            "type": "string",
                                            "example": "UTC",
                                            "description": "IANA Timezone: [List of time zones](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones)"
                                          },
                                          "avatar_url": {
                                            "type": "string",
                                            "nullable": true,
                                            "example": "https://directory.heidelberg.cloud/rails/active_storage/blobs/avatar.jpg"
                                          },
                                          "connected": {
                                            "type": "boolean",
                                            "description": "True if person is connected to current app (display in aud)"
                                          },
                                          "subscription": {
                                            "anyOf": [
                                              {
                                                "type": "object",
                                                "additionalProperties": false,
                                                "required": [
                                                  "status",
                                                  "plan"
                                                ],
                                                "properties": {
                                                  "status": {
                                                    "type": "string",
                                                    "enum": [
                                                      "provisioning",
                                                      "active",
                                                      "unpaid"
                                                    ],
                                                    "description": "If a subscription was unpaid, you might disable the features available for this subscription. You may want to give the subscriber a little more time. Therefore you can also use `last_paid_at`. A subscription might also change from unpaid to active again.\n"
                                                  },
                                                  "plan": {
                                                    "type": "string",
                                                    "description": "The name of a plan or `enterprise` if this subscription is linked to an enterprise plan"
                                                  }
                                                }
                                              },
                                              {
                                                "nullable": true
                                              }
                                            ]
                                          },
                                          "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                          },
                                          "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                          },
                                          "two_factor_authentication_enabled": {
                                            "type": "boolean"
                                          },
                                          "test_account_owner_id": {
                                            "type": "string",
                                            "nullable": true,
                                            "example": "b1475f65-236c-58b8-96e1-e1778b43beb7",
                                            "description": "If this is a test account, the organization id of the owner of this test organization is returned. If this is not a test account this will be null. Test accounts are only available in the sandbox environment.\n"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "sites": {
                          "type": "array",
                          "items": {
                            "required": [
                              "name",
                              "headquarter",
                              "address",
                              "created_at",
                              "updated_at"
                            ],
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "d6308910-f5ae-58c0-aba7-d099947845c6"
                              },
                              "name": {
                                "type": "string"
                              },
                              "headquarter": {
                                "type": "boolean",
                                "description": "If this is the headquarter site (every organization has exactly one)"
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "address": {
                                "type": "object",
                                "nullable": true,
                                "required": [
                                  "id",
                                  "addressee",
                                  "street",
                                  "number",
                                  "zip_code",
                                  "town",
                                  "country_code",
                                  "state",
                                  "addition",
                                  "location",
                                  "created_at",
                                  "updated_at"
                                ],
                                "additionalProperties": false,
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "95fd969d-684f-49f6-b17d-5f4e786c11a9"
                                  },
                                  "addressee": {
                                    "type": "string",
                                    "example": "Zaikio GmbH"
                                  },
                                  "street": {
                                    "type": "string",
                                    "example": "Emmerich-Josef-Straße"
                                  },
                                  "number": {
                                    "type": "string",
                                    "example": "1A",
                                    "nullable": true
                                  },
                                  "zip_code": {
                                    "type": "string",
                                    "example": "551166"
                                  },
                                  "town": {
                                    "type": "string",
                                    "example": "Mainz"
                                  },
                                  "country_code": {
                                    "type": "string",
                                    "example": "DE",
                                    "nullable": true
                                  },
                                  "state": {
                                    "type": "string",
                                    "example": "Rheinland-Pfalz"
                                  },
                                  "addition": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "location": {
                                    "type": "array",
                                    "minItems": 2,
                                    "maxItems": 2,
                                    "description": "Latitude and Longitude",
                                    "items": {
                                      "type": "number"
                                    }
                                  },
                                  "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "updated_at": {
                                    "type": "string",
                                    "format": "date-time"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "example": {
                  "id": "73ca980f-30d6-4950-886f-a7f4b9c27a3a",
                  "name": "Rainbow GmbH",
                  "slug": "rainbow-gmbh",
                  "connected": false,
                  "kinds": [
                    "printer"
                  ],
                  "sections": {
                    "printer": [
                      "hardcover_books",
                      "softcover_books",
                      "brochures"
                    ]
                  },
                  "country_code": "DE",
                  "brand_color": null,
                  "currency": "EUR",
                  "test_account_owner_id": "c453ca95-5850-5d9a-b93e-050334c951af",
                  "created_at": "2021-01-21T14:02:53.269Z",
                  "updated_at": "2021-01-21T14:02:54.740Z",
                  "logo_url": "http://www.example.com/rails/active_storage/blobs/redirect/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaWxqTkdRd1lUbG1OeTAzWkRJMExUUmxZalV0WVRnelppMWpaRFV6TVdaa01ETTRZamNHT2daRlZBPT0iLCJleHAiOm51bGwsInB1ciI6ImJsb2JfaWQifX0=--77956fff8291633ce1cb4cd1c9b1cca3f7675cfe/197-300x300.jpg",
                  "kind": "printer",
                  "subscription": null,
                  "private_access_token": "eyJraWQiOiJhNmE1MzFjMGZhZTVlNWE1MDAzZDI2ZTRhMTIwMmIwNjg2ZDFkNTRjNGZhYTViZDlkZTBjMzdkY2JkY2RkYzdlIiwiYWxnIjoiUlMyNTYifQ.eyJpc3MiOiJaQUkiLCJzdWIiOiJPcmdhbml6YXRpb24vNzNjYTk4MGYtMzBkNi00OTUwLTg4NmYtYTdmNGI5YzI3YTNhIiwiYXVkIjpbIk9yZ2FuaXphdGlvbi83M2NhOTgwZi0zMGQ2LTQ5NTAtODg2Zi1hN2Y0YjljMjdhM2EiXSwianRpIjoiNzA1YzcxN2YtODA5My00ZWFhLTg3YWYtOGIyOTUyNDdmOTBkIiwibmJmIjoxNjExMjM3Nzc3LCJleHAiOjE2MTYzMzUzNzYsImprdSI6Imh0dHBzOi8vd3d3LmV4YW1wbGUuY29tL2FwaS92MS9qd3RfcHVibGljX2tleXMiLCJzY29wZSI6WyJkaXJlY3RvcnkuYnVzaW5lc3NfcmVsYXRpb25zaGlwcy5ydyIsImRpcmVjdG9yeS5jb25maWRlbnRpYWxfbWFjaGluZV9zcGVjaWZpY2F0aW9ucy5yIiwiZGlyZWN0b3J5LmNvbmZpZGVudGlhbF9zcGVjaWFsaXN0X3NwZWNpZmljYXRpb25zLnIiLCJkaXJlY3RvcnkuY29ubmVjdGlvbnNfYW5kX3N1YnNjcmlwdGlvbnMuciIsImRpcmVjdG9yeS5kZWxlZ2F0aW9ucy5ydyIsImRpcmVjdG9yeS5tYWNoaW5lX3NwZWNpZmljYXRpb25zLnIiLCJkaXJlY3RvcnkubWFjaGluZXMucnciLCJkaXJlY3RvcnkubWFudWZhY3R1cmVkX21hY2hpbmVzLnJ3IiwiZGlyZWN0b3J5Lm9yZ2FuaXphdGlvbi5yIiwiZGlyZWN0b3J5Lm9yZ2FuaXphdGlvbl9tZW1iZXJzLnJ3IiwiZGlyZWN0b3J5LnJlbW92ZV9tYWNoaW5lcy53IiwiZGlyZWN0b3J5LnJlbW92ZV9zb2Z0d2FyZS53IiwiZGlyZWN0b3J5LnJlbW92ZV9zcGVjaWFsaXN0cy53IiwiZGlyZWN0b3J5LnNpdGVzLnJ3IiwiZGlyZWN0b3J5LnNvZnR3YXJlLnJ3IiwiZGlyZWN0b3J5LnNwZWNpYWxpc3Rfc3BlY2lmaWNhdGlvbnMuciIsImRpcmVjdG9yeS5zcGVjaWFsaXN0cy5ydyIsImtleWxpbmUuY2xpZW50cy5ydyIsIndhcmVob3VzZS5pdGVtcy5ydyJdfQ.lG9um8U5NIiOdirsJyEba8rQCRJIMXB8q8CQ19x5tIOJa7lu-fT1ayhuAzEjNW3Tgttuo8dAUE_3Emrkri81phYDWj1q_Fu7ufTE--gmEdW-U25aazTc9h4DOi1_-x4S_PCtP1JEWu7aMe-fRKexhHrEJUQS8nU8nxZAx4hpk3xTlYoXEOQGo3P5rMkhaiwxyQ_9b1TYe9dQnLwzQn7BUnIXGpd--aVF92ZpO7sH-InuRTop-5PPeplBGaSFAk9Xql7fKlZWcgHM9YKgKovCWtwpHvSJkuxjm97Wm3YDHGmSLPYcTH1M1btipLApgCCkIeK4ybhnR6TxWsz5TvA50Q",
                  "memberships": [
                    {
                      "id": "8bd7a4e6-7170-4dbe-9d1b-85934ba1f950",
                      "roles": [
                        "owner",
                        "owner"
                      ],
                      "created_at": "2021-01-21T14:02:53.673Z",
                      "updated_at": "2021-01-21T14:02:57.118Z",
                      "person": {
                        "id": "b685c47e-1039-4cd3-bfb0-7ecec9e68c75",
                        "first_name": "Jane",
                        "name": "Doe",
                        "full_name": "Jane Doe",
                        "email": "rainbow_jane@example.com",
                        "pronoun": null,
                        "locale": "de",
                        "country_code": "DE",
                        "currency": "EUR",
                        "unit_system": "metric",
                        "connected": false,
                        "test_account_owner_id": null,
                        "created_at": "2021-01-21T14:02:53.641Z",
                        "updated_at": "2021-01-21T14:02:53.664Z",
                        "time_zone": "Etc/UTC",
                        "email_confirmed": true,
                        "two_factor_authentication_enabled": false,
                        "avatar_url": "http://www.example.com/rails/active_storage/blobs/redirect/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaEpJaWsyTmpWaE9UTmxPQzFqTURGaExUUTVZbVl0WW1ReFlTMDVOVFUwT1Rjek9XTmhZalVHT2daRlZBPT0iLCJleHAiOm51bGwsInB1ciI6ImJsb2JfaWQifX0=--43e10e695c6e26ca77c9ac08cdade89b5e5ed74a/1074-300x300.jpg",
                        "subscription": null
                      }
                    },
                    {
                      "id": "4cfec3c4-8a96-4195-81f4-11b65d623332",
                      "roles": [
                        "admin"
                      ],
                      "created_at": "2021-01-21T14:02:53.687Z",
                      "updated_at": "2021-01-21T14:02:53.687Z",
                      "person": {
                        "id": "ac224650-871b-4724-959d-368efabc6345",
                        "first_name": "Bob",
                        "name": "Wolt",
                        "full_name": "Bob Wolt",
                        "email": "rainbow_bob@example.com",
                        "pronoun": null,
                        "locale": "de",
                        "country_code": "DE",
                        "currency": "EUR",
                        "unit_system": "metric",
                        "connected": false,
                        "test_account_owner_id": null,
                        "created_at": "2021-01-21T14:02:53.679Z",
                        "updated_at": "2021-01-21T14:02:53.684Z",
                        "time_zone": "Etc/UTC",
                        "email_confirmed": true,
                        "two_factor_authentication_enabled": false,
                        "avatar_url": null,
                        "subscription": null
                      }
                    }
                  ],
                  "sites": [
                    {
                      "id": "2f975a0f-1710-4f39-b7f9-6a532ebc3eff",
                      "name": "Headquarter",
                      "headquarter": true,
                      "created_at": "2021-01-21T14:02:53.889Z",
                      "updated_at": "2021-01-21T14:02:53.889Z",
                      "address": {
                        "id": "fde92ab3-6d8e-4225-9f53-050459e23977",
                        "addressee": "Rainbow GmbH",
                        "street": "Travestraße",
                        "number": "3",
                        "zip_code": "10247",
                        "town": "Berlin",
                        "country_code": "DE",
                        "state": "Berlin",
                        "addition": null,
                        "location": [
                          52.5115115,
                          13.4699126
                        ],
                        "created_at": "2021-01-21T14:02:53.891Z",
                        "updated_at": "2021-01-21T14:02:53.891Z"
                      }
                    },
                    {
                      "id": "5c9a40ec-7166-4367-82f0-7d299740d8f9",
                      "name": "Second Site",
                      "headquarter": false,
                      "created_at": "2021-01-21T14:02:54.105Z",
                      "updated_at": "2021-01-21T14:02:54.105Z",
                      "address": {
                        "id": "c0cb1169-d322-4716-ba85-f91b998d042a",
                        "addressee": "Rainbow GmbH",
                        "street": "Voigtstraße",
                        "number": "38",
                        "zip_code": "10247",
                        "town": "Berlin",
                        "country_code": "DE",
                        "state": "Berlin",
                        "addition": null,
                        "location": [
                          52.5160646,
                          13.4680829
                        ],
                        "created_at": "2021-01-21T14:02:54.106Z",
                        "updated_at": "2021-01-21T14:02:54.106Z"
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      },
      "delete": {
        "tags": [
          "Test Accounts"
        ],
        "description": "(SANDBOX ONLY) Delete a test organization of the vendor of the authorized app. Use the id of the organization e.g. `52986771-5fc9-4037-ab90-d9257509c1d6`",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "test_account_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/app": {
      "get": {
        "tags": [
          "App"
        ],
        "description": "Show app configuration (requires HTTP Basic Auth).",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "configuration"
                  ],
                  "properties": {
                    "configuration": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "category",
                        "oauth_redirect_urls"
                      ],
                      "properties": {
                        "entry_point_url": {
                          "type": "string",
                          "nullable": true
                        },
                        "webhook_url": {
                          "type": "string",
                          "nullable": true
                        },
                        "category": {
                          "type": "string",
                          "enum": [
                            "pdf-manipulation",
                            "machine-integration",
                            "iot",
                            "web2print",
                            "warehouse",
                            "logistics",
                            "calculation",
                            "production",
                            "statistics",
                            "sales",
                            "customer-relations",
                            "color-management",
                            "reporting",
                            "infrastructure",
                            "other"
                          ]
                        },
                        "oauth_redirect_urls": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "uri"
                          }
                        },
                        "translations": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                              "title"
                            ],
                            "properties": {
                              "locale": {
                                "type": "string",
                                "example": "de",
                                "enum": [
                                  "en",
                                  "en-US",
                                  "de"
                                ]
                              },
                              "title": {
                                "type": "string"
                              },
                              "summary": {
                                "type": "string",
                                "nullable": true
                              },
                              "description": {
                                "type": "string",
                                "nullable": true
                              }
                            }
                          }
                        },
                        "desired_oauth_scopes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "subscribed_events": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "oauth_scopes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                              "name",
                              "kind"
                            ],
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "kind": {
                                "type": "string",
                                "enum": [
                                  "read_write",
                                  "read_only",
                                  "write_only"
                                ]
                              },
                              "translations": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "required": [
                                    "title"
                                  ],
                                  "properties": {
                                    "locale": {
                                      "type": "string",
                                      "example": "de",
                                      "enum": [
                                        "en",
                                        "en-US",
                                        "de"
                                      ]
                                    },
                                    "title": {
                                      "type": "string"
                                    },
                                    "description": {
                                      "type": "string",
                                      "nullable": true
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "events": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "bearer_kind": {
                                "type": "string",
                                "enum": [
                                  "all",
                                  "Person",
                                  "Organization"
                                ]
                              },
                              "example": {
                                "type": "string",
                                "nullable": true
                              },
                              "translations": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "required": [
                                    "title"
                                  ],
                                  "properties": {
                                    "locale": {
                                      "type": "string",
                                      "example": "de",
                                      "enum": [
                                        "en",
                                        "en-US",
                                        "de"
                                      ]
                                    },
                                    "title": {
                                      "type": "string"
                                    },
                                    "description": {
                                      "type": "string",
                                      "nullable": true
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "configuration": {
                    "entry_point_url": "http://keyline.test",
                    "webhook_url": "http://localhost:8080/webhook",
                    "category": "logistics",
                    "oauth_redirect_urls": [
                      "https://example.com/oauth/accept"
                    ],
                    "translations": [
                      {
                        "locale": "en",
                        "title": "Keyline",
                        "summary": null,
                        "description": null
                      }
                    ],
                    "desired_oauth_scopes": [
                      "accounting.invoice_canceled.w",
                      "directory.delegations.rw",
                      "directory.machines.r",
                      "directory.machines.rw",
                      "directory.organization.r",
                      "directory.organization_members.r",
                      "directory.person.r",
                      "mission_control.production_flow.r",
                      "warehouse.items.r",
                      "warehouse.items.rw"
                    ],
                    "subscribed_events": [
                      "accounting.invoice_billed",
                      "directory.revoked_access_token",
                      "keyline.production_started",
                      "warehouse.item_moved"
                    ],
                    "oauth_scopes": [
                      {
                        "name": "clients",
                        "kind": "read_only",
                        "translations": [
                          {
                            "locale": "en",
                            "title": "Read keyline clients",
                            "description": "Allows read only access to all keyline Clients"
                          }
                        ]
                      },
                      {
                        "name": "clients",
                        "kind": "read_write",
                        "translations": [
                          {
                            "locale": "en",
                            "title": "Write and read keyline clients",
                            "description": "Allows write and read access to all keyline Clients"
                          }
                        ]
                      },
                      {
                        "name": "clients",
                        "kind": "write_only",
                        "translations": [
                          {
                            "locale": "en",
                            "title": "Write keyline clients",
                            "description": "Allows write access to all keyline Clients"
                          }
                        ]
                      },
                      {
                        "name": "person",
                        "kind": "read_only",
                        "translations": [
                          {
                            "locale": "en",
                            "title": "Only for persons",
                            "description": null
                          }
                        ]
                      }
                    ],
                    "events": [
                      {
                        "name": "person_banned",
                        "bearer_kind": "Person",
                        "example": null,
                        "translations": [
                          {
                            "locale": "en",
                            "title": "Person banned",
                            "description": null
                          }
                        ]
                      },
                      {
                        "name": "production_finished",
                        "bearer_kind": "Organization",
                        "example": null,
                        "translations": [
                          {
                            "locale": "en",
                            "title": "Production finished",
                            "description": "Production finished event"
                          }
                        ]
                      },
                      {
                        "name": "production_started",
                        "bearer_kind": "Organization",
                        "example": null,
                        "translations": [
                          {
                            "locale": "en",
                            "title": "Production started",
                            "description": "Production started event"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      },
      "patch": {
        "tags": [
          "App"
        ],
        "description": "Update app configuration (requires HTTP Basic Auth).",
        "security": [
          {
            "basicAuth": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "app"
                ],
                "properties": {
                  "app": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "configuration"
                    ],
                    "properties": {
                      "configuration": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "category",
                          "oauth_redirect_urls"
                        ],
                        "properties": {
                          "entry_point_url": {
                            "type": "string",
                            "nullable": true
                          },
                          "webhook_url": {
                            "type": "string",
                            "nullable": true
                          },
                          "category": {
                            "type": "string",
                            "enum": [
                              "pdf-manipulation",
                              "machine-integration",
                              "iot",
                              "web2print",
                              "warehouse",
                              "logistics",
                              "calculation",
                              "production",
                              "statistics",
                              "sales",
                              "customer-relations",
                              "color-management",
                              "reporting",
                              "infrastructure",
                              "other"
                            ]
                          },
                          "oauth_redirect_urls": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "format": "uri"
                            }
                          },
                          "translations": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": false,
                              "required": [
                                "title"
                              ],
                              "properties": {
                                "locale": {
                                  "type": "string",
                                  "example": "de",
                                  "enum": [
                                    "en",
                                    "en-US",
                                    "de"
                                  ]
                                },
                                "title": {
                                  "type": "string"
                                },
                                "summary": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "description": {
                                  "type": "string",
                                  "nullable": true
                                }
                              }
                            }
                          },
                          "desired_oauth_scopes": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "subscribed_events": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "oauth_scopes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": false,
                              "required": [
                                "name",
                                "kind"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "kind": {
                                  "type": "string",
                                  "enum": [
                                    "read_write",
                                    "read_only",
                                    "write_only"
                                  ]
                                },
                                "translations": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                      "title"
                                    ],
                                    "properties": {
                                      "locale": {
                                        "type": "string",
                                        "example": "de",
                                        "enum": [
                                          "en",
                                          "en-US",
                                          "de"
                                        ]
                                      },
                                      "title": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string",
                                        "nullable": true
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "events": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": false,
                              "required": [
                                "name"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "bearer_kind": {
                                  "type": "string",
                                  "enum": [
                                    "all",
                                    "Person",
                                    "Organization"
                                  ]
                                },
                                "example": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "translations": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "required": [
                                      "title"
                                    ],
                                    "properties": {
                                      "locale": {
                                        "type": "string",
                                        "example": "de",
                                        "enum": [
                                          "en",
                                          "en-US",
                                          "de"
                                        ]
                                      },
                                      "title": {
                                        "type": "string"
                                      },
                                      "description": {
                                        "type": "string",
                                        "nullable": true
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "configuration"
                  ],
                  "properties": {
                    "configuration": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "category",
                        "oauth_redirect_urls"
                      ],
                      "properties": {
                        "entry_point_url": {
                          "type": "string",
                          "nullable": true
                        },
                        "webhook_url": {
                          "type": "string",
                          "nullable": true
                        },
                        "category": {
                          "type": "string",
                          "enum": [
                            "pdf-manipulation",
                            "machine-integration",
                            "iot",
                            "web2print",
                            "warehouse",
                            "logistics",
                            "calculation",
                            "production",
                            "statistics",
                            "sales",
                            "customer-relations",
                            "color-management",
                            "reporting",
                            "infrastructure",
                            "other"
                          ]
                        },
                        "oauth_redirect_urls": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "uri"
                          }
                        },
                        "translations": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                              "title"
                            ],
                            "properties": {
                              "locale": {
                                "type": "string",
                                "example": "de",
                                "enum": [
                                  "en",
                                  "en-US",
                                  "de"
                                ]
                              },
                              "title": {
                                "type": "string"
                              },
                              "summary": {
                                "type": "string",
                                "nullable": true
                              },
                              "description": {
                                "type": "string",
                                "nullable": true
                              }
                            }
                          }
                        },
                        "desired_oauth_scopes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "subscribed_events": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "oauth_scopes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                              "name",
                              "kind"
                            ],
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "kind": {
                                "type": "string",
                                "enum": [
                                  "read_write",
                                  "read_only",
                                  "write_only"
                                ]
                              },
                              "translations": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "required": [
                                    "title"
                                  ],
                                  "properties": {
                                    "locale": {
                                      "type": "string",
                                      "example": "de",
                                      "enum": [
                                        "en",
                                        "en-US",
                                        "de"
                                      ]
                                    },
                                    "title": {
                                      "type": "string"
                                    },
                                    "description": {
                                      "type": "string",
                                      "nullable": true
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "events": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "bearer_kind": {
                                "type": "string",
                                "enum": [
                                  "all",
                                  "Person",
                                  "Organization"
                                ]
                              },
                              "example": {
                                "type": "string",
                                "nullable": true
                              },
                              "translations": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "required": [
                                    "title"
                                  ],
                                  "properties": {
                                    "locale": {
                                      "type": "string",
                                      "example": "de",
                                      "enum": [
                                        "en",
                                        "en-US",
                                        "de"
                                      ]
                                    },
                                    "title": {
                                      "type": "string"
                                    },
                                    "description": {
                                      "type": "string",
                                      "nullable": true
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "configuration": {
                    "entry_point_url": null,
                    "webhook_url": "http://localhost:8080/webhook",
                    "category": "logistics",
                    "oauth_redirect_urls": [
                      "https://example.com/oauth/accept"
                    ],
                    "translations": [
                      {
                        "locale": "de",
                        "title": "Keyline DE",
                        "summary": null,
                        "description": null
                      },
                      {
                        "locale": "en",
                        "title": "Keyline",
                        "summary": null,
                        "description": null
                      }
                    ],
                    "desired_oauth_scopes": [
                      "accounting.invoice_canceled.w",
                      "directory.delegations.rw",
                      "directory.machines.r",
                      "directory.machines.rw",
                      "directory.organization.r",
                      "directory.organization_members.r",
                      "directory.person.r",
                      "mission_control.production_flow.r",
                      "warehouse.items.r",
                      "warehouse.items.rw"
                    ],
                    "subscribed_events": [
                      "accounting.invoice_billed",
                      "directory.revoked_access_token",
                      "keyline.production_started",
                      "warehouse.item_moved"
                    ],
                    "oauth_scopes": [
                      {
                        "name": "clients",
                        "kind": "read_only",
                        "translations": [
                          {
                            "locale": "en",
                            "title": "Read keyline clients",
                            "description": "Allows read only access to all keyline Clients"
                          }
                        ]
                      },
                      {
                        "name": "clients",
                        "kind": "read_write",
                        "translations": [
                          {
                            "locale": "en",
                            "title": "Write and read keyline clients",
                            "description": "Allows write and read access to all keyline Clients"
                          }
                        ]
                      },
                      {
                        "name": "clients",
                        "kind": "write_only",
                        "translations": [
                          {
                            "locale": "en",
                            "title": "Write keyline clients",
                            "description": "Allows write access to all keyline Clients"
                          }
                        ]
                      },
                      {
                        "name": "person",
                        "kind": "read_only",
                        "translations": [
                          {
                            "locale": "en",
                            "title": "Only for persons",
                            "description": null
                          }
                        ]
                      }
                    ],
                    "events": [
                      {
                        "name": "person_banned",
                        "bearer_kind": "Person",
                        "example": null,
                        "translations": [
                          {
                            "locale": "de",
                            "title": "Person gebannt DE",
                            "description": null
                          },
                          {
                            "locale": "en",
                            "title": "Person banned",
                            "description": null
                          }
                        ]
                      },
                      {
                        "name": "production_started",
                        "bearer_kind": "Organization",
                        "example": null,
                        "translations": [
                          {
                            "locale": "en",
                            "title": "Production started",
                            "description": "Production started event"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "example": [
                        "unpermitted_scope"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (Validation error)",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "errors"
                  ],
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "example": {
                        "name": [
                          "can't be blank"
                        ]
                      },
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic",
        "description": "the username is the app's `OAuth client ID` and the password is the app's `OAuth client secret`. Only works for confidential apps."
      },
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "parameters": {
      "pageParam": {
        "name": "page",
        "in": "query",
        "required": false,
        "description": "The page of the current collection that shall be returned",
        "schema": {
          "type": "integer",
          "format": "int32",
          "minimum": 1
        }
      },
      "perPageParam": {
        "name": "per_page",
        "in": "query",
        "required": false,
        "description": "The maximum number of items included in the response, ie., the page size",
        "schema": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 100,
          "default": 100
        }
      },
      "updatedOrCreatedSinceParam": {
        "name": "updated_or_created_since",
        "in": "query",
        "required": false,
        "description": "Filters the response for all entities created or updated after the given date",
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "headers": {
      "Link": {
        "description": "Links to previous and next pages, in the format described in [RFC 8288](https://tools.ietf.org/html/rfc8288)\nThe relations `first`, `prev`, `next` and `last` can be present.",
        "schema": {
          "type": "string",
          "externalDocs": {
            "url": "https://tools.ietf.org/html/rfc8288"
          }
        }
      },
      "Current-Page": {
        "description": "The current page of the paginated response",
        "schema": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 1
            },
            {
              "type": "string",
              "format": "number"
            }
          ]
        }
      },
      "Total-Count": {
        "description": "The total number of items in this collection",
        "schema": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 0
            },
            {
              "type": "string",
              "format": "number"
            }
          ]
        }
      },
      "Total-Pages": {
        "description": "The total number of pages for the current page size in this collection",
        "schema": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 0
            },
            {
              "type": "string",
              "format": "number"
            }
          ]
        }
      }
    },
    "responses": {
      "404-NotFound": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "errors"
              ],
              "properties": {
                "errors": {
                  "type": "array",
                  "example": [
                    "unpermitted_scope"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "429-TooManyRequests": {
        "description": "Too Many Requests"
      },
      "403-Forbidden": {
        "description": "Forbidden (issues with JWT)",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "errors"
              ],
              "properties": {
                "errors": {
                  "type": "array",
                  "example": [
                    "unpermitted_scope"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "401-UnauthorizedJWT": {
        "description": "Unauthorized (e.g. wrong scopes)",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "errors"
              ],
              "properties": {
                "errors": {
                  "type": "array",
                  "example": [
                    "unpermitted_scope"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "401-UnauthorizedBasicAuth": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "errors"
              ],
              "properties": {
                "errors": {
                  "type": "array",
                  "example": [
                    "unpermitted_scope"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "400-BadRequestValidation": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "required": [
                "errors"
              ],
              "type": "object",
              "properties": {
                "errors": {
                  "type": "object",
                  "example": {
                    "name": [
                      "can't be blank"
                    ]
                  },
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "422-UnprocessableEntity": {
        "description": "Unprocessable Entity (Validation error)",
        "content": {
          "application/json": {
            "schema": {
              "required": [
                "errors"
              ],
              "type": "object",
              "properties": {
                "errors": {
                  "type": "object",
                  "example": {
                    "name": [
                      "can't be blank"
                    ]
                  },
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "400-BadRequestInvalidPage": {
        "description": "Bad Request\n\nThis is returned when invalid page or per_page params have been sent.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "errors"
              ],
              "properties": {
                "errors": {
                  "type": "array",
                  "example": [
                    "unpermitted_scope"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
