openapi: 3.0.0
info:
  title: OAuth API
  description: 'This is the documentation of the Connect Print OAuth API Endpoints.'
  version: 1.0.0
servers:
  - url: https://directory.heidelberg.cloud/oauth/

tags:
  - name: OAuth

paths:
  '/authorize':
    get:
      tags:
        - OAuth
      description: '[For more details read this guide](/guide/oauth/redirect-flow.html)'
      summary: Initialize Redirect Flow
      parameters:
        - name: client_id
          in: query
          required: true
          description: 'The client ID for your App as generated by the Directory.'
          schema:
            type: string
        - name: redirect_uri
          in: query
          required: false
          description: 'The URL where users should be redirected by the Directory after authorisation is obtained. This URL needs to exactly match one of the URLs configured during App setup in the directory, it cannot contain any additional parameters. If omitted the user will be redirected to the first URL you specified during App setup.'
          schema:
            type: string
          example: 'https://myapp.com/oauth2/connect-print/callback'
        - name: state
          in: query
          required: false
          description: 'You should set this parameter to a secure random string only known to your App, as a means of protection [against forgery attacks](https://security.stackexchange.com/questions/20187/oauth2-cross-site-request-forgery-and-state-parameter). This parameter can also contain any other arbitrary data. It will be reflected back to your App with the redirect after authorisation is obtained.'
          schema:
            type: string
        - name: login
          in: query
          required: false
          description: 'If provided, this email address will be suggested as the users login.'
          schema:
            type: string
          example: jane.doe@gmail.com
        - name: signup
          in: query
          required: false
          description: 'If omitted or set to `true`, the Directory will allow the user to create a new account during the authorisation process. If set to `false`, a signup is not possible.'
          schema:
            type: string
            enum:
              - 'true'
              - 'false'
        - name: scope
          in: query
          description: >
            Comma separed list of requested scopes. More information in the [scope guides](/guide/oauth/scopes.html).
          schema:
            type: string
            example: Org.warehouse.items.r,Org.directory.machines.rw
        - name: code_challenge_method
          in: query
          required: false
          description: >
            **Required for public clients such as Single Page Applications
            or mobile apps.**
            Method that is used to generate the challenge
            [More information here](/guide/oauth/redirect-flow.html#pkce)
          schema:
            type: string
            enum:
              - 'S256'
              - 'plain'
        - name: code_challenge
          in: query
          required: false
          description: >
            **Required for public clients such as Single Page Applications
            or mobile apps.**
            The actual code challenge
            [More information here](/guide/oauth/redirect-flow.html#pkce)
          schema:
            type: string
      responses:
        '302':
          description: >
            After a user has successfully logged into the Directory and approved access for
            your App, the Directory will redirect the user back to your App, based on
            the `redirect_uri` specified in step 1 or in your App configuration.
            The redirect call will contain the `code` parameter which you
            need to exchange for an access token. It will also contain the `state`
            parameter from the previous step. You should use the `state` parameter
            to ensure that the request originated from your App. If the `state` doesn't
            match the process must be aborted.
          headers:
            Location:
              description: The given `redirect_uri` with the `code` parameter and optionally the `state` parameter
              schema:
                type: string
        '403':
          description: Is returned when the given parameters are invalid.
          content:
            text/plain:
              examples:
                client_id unknown:
                  value: 'error: This client is not known'
                invalid redirect_uri:
                  value: 'error: The redirect URI is unknown or malformed'
              schema:
                type: string
        '422':
          description: Is returned when the client parameter is missing.
          content:
            text/plain:
              schema:
                type: string
                example: 'error: The client ID parameter is missing'
        '400':
          $ref: '#/components/responses/OAuthError'

  '/access_token':
    post:
      tags:
        - OAuth
      summary: Create access token
      description: '[For more details read this guide](/guide/oauth/redirect-flow.html)'
      security:
        - basicAuth: []
      parameters:
        - name: client_id
          description: >
            The client ID for your App as generated by the Directory.
            Required if basic auth was not used.
          in: query
          schema:
            type: string
        - name: client_secret
          description: >
            The client secret for your App as generated by the Directory.
            Required if basic auth was not used.
          in: query
          schema:
            type: string
        - name: code
          in: query
          description: The `code` parameter passed through GET `/oauth/authorize` (redirect flow)
          schema:
            type: string
        - name: code_verifier
          in: query
          required: false
          description: >
            **Required for public clients such as Single Page Applications
            or mobile apps.**
            The code verifier matching the previous code challenge
            [More information here](/guide/oauth/redirect-flow.html#pkce)
          schema:
            type: string
        - name: grant_type
          in: query
          description: >
            Depending on the flow you want to use, this might be different.
            By default, if no `grant_type` is provided, the redirect flow is used and a `code`
            needs to be provided.
            Please read the [guides](/guide/oauth/) for more information.
          schema:
            type: string
            enum:
              - urn:ietf:params:oauth:grant-type:device_code
              - client_credentials
              - refresh_token
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
            text/xml:
              schema:
                $ref: '#/components/schemas/AccessToken'
            text/plain:
              schema:
                type: string
              example: 'access_token=749ceefd1f7909a1773501e0bc57d5b2&token_type=bearer'
        '400':
          $ref: '#/components/responses/OAuthError'
        '404':
          $ref: '#/components/responses/OAuthError'
  '/device_authorizations/authorize':
    post:
      tags:
        - OAuth
      description: '[For more details read this guide](/guide/oauth/device-flow.html)'
      summary: Initialize Device Flow
      parameters:
        - name: client_id
          in: query
          required: true
          description: 'The client ID for your App as generated by the Directory.'
          schema:
            type: string
        - name: scope
          in: query
          description: >
            Comma separed list of requested scopes. More information in the [scope guides](/guide/oauth/scopes.html).
          schema:
            type: string
            example: Org.warehouse.items.r,Org.directory.machines.rw
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceAuthorization'
            text/xml:
              schema:
                type: object
                $ref: '#/components/schemas/DeviceAuthorization'
            text/plain:
              schema:
                type: string
                example: "device_code=pX27zsMN2ViQKta1bGfLmVJE&user_code=AGHI-COPQ&verification_uri=http://www.example.com/oauth/device_authorizations/verify&verification_uri_complete=http://www.example.com/oauth/device_authorizations/verify?code=AGHI-COPQ&expires_in=2019-11-11T11:05:43.339Z&interval=5"
        '422':
          description: Is returned when the client parameter is missing.
          content:
            text/plain:
              schema:
                type: string
                example: 'error: The client ID parameter is missing'

components:
  schemas:
    AccessToken:
      type: object
      xml:
        name: OAuth
      properties:
        access_token:
          type: string
          example: 749ceefd1f7909a1773501e0bc57d5b2
        refresh_token:
          type: string
          example: be4ae927cf49466293049c993ad911b2
        token_type:
          type: string
          enum:
            - bearer
          example: bearer
        scope:
          type: string
          example: warehouse.items.r,directory.machines.rw
        audiences:
          type: array
          example:
            - warehouse
            - directory
          items:
            type: string
        bearer:
          type: object
          properties:
            id:
              type: string
              format: uuid
              example: b1475f65-236c-58b8-96e1-e1778b43beb7
            type:
              type: string
              example: Organization
              enum:
                - Person
                - Organization
    DeviceAuthorization:
      type: object
      xml:
        name: OAuth
      required:
        - device_code
        - user_code
        - verification_uri
        - verification_uri_complete
        - expires_in
        - interval
      properties:
        device_code:
          type: string
          example: pX27zsMN2ViQKta1bGfLmVJE
        user_code:
          type: string
          example: AGHI-COPQ
        verification_uri:
          type: string
          format: uri
          example: 'http://www.example.com/oauth/device_authorizations/verify'
        verification_uri_complete:
          type: string
          format: uri
          example: 'http://www.example.com/oauth/device_authorizations/verify?code=AGHI-COPQ'
        expires_in:
          type: string
          format: date-time
        interval:
          type: integer
          example: 5
          description: Expritation interval in minutes
  responses:
    OAuthError:
      description: OAuth Error
      content:
        application/json:
          example:
            error: invalid_request
            error_description: 'This app is required to use PKCE'
          schema:
            type: object
            properties:
              error:
                type: string
              error_description:
                type: string
        application/xml:
          schema:
            type: object
            xml:
              name: OAuth
            properties:
              error:
                type: string
              error_description:
                type: string
        text/html:
          schema:
            type: string
        text/plain:
          example: "invalid_request\nThis app is required to use PKCE"
          schema:
            type: string
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
      description: >
        the username is the app's `OAuth client ID` and the password
        is the app's `OAuth client secret`.
        Needed for refresh token and client credentials flow.
